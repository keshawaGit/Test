[
    {
        "id": "2eded1c.5830e2e",
        "type": "tab",
        "label": "System Info",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2d4154ab.c87cdc",
        "type": "tab",
        "label": "csv generator",
        "disabled": false,
        "info": ""
    },
    {
        "id": "246ce6ab.bd4c1a",
        "type": "tab",
        "label": "Home",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f433a985.3ae538",
        "type": "tab",
        "label": "File Browser",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9cb4bc4d.96552",
        "type": "ui_group",
        "name": "Lead 2",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "dd70abe0.14cb38",
        "type": "ui_group",
        "name": "Lead 4",
        "tab": "",
        "order": 5,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "c1a14d89.c9822",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 2",
                "default": "#4B7930",
                "baseColor": "#2cc2dd",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Air Quality Monitoring Portal",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 5,
                "gy": 5,
                "cx": 2,
                "cy": 2,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "7c608d.3181bf74",
        "type": "ui_group",
        "name": "Memory",
        "tab": "d436ad3d.0b0a9",
        "order": 3,
        "disp": true,
        "width": 7
    },
    {
        "id": "3edba3a.29e675c",
        "type": "ui_group",
        "name": "System Information",
        "tab": "d436ad3d.0b0a9",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "38eca677.c20d6a",
        "type": "ui_group",
        "name": "Storage",
        "tab": "d436ad3d.0b0a9",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "522b5ae6.1911d4",
        "type": "ui_group",
        "name": "CPU Load",
        "tab": "d436ad3d.0b0a9",
        "order": 2,
        "disp": true,
        "width": 7
    },
    {
        "id": "d436ad3d.0b0a9",
        "type": "ui_tab",
        "name": "System",
        "icon": "gamepad",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e8ae12f4.50308",
        "type": "ui_group",
        "name": "Serial text",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "e8d8fb62.de9638",
        "type": "ui_group",
        "name": "Lead 3",
        "tab": "",
        "order": 4,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "711d371e.0a1fe8",
        "type": "ui_group",
        "name": "Lead 1",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "c261a3ad.65218",
        "type": "ui_group",
        "name": "Lead 5",
        "tab": "",
        "order": 6,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "631df8e7.d27568",
        "type": "ui_group",
        "name": "Lead 6",
        "tab": "",
        "order": 7,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "812ea8e2.d442a8",
        "type": "ui_group",
        "name": "Lead 7",
        "tab": "",
        "order": 8,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "e8f50434.b60c38",
        "type": "ui_group",
        "name": "Lead 8",
        "tab": "",
        "order": 9,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "160e81fb.f1c86e",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "b63d1f91.68095",
        "order": 1,
        "disp": true,
        "width": 25,
        "collapse": false
    },
    {
        "id": "b63d1f91.68095",
        "type": "ui_tab",
        "name": "Report Explorer",
        "icon": "create_new_folder",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6e1bf5f0.a0ae5c",
        "type": "ui_group",
        "name": "Telemetry Data ",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c35e46a8.b04ce8",
        "type": "ui_group",
        "name": "SensorData row 2",
        "tab": "d65502b1.ee517",
        "order": 5,
        "disp": false,
        "width": 22,
        "collapse": false
    },
    {
        "id": "4de9506d.e7364",
        "type": "ui_group",
        "name": "SensorData row 3",
        "tab": "d65502b1.ee517",
        "order": 4,
        "disp": false,
        "width": "22",
        "collapse": false
    },
    {
        "id": "d65502b1.ee517",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "windows",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a7b87918.e26628",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "AQM_data",
        "name": "AQM_data",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.8-flux",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "b1f70f39.8b017",
        "type": "google-service-account",
        "name": "Data Monitor",
        "scope": [
            "https://www.googleapis.com/auth/spreadsheets"
        ],
        "way": "json",
        "check_dialogflow": "",
        "check_speech": ""
    },
    {
        "id": "86031276.81481",
        "type": "ui_group",
        "name": "Main Node",
        "tab": "d65502b1.ee517",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "3957e09f.51e67",
        "type": "ui_group",
        "name": "Sensor Data row 1",
        "tab": "d65502b1.ee517",
        "order": 6,
        "disp": false,
        "width": "22",
        "collapse": false
    },
    {
        "id": "70656f3d.c652f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "b200eea.e5aaa1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "8f3b79e9.6d0fb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "6d75106.91f0ff",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "13630136.0b774f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "3d340851.c37168",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "58e7f0ee.08f56",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "3408d8a4.821ce8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "5178b47b.dddbdc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "d2056d6f.1860c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "38eca677.c20d6a",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "cc7a5eb7.d5296",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "9817157e.de2e28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "6211866d.97bdd8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 10,
        "width": 6,
        "height": 1
    },
    {
        "id": "3cb5598e.2ab9a6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "19a2248e.f4063b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 12,
        "width": 6,
        "height": 1
    },
    {
        "id": "a772ab05.241668",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 13,
        "width": 6,
        "height": 1
    },
    {
        "id": "5924e7d0.8f4918",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 14,
        "width": 6,
        "height": 1
    },
    {
        "id": "407a01e4.6b637",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "test",
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "32867152.1a9afe",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "true",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "1",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "e7e95985.bf96f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "711d371e.0a1fe8",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "dce1b2da.d259f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9cb4bc4d.96552",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "158ba65d.f115ba",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "e8d8fb62.de9638",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "f8440462.64a498",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd70abe0.14cb38",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "7eec8926.c7cef8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c261a3ad.65218",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "21457550.ba310a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "631df8e7.d27568",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "3512f6d6.4137ca",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "812ea8e2.d442a8",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "329aa64e.67c53a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "e8f50434.b60c38",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "8b77cdd5.870e2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2c083d33.8b58e2",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "1f9313dc.8a707c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2c083d33.8b58e2",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "6f14abf8.716a64",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2c083d33.8b58e2",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "5c36b65a.063598",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2c083d33.8b58e2",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "b2995b83.d8fe08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "160e81fb.f1c86e",
        "order": 12,
        "width": 9,
        "height": 1
    },
    {
        "id": "b12941f.1cd05c",
        "type": "ui_group",
        "name": "Detail",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "8da50f69.44fe38",
        "type": "ui_group",
        "name": "Wind",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "14584712.7a2929",
        "type": "ui_group",
        "name": "Condition",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5e0d6747.b726b",
        "type": "ui_group",
        "name": "Forecast",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": "26",
        "collapse": false
    },
    {
        "id": "8dfd123a.747be",
        "type": "ui_group",
        "name": "NAV1",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "16e373f4.645dac",
        "type": "ui_group",
        "name": "NAV2",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "361cf2a6.c1d6fe",
        "type": "ui_group",
        "name": "NAV3",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "1f5ca70a.9612d9",
        "type": "ui_group",
        "name": "NAV4",
        "tab": "",
        "order": 6,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "d9fbfecb.148d9",
        "type": "ui_group",
        "name": "OSD",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 20,
        "collapse": false
    },
    {
        "id": "8844e995.f0e0a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "f297c494.7c4dd8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "90e95dd4.e3b1a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "56b96a6a.38caf4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "f64d1660.4438a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "4ebcdddd.432644",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "ce5a0aed.88e068",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "e1dee6c2.8f0478",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "487dbed0.aa0c7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "b5e7bc38.d37a2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "242bbbb4.3f6384",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "a9091671.e1a908",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "7fd1c5cc.ceb5fc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "2c3d1162.ace7ee",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "43de1a21.21f0c4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "7ef2a222.a44a5c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "d6c329d8.085b88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "223d1d14.f74872",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "3a3e0d9e.464842",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "a3257d76.a99e6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "d6c8e29f.d0f4c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "8dc0cfb.5a7793",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "91ea6ca0.6bf17",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "72ac13d7.c1d1fc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "36f8a3ac.46620c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "c170291.7b0a8d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "1bd47243.5bc79e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d08e6d6.1a32d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "d06c516d.9180c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "42880fe0.9755b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "b0403a45.981ae8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "d13dbc48.1aa36",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "a227c1ff.0a412",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "1e92e78a.d9f068",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "750b9b94.08bbd4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "52b6ea73.0c9084",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "f2c4b5ab.00ea48",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "ab6d9a16.93bdf8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "2e3de2ef.fb856e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "e53a24c0.ef0308",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a1bbd62.be2224",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 22,
        "width": 2,
        "height": 1
    },
    {
        "id": "f9f8aacd.b90118",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 23,
        "width": 2,
        "height": 1
    },
    {
        "id": "1fd8b939.5805f7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "98441cfd.30b41",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 25,
        "width": 2,
        "height": 1
    },
    {
        "id": "66e9fdc3.834dd4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 26,
        "width": 2,
        "height": 1
    },
    {
        "id": "c8a79a6c.4b6098",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "93367266.b4c1f",
        "type": "ui_group",
        "name": "sensor Data row 0",
        "tab": "d65502b1.ee517",
        "order": 3,
        "disp": false,
        "width": "22",
        "collapse": false
    },
    {
        "id": "55a170ed.4121",
        "type": "ui_group",
        "name": "Measuring Cycle",
        "tab": "d65502b1.ee517",
        "order": 2,
        "disp": true,
        "width": "22",
        "collapse": false
    },
    {
        "id": "59e71900.be9188",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86031276.81481",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "b18b80ed.875d9",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86031276.81481",
        "order": 14,
        "width": 4,
        "height": 1
    },
    {
        "id": "95fa68fb.970fa8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86031276.81481",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "1d5a4473.3a22ac",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86031276.81481",
        "order": 16,
        "width": 4,
        "height": 1
    },
    {
        "id": "d9742ca3.cf14c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86031276.81481",
        "order": 17,
        "width": 4,
        "height": 1
    },
    {
        "id": "608f0949.e17868",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86031276.81481",
        "order": 18,
        "width": 4,
        "height": 1
    },
    {
        "id": "a6461c3f.d4844",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86031276.81481",
        "order": 19,
        "width": 4,
        "height": 1
    },
    {
        "id": "3e085df2.444f32",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86031276.81481",
        "order": 20,
        "width": 4,
        "height": 1
    },
    {
        "id": "6a8b13e.c6d0fec",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86031276.81481",
        "order": 21,
        "width": 4,
        "height": 1
    },
    {
        "id": "5e8b96cc.f84108",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "55a170ed.4121",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d901e4b.e89b5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4de9506d.e7364",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "8e42c58.f686538",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "4de9506d.e7364",
        "order": 8,
        "width": 17,
        "height": 1
    },
    {
        "id": "854536e9.4e7e58",
        "type": "inject",
        "z": "2eded1c.5830e2e",
        "name": "update",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 94,
        "y": 245,
        "wires": [
            [
                "9c2f6309.6e94f",
                "204dd57d.fdda7a",
                "624cb7bc.fa7328",
                "1773a8ab.ce6337",
                "e65f0726.d9e648",
                "aa1b9b0d.0a4fe8"
            ]
        ]
    },
    {
        "id": "c477bd4f.17029",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.loadavg[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 100,
        "wires": [
            [
                "2c2258f0.b7f108"
            ]
        ]
    },
    {
        "id": "a92c83d0.93253",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.loadavg[1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "fd19c2c7.c2fb9"
            ]
        ]
    },
    {
        "id": "80be8bdc.4a48f8",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.loadavg[2];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "655f2b69.645494"
            ]
        ]
    },
    {
        "id": "31da9e31.5f2b02",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.memusage*3.85;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 720,
        "wires": [
            [
                "e13436f3.03f288"
            ]
        ]
    },
    {
        "id": "d1fbcac1.6d1358",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "function formatBytes(bytes,decimals) {\n   if(bytes === 0) return '0 Byte';\n   var k = 1000; // or 1024 for binary\n   var dm = decimals + 1 || 3;\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n   var i = Math.floor(Math.log(bytes) / Math.log(k));\n   return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nmsg.payload = formatBytes(msg.payload.totalmem);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 760,
        "wires": [
            [
                "8180911b.9eb55"
            ]
        ]
    },
    {
        "id": "2df8ad9c.8519e2",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "function formatBytes(bytes,decimals) {\n   if(bytes === 0) return '0 Byte';\n   var k = 1000; // or 1024 for binary\n   var dm = decimals + 1 || 3;\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n   var i = Math.floor(Math.log(bytes) / Math.log(k));\n   return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nmsg.payload = formatBytes(msg.payload.freemem);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 800,
        "wires": [
            [
                "8890a962.e10938"
            ]
        ]
    },
    {
        "id": "ef36d626.7c6808",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "function timeConversion(millisec) {\n\n    var seconds = (millisec / 1000).toFixed(1);\n\n    var minutes = (millisec / (1000 * 60)).toFixed(1);\n\n    var hours = (millisec / (1000 * 60 * 60)).toFixed(1);\n\n    var days = (millisec / (1000 * 60 * 60 * 24)).toFixed(1);\n\n    if (seconds < 60) {\n        return seconds + \" Sec\";\n    } else if (minutes < 60) {\n        return minutes + \" Min\";\n    } else if (hours < 24) {\n        return hours + \" Hrs\";\n    } else {\n        return days + \" Days\"\n    }\n}\n\nmsg.payload = timeConversion(msg.payload.uptime * 1000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "9a758b27.30fa58"
            ]
        ]
    },
    {
        "id": "ef5ffe5b.34697",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.hostname;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 400,
        "wires": [
            [
                "be33e559.ef68a8"
            ]
        ]
    },
    {
        "id": "7bbba0f8.29556",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.platform;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "ecef6591.654458"
            ]
        ]
    },
    {
        "id": "e82ffcf9.afa07",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.arch;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 480,
        "wires": [
            [
                "a2d635e0.7262b8"
            ]
        ]
    },
    {
        "id": "3b413552.6f001a",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.release;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 520,
        "wires": [
            [
                "d439e534.2ceaf8"
            ]
        ]
    },
    {
        "id": "f2264a42.9fae58",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.cpus[0].model;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "354b3c88.1462e4"
            ]
        ]
    },
    {
        "id": "5af23f27.cf573",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.loadavg[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "c2691372.0f74a"
            ]
        ]
    },
    {
        "id": "80c26e50.abdc2",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.memusage*3.85;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 680,
        "wires": [
            [
                "dbc08a9.b3c6678"
            ]
        ]
    },
    {
        "id": "4bcc9be.152f164",
        "type": "comment",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load",
        "info": "",
        "x": 600,
        "y": 60,
        "wires": []
    },
    {
        "id": "c68bb286.2422f",
        "type": "comment",
        "z": "2eded1c.5830e2e",
        "name": "Memory Usage",
        "info": "",
        "x": 240,
        "y": 620,
        "wires": []
    },
    {
        "id": "eaca0a52.0f5678",
        "type": "comment",
        "z": "2eded1c.5830e2e",
        "name": "System Information",
        "info": "",
        "x": 330,
        "y": 300,
        "wires": []
    },
    {
        "id": "5d65603c.0c3ce",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = msg.payload[0].size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 960,
        "wires": [
            [
                "f30e8a25.0537b8"
            ]
        ]
    },
    {
        "id": "30edef8f.f5f03",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = msg.payload[0].used.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1000,
        "wires": [
            [
                "10dcdfae.21374"
            ]
        ]
    },
    {
        "id": "b43465b3.c58528",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = msg.payload[0].available.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1040,
        "wires": [
            [
                "2f124f9a.51c5a"
            ]
        ]
    },
    {
        "id": "b824e87a.421b18",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = Math.floor(msg.payload[0].capacity*100);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1080,
        "wires": [
            [
                "9bb5f640.219d58"
            ]
        ]
    },
    {
        "id": "8180911b.9eb55",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "7c608d.3181bf74",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Total Memory",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 500,
        "y": 760,
        "wires": []
    },
    {
        "id": "8890a962.e10938",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "7c608d.3181bf74",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Free Memory",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 490,
        "y": 800,
        "wires": []
    },
    {
        "id": "9a758b27.30fa58",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 620,
        "y": 360,
        "wires": []
    },
    {
        "id": "be33e559.ef68a8",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Hostname",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 630,
        "y": 400,
        "wires": []
    },
    {
        "id": "ecef6591.654458",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Platform",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 620,
        "y": 440,
        "wires": []
    },
    {
        "id": "a2d635e0.7262b8",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Arch",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 610,
        "y": 480,
        "wires": []
    },
    {
        "id": "d439e534.2ceaf8",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Release",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 620,
        "y": 520,
        "wires": []
    },
    {
        "id": "354b3c88.1462e4",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "CPU",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 610,
        "y": 560,
        "wires": []
    },
    {
        "id": "f30e8a25.0537b8",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Capacity",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 640,
        "y": 960,
        "wires": []
    },
    {
        "id": "10dcdfae.21374",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Used",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 630,
        "y": 1000,
        "wires": []
    },
    {
        "id": "2f124f9a.51c5a",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Available",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 640,
        "y": 1040,
        "wires": []
    },
    {
        "id": "da9b51ca.d120d",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Figures in KB",
        "label": "Figures in KB",
        "format": "",
        "layout": "row-right",
        "x": 660,
        "y": 880,
        "wires": []
    },
    {
        "id": "2c2258f0.b7f108",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load 1",
        "group": "522b5ae6.1911d4",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "1 Minute",
        "label": "load",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "fd19c2c7.c2fb9",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load 2",
        "group": "522b5ae6.1911d4",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "5 Minutes",
        "label": "load",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "655f2b69.645494",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load 3",
        "group": "522b5ae6.1911d4",
        "order": 8,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "15 Minutes",
        "label": "load",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "e13436f3.03f288",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "Memory Usage",
        "group": "7c608d.3181bf74",
        "order": 2,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "1 Minute",
        "label": "Usage",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "915",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 500,
        "y": 720,
        "wires": []
    },
    {
        "id": "9bb5f640.219d58",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "Used",
        "group": "38eca677.c20d6a",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Used",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca4d4d"
        ],
        "x": 630,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c2691372.0f74a",
        "type": "ui_chart",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load - Historical",
        "group": "522b5ae6.1911d4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "CPU Load Historical",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 640,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "dbc08a9.b3c6678",
        "type": "ui_chart",
        "z": "2eded1c.5830e2e",
        "name": "Memory - 24 Hours",
        "group": "7c608d.3181bf74",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Memory Historical",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "915",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 510,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "4ccfed2e.587d14",
        "type": "comment",
        "z": "2eded1c.5830e2e",
        "name": "Storage Data",
        "info": "",
        "x": 170,
        "y": 860,
        "wires": []
    },
    {
        "id": "4b87ebb5.896c64",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = msg.payload[0].mount;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 920,
        "wires": [
            [
                "1da6a70a.4d7c89"
            ]
        ]
    },
    {
        "id": "1da6a70a.4d7c89",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Mount",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 630,
        "y": 920,
        "wires": []
    },
    {
        "id": "65e2b268.21c8dc",
        "type": "debug",
        "z": "2eded1c.5830e2e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 160,
        "y": 1080,
        "wires": []
    },
    {
        "id": "9c2f6309.6e94f",
        "type": "OS",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 230,
        "y": 400,
        "wires": [
            [
                "ef5ffe5b.34697",
                "7bbba0f8.29556",
                "e82ffcf9.afa07",
                "3b413552.6f001a"
            ]
        ]
    },
    {
        "id": "aa1b9b0d.0a4fe8",
        "type": "Drives",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "5d65603c.0c3ce",
                "30edef8f.f5f03",
                "b43465b3.c58528",
                "b824e87a.421b18",
                "4b87ebb5.896c64",
                "65e2b268.21c8dc"
            ]
        ]
    },
    {
        "id": "204dd57d.fdda7a",
        "type": "Uptime",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 240,
        "y": 360,
        "wires": [
            [
                "ef36d626.7c6808"
            ]
        ]
    },
    {
        "id": "624cb7bc.fa7328",
        "type": "CPUs",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 230,
        "y": 440,
        "wires": [
            [
                "f2264a42.9fae58"
            ]
        ]
    },
    {
        "id": "1773a8ab.ce6337",
        "type": "Loadavg",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 171,
        "y": 165,
        "wires": [
            [
                "c477bd4f.17029",
                "a92c83d0.93253",
                "80be8bdc.4a48f8",
                "5af23f27.cf573"
            ]
        ]
    },
    {
        "id": "e65f0726.d9e648",
        "type": "Memory",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 120,
        "y": 720,
        "wires": [
            [
                "31da9e31.5f2b02",
                "d1fbcac1.6d1358",
                "2df8ad9c.8519e2",
                "80c26e50.abdc2"
            ]
        ]
    },
    {
        "id": "a67ba4d2.2daf78",
        "type": "ui_button",
        "z": "2eded1c.5830e2e",
        "name": "",
        "group": "3edba3a.29e675c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log off",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Are You Sure ?",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 110,
        "y": 1200,
        "wires": [
            [
                "5e070a32.4daaa4"
            ]
        ]
    },
    {
        "id": "e4b8c220.82906",
        "type": "exec",
        "z": "2eded1c.5830e2e",
        "command": "shutdown /l",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Reboot",
        "x": 820,
        "y": 1160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "13b544a3.d850cb",
        "type": "ui_button",
        "z": "2eded1c.5830e2e",
        "name": "",
        "group": "3edba3a.29e675c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "Are You Sure ?",
        "payloadType": "str",
        "topic": "",
        "x": 109.61107635498047,
        "y": 1256.4722290039062,
        "wires": [
            [
                "432c2342.22507c"
            ]
        ]
    },
    {
        "id": "7b7e4f8d.ad7b2",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "IP Address",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 710,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6cccbba3.f20974",
        "type": "inject",
        "z": "2eded1c.5830e2e",
        "name": "",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 124.24151611328125,
        "y": 1315.567011833191,
        "wires": [
            [
                "642b1faf.4976f"
            ]
        ]
    },
    {
        "id": "5e070a32.4daaa4",
        "type": "ui_toast",
        "z": "2eded1c.5830e2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "CANCEL",
        "raw": false,
        "topic": "",
        "name": "Notification",
        "x": 308.3333053588867,
        "y": 1202.999930381775,
        "wires": [
            [
                "bd99e6c8.122598"
            ]
        ]
    },
    {
        "id": "bd99e6c8.122598",
        "type": "switch",
        "z": "2eded1c.5830e2e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCEL",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 488.3333053588867,
        "y": 1202.999930381775,
        "wires": [
            [
                "e4b8c220.82906"
            ],
            []
        ]
    },
    {
        "id": "432c2342.22507c",
        "type": "ui_toast",
        "z": "2eded1c.5830e2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "CANCEL",
        "raw": false,
        "topic": "",
        "name": "Notification",
        "x": 308.3333053588867,
        "y": 1262.999930381775,
        "wires": [
            [
                "f0002c1d.7b2d7"
            ]
        ]
    },
    {
        "id": "f0002c1d.7b2d7",
        "type": "switch",
        "z": "2eded1c.5830e2e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCEL",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 488.3333053588867,
        "y": 1262.999930381775,
        "wires": [
            [
                "1434360d.a6430a"
            ],
            []
        ]
    },
    {
        "id": "782b06fb.cc1df8",
        "type": "comment",
        "z": "2d4154ab.c87cdc",
        "name": "Auto Logger old data archiving",
        "info": "Generate file name that are to be archived.\n\nIdea is that this generates a list of file names for let's say between current day-5 days to current day-10 days, so all files that are 5-10 days old will get archived. And this can be executed daily or weekly, and the interval allows some overlap (e.g. the program fails, Node-Red was down, etc.)\n\nInject node should contain a JSON:\n{    \n    \"start\": 20,    \n    \"end\": 10\n}\n\nThis will generate file names D-20 to D-10 days.\nStart should be greather than end!\n",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "f14e2f71.1ad87",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Raw Data Filename generator",
        "func": "let output = [];\nfor (var i=msg.payload.end;i<msg.payload.start;i++) {\n    \n    // calculate the date\n    let now = new Date();\n    now.setTime(now.getTime() - 1000*60*60*24*i);\n    let yyyy = now.getFullYear();\n    let mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\n    let dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n    let hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\n    let mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n    let ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n    \n    let newfile = { \"topic\": \"archive\", \"payload\": \"\"};\n    // Generate out file name pattern\n    newfile.fname = \"Raw Data_\"+ yyyy + mm + dd + \".csv\";\n    // Full filename with path \n    newfile.filename = \"/home/pi/Desktop/datalogger/\"+ newfile.fname;\n    \n    // Shell script only needs the filename without the path\n    newfile.payload = newfile.fname;\n    output.push(newfile);\n\n}\n\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "5ba61ce5.11d8a4"
            ]
        ]
    },
    {
        "id": "b57ab78e.cf1658",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Process data Filename generator",
        "func": "let output = [];\nfor (var i=msg.payload.end;i<msg.payload.start;i++) {\n    \n    // calculate the date\n    let now = new Date();\n    now.setTime(now.getTime() - 1000*60*60*24*i);\n    let yyyy = now.getFullYear();\n    let mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\n    let dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n    let hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\n    let mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n    let ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n    \n    let newfile = { \"topic\": \"archive\", \"payload\": \"\"};\n    // Generate out file name pattern\n    newfile.fname = \"data_\"+ yyyy + mm + dd + \".csv\";\n    // Full filename with path \n    newfile.filename = \"/home/pi/datalog/\"+ newfile.fname;\n    \n    // Shell script only needs the filename without the path\n    newfile.payload = newfile.fname;\n    output.push(newfile);\n\n}\n\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 200,
        "wires": [
            [
                "5ba61ce5.11d8a4"
            ]
        ]
    },
    {
        "id": "5e47f3b4.7c779c",
        "type": "inject",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "40 02 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"start\":20,\"end\":10}",
        "payloadType": "json",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "f14e2f71.1ad87",
                "b57ab78e.cf1658"
            ]
        ]
    },
    {
        "id": "ad87fee.c53d5",
        "type": "exec",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "command": "/home/pi/Desktop/datalogger/log_upload.sh",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "File upload",
        "x": 710,
        "y": 140,
        "wires": [
            [],
            [],
            [
                "5f0f09f4.a09208"
            ]
        ]
    },
    {
        "id": "5f0f09f4.a09208",
        "type": "switch",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Return code",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 240,
        "wires": [
            [],
            [
                "639dcab5.1028b4"
            ]
        ]
    },
    {
        "id": "49210be0.0dbbe4",
        "type": "exec",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "command": "sudo rm ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "File delete",
        "x": 1130,
        "y": 140,
        "wires": [
            [],
            [],
            [
                "1fee1de5.695e32"
            ]
        ]
    },
    {
        "id": "639dcab5.1028b4",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Get filename",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 140,
        "wires": [
            [
                "49210be0.0dbbe4"
            ]
        ]
    },
    {
        "id": "1fee1de5.695e32",
        "type": "switch",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Return code",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 160,
        "wires": [
            [
                "1890401d.96f9"
            ],
            []
        ]
    },
    {
        "id": "5ba61ce5.11d8a4",
        "type": "delay",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 680,
        "y": 220,
        "wires": [
            [
                "ad87fee.c53d5"
            ]
        ]
    },
    {
        "id": "9da5c02.66c844",
        "type": "comment",
        "z": "2d4154ab.c87cdc",
        "name": "log_upload.sh",
        "info": "ftp -inv 192.168.1.x << EOF\n    user <username> <password>\n    binary\n    cd backup/logs\n    lcd /home/pi/datalog\n    put $1\nEOF",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "f79c29b7.055068",
        "type": "comment",
        "z": "2d4154ab.c87cdc",
        "name": "Auto Logger",
        "info": "",
        "x": 70,
        "y": 280,
        "wires": []
    },
    {
        "id": "f46f569e.ff1a08",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"Graph_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"F:/Project works & Backup/INSEED PROJECTS/Air Quality Monitoring/Database/Files/\"+ msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 620,
        "wires": [
            [
                "fa6936f.7758dc8"
            ]
        ]
    },
    {
        "id": "fa6936f.7758dc8",
        "type": "fs-file-lister",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "start": "F:/Project works & Backup/INSEED PROJECTS/Air Quality Monitoring/Database/Files",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 1040,
        "y": 620,
        "wires": [
            [
                "a96494a5.b0f4c8",
                "3db97537.b889ea"
            ]
        ]
    },
    {
        "id": "a96494a5.b0f4c8",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1210,
        "y": 680,
        "wires": []
    },
    {
        "id": "3db97537.b889ea",
        "type": "switch",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1190,
        "y": 620,
        "wires": [
            [
                "3cb887e8.e533a8"
            ],
            [
                "f3ba1c7a.54ef5"
            ]
        ]
    },
    {
        "id": "fe6f74d5.674ec8",
        "type": "csv",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Timestamp,Pressure,Altitude,Humidity,Temperature,co,no2,o3,so2,Latitude,Longitude",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1530,
        "y": 600,
        "wires": [
            [
                "3a8ebdf3.772cc2"
            ]
        ]
    },
    {
        "id": "3a8ebdf3.772cc2",
        "type": "file",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1690,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "f226a86d.9bdfb8",
        "type": "csv",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Timestamp,Pressure,Altitude,Humidity,Temperature,co,no2,o3,so2,Latitude,Longitude",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1530,
        "y": 640,
        "wires": [
            [
                "3a8ebdf3.772cc2"
            ]
        ]
    },
    {
        "id": "3cb887e8.e533a8",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 600,
        "wires": [
            [
                "fe6f74d5.674ec8"
            ]
        ]
    },
    {
        "id": "f3ba1c7a.54ef5",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 640,
        "wires": [
            [
                "f226a86d.9bdfb8"
            ]
        ]
    },
    {
        "id": "1890401d.96f9",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Archive remover",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 160,
        "wires": []
    },
    {
        "id": "173f827b.c2ad7e",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "set data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 560,
        "wires": []
    },
    {
        "id": "b6c32297.959d9",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Set data",
        "func": "var now = new Date();\n\nmsg.payload = {\n    \"Timestamp\" : now.toLocaleTimeString(),\n    //\"timestamp\" : now.getTime(),\n    \"Device\" : msg.payload.Device,\n    \"Status\" : msg.payload.status,\n    \"Network\" : msg.payload.network,\n    \"RSSI\" : msg.payload.rssi,\n    \"MQTT_IP\" : msg.payload.mqttIP,\n    \"Pressure\" : msg.payload.pressure,\n    \"Altitude\" : parseFloat((msg.payload.pressure) * 0.09).toFixed(2),\n    \"Humidity\" : msg.payload.humidity,\n    \"Temperature\" : msg.payload.temp,\n    \"co\" : msg.payload.co,\n    \"no2\" : msg.payload.no2,\n    \"o3\" : msg.payload.o3,\n    \"so2\" : msg.payload.so2,\n    \"Latitude\" : msg.payload.gps[0],\n    \"Longitude\" : msg.payload.gps[1]\n}\n//return sensorData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 480,
        "wires": [
            [
                "cc799962.f2ff28",
                "ad159824.6b14a8"
            ]
        ]
    },
    {
        "id": "ad159824.6b14a8",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"data_STC\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"F:/Project works & Backup/INSEED PROJECTS/Air Quality Monitoring/Database/\"+ msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 480,
        "wires": [
            [
                "f781bdd8.b6939"
            ]
        ]
    },
    {
        "id": "f781bdd8.b6939",
        "type": "fs-file-lister",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "start": "F:/Project works & Backup/INSEED PROJECTS/Air Quality Monitoring/Database",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 1040,
        "y": 480,
        "wires": [
            [
                "6c58826e.2cbd3c"
            ]
        ]
    },
    {
        "id": "6c58826e.2cbd3c",
        "type": "switch",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1190,
        "y": 480,
        "wires": [
            [
                "432271ec.d8bc"
            ],
            [
                "3e046a72.0b3856"
            ]
        ]
    },
    {
        "id": "e9db32e4.1aa61",
        "type": "csv",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Timestamp,Device,Status,Network,RSSI,MQTT_IP,Pressure,Altitude,Humidity,Temperature,co,no2,o3,so2,Latitude,Longitude",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1530,
        "y": 460,
        "wires": [
            [
                "f0ad42ea.6cb3f"
            ]
        ]
    },
    {
        "id": "f0ad42ea.6cb3f",
        "type": "file",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1690,
        "y": 460,
        "wires": [
            [
                "91373699.7559c8"
            ]
        ]
    },
    {
        "id": "458286ba.a471d8",
        "type": "csv",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Timestamp,Device,Status,Network,RSSI,MQTT_IP,Pressure,Altitude,Humidity,Temperature,co,no2,o3,so2,Latitude,Longitude",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1530,
        "y": 500,
        "wires": [
            [
                "f0ad42ea.6cb3f"
            ]
        ]
    },
    {
        "id": "432271ec.d8bc",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 460,
        "wires": [
            [
                "e9db32e4.1aa61"
            ]
        ]
    },
    {
        "id": "3e046a72.0b3856",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 500,
        "wires": [
            [
                "458286ba.a471d8"
            ]
        ]
    },
    {
        "id": "cc799962.f2ff28",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "set data_STC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 420,
        "wires": []
    },
    {
        "id": "3c25286c.3cfc68",
        "type": "comment",
        "z": "f433a985.3ae538",
        "name": "File Browser",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 150,
        "y": 100,
        "wires": []
    },
    {
        "id": "4aa72dba.116c94",
        "type": "fs-file-lister",
        "z": "f433a985.3ae538",
        "name": "Files",
        "start": "F:\\Project works & Backup\\INSEED PROJECTS\\Air Quality Monitoring\\Database\\FIles",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 550,
        "y": 200,
        "wires": [
            [
                "8dc22637.91d278",
                "57bd17a2.4e8028"
            ]
        ]
    },
    {
        "id": "4be2e27b.75d70c",
        "type": "inject",
        "z": "f433a985.3ae538",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "F:\\Project works & Backup\\INSEED PROJECTS\\Air Quality Monitoring\\Database\\FIles",
        "payloadType": "str",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "61751ac1.003644",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "f738bdbb.6767e",
        "type": "ui_dropdown",
        "z": "f433a985.3ae538",
        "name": "File Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a file",
        "group": "160e81fb.f1c86e",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 950,
        "y": 200,
        "wires": [
            [
                "41177c0d.322944"
            ]
        ]
    },
    {
        "id": "8dc22637.91d278",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a file\n    obj = {};\n    obj [msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 200,
        "wires": [
            [
                "f738bdbb.6767e"
            ]
        ]
    },
    {
        "id": "3e464c8a.3b8e64",
        "type": "ui_template",
        "z": "f433a985.3ae538",
        "group": "160e81fb.f1c86e",
        "name": "",
        "order": 6,
        "width": 25,
        "height": 6,
        "format": "<div ng-bind-html=\"msg.payload\" height=\"400\" style=\"height: 400px;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1140,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "b9280615.9f42b8",
        "type": "template",
        "z": "f433a985.3ae538",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\">\n    <tr><th>File Name</th><th>Size</th><th>Created</th><th>Changed</th></tr>\n    {{#payload}}\n        <tr>\n            <td><a href=\"/download?filename={{name}}\" target=\"blank\">{{fname}}</a></td>\n            <td>{{stat.size}}</td>\n            <td>{{stat.created}}</td>\n            <td>{{stat.changed}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 980,
        "y": 260,
        "wires": [
            [
                "3e464c8a.3b8e64"
            ]
        ]
    },
    {
        "id": "57bd17a2.4e8028",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Convert timestamps",
        "func": "for (var i=0; i<msg.payload.length; i++) {\n    msg.payload[i].stat.created = msg.payload[i].stat.created.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.changed = msg.payload[i].stat.changed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.accessed = msg.payload[i].stat.accessed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.statusChanged = msg.payload[i].stat.statusChanged.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "b9280615.9f42b8"
            ]
        ]
    },
    {
        "id": "742d5535.fc3a5c",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "7ebd4be6.71b204"
            ]
        ]
    },
    {
        "id": "53a544e1.1689fc",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    // and delete the context/selection as we are deleting the file as well\n    flow.set(\"fileselected\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "ea928f9a.4a88a"
            ]
        ]
    },
    {
        "id": "ea928f9a.4a88a",
        "type": "file",
        "z": "f433a985.3ae538",
        "name": "Delete file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 580,
        "y": 420,
        "wires": [
            [
                "4aa72dba.116c94",
                "906fa929.281cf8"
            ]
        ]
    },
    {
        "id": "d42f6ada.5dca98",
        "type": "http in",
        "z": "f433a985.3ae538",
        "name": "",
        "url": "/download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "e3a5f500.b3e028"
            ]
        ]
    },
    {
        "id": "b7c16d13.416d",
        "type": "http response",
        "z": "f433a985.3ae538",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 560,
        "wires": []
    },
    {
        "id": "e3a5f500.b3e028",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Get the file name",
        "func": "msg.filename = msg.req.query.filename;\nmsg.contentdisposition = \"attachment; filename=\\\"\" + msg.req.query.filename.replace(/^.*(\\\\|\\/|\\:)/, '') + \"\\\"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 560,
        "wires": [
            [
                "6061ea5.bf53514"
            ]
        ],
        "outputLabels": [
            "Folder selected"
        ]
    },
    {
        "id": "6061ea5.bf53514",
        "type": "file in",
        "z": "f433a985.3ae538",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 620,
        "y": 560,
        "wires": [
            [
                "e14ba809.ef1748"
            ]
        ]
    },
    {
        "id": "e14ba809.ef1748",
        "type": "change",
        "z": "f433a985.3ae538",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/csv",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Disposition",
                "pt": "msg",
                "to": "contentdisposition",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "b7c16d13.416d"
            ]
        ]
    },
    {
        "id": "6a41611a.af06f",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Graph",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "show_chart",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "f57bd6fc.ed3908"
            ]
        ]
    },
    {
        "id": "f57bd6fc.ed3908",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 680,
        "wires": [
            [
                "241ded77.2a0c72"
            ]
        ]
    },
    {
        "id": "241ded77.2a0c72",
        "type": "file in",
        "z": "f433a985.3ae538",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 480,
        "y": 680,
        "wires": [
            [
                "2847902a.4a90c"
            ]
        ]
    },
    {
        "id": "2847902a.4a90c",
        "type": "csv",
        "z": "f433a985.3ae538",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 630,
        "y": 680,
        "wires": [
            [
                "bbc0af9a.a1786",
                "3d57c621.1a105a",
                "1f215bca.eef9b4"
            ]
        ]
    },
    {
        "id": "53bf4a5.3f987b4",
        "type": "debug",
        "z": "f433a985.3ae538",
        "name": "chart",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 600,
        "wires": []
    },
    {
        "id": "3d57c621.1a105a",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Format data for chart",
        "func": "var chart = [{\n    \"series\":[],\n    \"data\":[],\n    \"labels\":[\"Sensor Data\"]\n}];\n\n\n/*\nvar pressure = [];\nvar out2 = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n    pressure.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].pressure});\n    out2.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].out2*200});\n\n}\nchart[0].data.push(pressure);\nchart[0].data.push(out2);\n*/\n\nlet columns = 0;\nnode.warn(\"Init column\"+columns.toString());\n\nfor(var series in msg.payload[0]) {\n    if(series!==\"Timestamp\") {\n        chart[0].series.push(series);\n        chart[0].data.push([]);\n        columns++;\n    }\n}\nnode.warn(\"final column\"+columns.toString());\n\nfor (var j=0; j<msg.payload.length; j++) {\n   for(var i=0;i<columns;i++) {\n       chart[0].data[i].push({\"x\":msg.payload[j].Timestamp, \"y\":msg.payload[j][chart[0].series[i]]});\n   } \n}\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 680,
        "wires": [
            [
                "baf7a705.7c1bc8",
                "53bf4a5.3f987b4"
            ]
        ]
    },
    {
        "id": "baf7a705.7c1bc8",
        "type": "ui_chart",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 13,
        "width": 25,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1500",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1150,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "36b29d62.eeccd2",
        "type": "ui_toast",
        "z": "f433a985.3ae538",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": false,
        "topic": "",
        "name": "Confirmation",
        "x": 550,
        "y": 360,
        "wires": [
            [
                "43fc7418.a3109c"
            ]
        ]
    },
    {
        "id": "7ebd4be6.71b204",
        "type": "change",
        "z": "f433a985.3ae538",
        "name": "Set message",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Delete confirmation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to delete this file?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 360,
        "wires": [
            [
                "36b29d62.eeccd2"
            ]
        ]
    },
    {
        "id": "43fc7418.a3109c",
        "type": "switch",
        "z": "f433a985.3ae538",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 360,
        "wires": [
            [
                "53a544e1.1689fc"
            ]
        ]
    },
    {
        "id": "d28e7c.268be188",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"/\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('\\\\');\n    the_arr.pop();\n    folder=the_arr.join('\\\\'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "4aa72dba.116c94",
                "f2ec5d63.9220d",
                "906fa929.281cf8"
            ]
        ]
    },
    {
        "id": "f2ec5d63.9220d",
        "type": "ui_text",
        "z": "f433a985.3ae538",
        "group": "160e81fb.f1c86e",
        "order": 4,
        "width": 17,
        "height": 1,
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "x": 540,
        "y": 140,
        "wires": []
    },
    {
        "id": "808a06e5.e8cfa8",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "ca206d70.c1ff5",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "folder_open",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "30685cf6.53bba4"
            ]
        ]
    },
    {
        "id": "30685cf6.53bba4",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Change folder",
        "func": "// Get the filename from the flow context\nlet folderselected = flow.get(\"folderselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (folderselected===undefined) {\n    return;\n}\n\nmsg.topic = \"change\";\nmsg.payload = folderselected;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 480,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "345bb19c.f39eae",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "autorenew",
        "payload": "F:\\Project works & Backup\\INSEED PROJECTS\\Air Quality Monitoring\\Database",
        "payloadType": "str",
        "topic": "change",
        "topicType": "str",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "906fa929.281cf8",
        "type": "fs-file-lister",
        "z": "f433a985.3ae538",
        "name": "Folders",
        "start": "F:\\Project works & Backup\\INSEED PROJECTS\\Air Quality Monitoring\\Database\\FIles",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 560,
        "y": 300,
        "wires": [
            [
                "d28e19ae.b01a28"
            ]
        ]
    },
    {
        "id": "95a0e663.93b8e8",
        "type": "ui_dropdown",
        "z": "f433a985.3ae538",
        "name": "Folder Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a folder",
        "group": "160e81fb.f1c86e",
        "order": 7,
        "width": 5,
        "height": 1,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 960,
        "y": 300,
        "wires": [
            [
                "8aea6833.5b9e28"
            ]
        ]
    },
    {
        "id": "d28e19ae.b01a28",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a foler\n    obj = {};\n    obj [\"[\"+msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')+\"]\"]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 300,
        "wires": [
            [
                "95a0e663.93b8e8"
            ]
        ]
    },
    {
        "id": "41177c0d.322944",
        "type": "change",
        "z": "f433a985.3ae538",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "fileselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "8aea6833.5b9e28",
        "type": "change",
        "z": "f433a985.3ae538",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "folderselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "fc04606f.f61eb",
        "type": "ui_switch",
        "z": "f433a985.3ae538",
        "name": "",
        "label": "Hidden",
        "tooltip": "Show hidden files or not",
        "group": "160e81fb.f1c86e",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "hidden",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check_box",
        "oncolor": "#000000",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "check_box_outline_blank",
        "offcolor": "#000000",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "bbc0af9a.a1786",
        "type": "debug",
        "z": "f433a985.3ae538",
        "name": "csv payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 780,
        "wires": []
    },
    {
        "id": "d45877c9.cc06d8",
        "type": "influxdb out",
        "z": "2d4154ab.c87cdc",
        "influxdb": "a7b87918.e26628",
        "name": "sensors",
        "measurement": "sensor_data",
        "precision": "",
        "retentionPolicy": "",
        "database": "AQM_data",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1340,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2522b5c8.47886a",
        "type": "comment",
        "z": "2d4154ab.c87cdc",
        "name": "Influx DB",
        "info": "",
        "x": 100,
        "y": 780,
        "wires": []
    },
    {
        "id": "e45d6f79.e2412",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-01",
        "func": "return { \n    \n    payload: [{value_str : msg.payload.toString()},{Lead: \"Device\",\n            checked:\"no\"}]\n    \n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 780,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "2f67912c.c07a0e",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_02",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value_str : msg.payload.toString()\n        },\n        // Tags\n        {\n            Lead: \"status\",\n            checked:\"no\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 820,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "8b4a1071.b1d7f",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_03",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value_str : msg.payload.toString()\n        },\n        // Tags\n        {\n            Lead: \"Network\",\n            checked:\"no\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 860,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "d5914a2a.ad24a8",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-04",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value:parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"RSSI\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 900,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "3eb5516a.8267ae",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_05",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value_str : msg.payload.toString()\n        },\n        // Tags\n        {\n            Lead: \"MQTT IP\",\n            checked:\"no\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 940,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "765d673b.7bb658",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_06",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Pressure\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 980,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "63fc0a3c.064764",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-07",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Humidity\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1020,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "327a05c.766fffa",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_09",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Carbon Monoxide\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1100,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "f9144d6e.b065a",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-10",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Nitrogen Dioxide\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1140,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "fb866a03.706db8",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_11",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Ozone\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1180,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "9da1ab3e.c97898",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_12",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Sulphur Dioxide\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1220,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "e5e34310.e06f4",
        "type": "google-spreadsheet",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "",
        "auth": "b1f70f39.8b017",
        "sheet": "1v-3t-WHTid19PY_r1UwEoxwFMk8BeXpS0aAwKjzZmKE",
        "range": "sheet1",
        "method": "append",
        "direction": "line",
        "action": "set",
        "clear": false,
        "line": false,
        "column": false,
        "fields": "all",
        "save": "_sheet",
        "selfields": [
            ""
        ],
        "cell_l": "",
        "cell_c": "",
        "input": "",
        "output": "",
        "saveType": "global",
        "inputType": "msg",
        "outputType": "msg",
        "sheetType": "str",
        "rangeType": "str",
        "cell_lType": "str",
        "cell_cType": "str",
        "x": 760,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "441fdcc6.e99da4",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "file content",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "37073de4.b7c1c2",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Set data",
        "func": "var now = new Date();\n\nstr = msg.payload\ns1 = str.substring(str.indexOf(\":\")+1);\nmsg.payload =s1.trim();\n\nvar sensorData = [];\nvar values = msg.payload.trim().split(\",\");\nfor(var v in values){\n    sensorData.push(values[v]);\n}\n//return sensorData;\nmsg.payload = {\n    //\"timestamp\" : now.toLocaleTimeString()+String(sensorData[0]),\n    \"data\" :String(sensorData[0])+String(sensorData[1])+String(sensorData[2])+\n    String(sensorData[3])+String(sensorData[4])+String(sensorData[5])+\n    String(sensorData[6])+String(sensorData[7])+String(sensorData[8])+\n    String(sensorData[9])+String(sensorData[10])+String(sensorData[11])\n\n}\n//return sensorData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 340,
        "wires": [
            [
                "e5e34310.e06f4",
                "441fdcc6.e99da4"
            ]
        ]
    },
    {
        "id": "dc7b40c0.2f609",
        "type": "debug",
        "z": "2eded1c.5830e2e",
        "name": "Local Ip",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1480,
        "wires": []
    },
    {
        "id": "b97bc1c0.cb899",
        "type": "ui_template",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "name": "Clock Toolbar",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toLocaleString());\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n}\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 860,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "4dc9a552.44753c",
        "type": "delay",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 260,
        "y": 300,
        "wires": [
            [
                "37073de4.b7c1c2"
            ]
        ]
    },
    {
        "id": "1434360d.a6430a",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "close tab",
        "func": "window.top.close();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1280,
        "wires": [
            [
                "9163a012.53aa7"
            ]
        ]
    },
    {
        "id": "642b1faf.4976f",
        "type": "NetworkIntf",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 290,
        "y": 1380,
        "wires": [
            [
                "dc7b40c0.2f609",
                "ae4c5841.129e88"
            ]
        ]
    },
    {
        "id": "ae4c5841.129e88",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.networkInterfaces[\"Wi-Fi\"][1].address;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1380,
        "wires": [
            [
                "7b7e4f8d.ad7b2",
                "99bf6c91.19f94"
            ]
        ]
    },
    {
        "id": "99bf6c91.19f94",
        "type": "debug",
        "z": "2eded1c.5830e2e",
        "name": "Local Ipv4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1420,
        "wires": []
    },
    {
        "id": "9163a012.53aa7",
        "type": "debug",
        "z": "2eded1c.5830e2e",
        "name": "close tab",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1260,
        "wires": []
    },
    {
        "id": "31caf491.0fcd6c",
        "type": "worldmap",
        "z": "2eded1c.5830e2e",
        "name": "GPS location",
        "lat": "",
        "lon": "",
        "zoom": "4",
        "layer": "Terrain",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "x": 1070,
        "y": 1060,
        "wires": []
    },
    {
        "id": "98157d2.748f38",
        "type": "ui_button",
        "z": "246ce6ab.bd4c1a",
        "name": "status",
        "group": "86031276.81481",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "{{msg.payload.ui_control.words}}",
        "tooltip": "",
        "color": "{{msg.payload.ui_control.color}}",
        "bgcolor": "{{msg.payload.ui_control.bgcolor}}",
        "icon": "{{msg.payload.ui_control.icon}}",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 390,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "1bf52845.012bd8",
        "type": "comment",
        "z": "246ce6ab.bd4c1a",
        "name": "Embed the map to the dashboard",
        "info": "",
        "x": 770,
        "y": 40,
        "wires": []
    },
    {
        "id": "b2f0d6c6.553398",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "dev",
        "label": "Device :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1070,
        "y": 40,
        "wires": []
    },
    {
        "id": "26c23fbb.77e96",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "status",
        "label": "Status :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1070,
        "y": 80,
        "wires": []
    },
    {
        "id": "e1b67373.9f9b2",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "RSSI",
        "label": "RSSI :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1070,
        "y": 160,
        "wires": []
    },
    {
        "id": "f296ebeb.1d56c8",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 13,
        "width": 4,
        "height": 1,
        "name": "mqtt",
        "label": "MQTT :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1070,
        "y": 200,
        "wires": []
    },
    {
        "id": "b49da85b.c8be28",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "network",
        "label": "Network :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1080,
        "y": 120,
        "wires": []
    },
    {
        "id": "9d3b28ed.942d58",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "mqtt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 140,
        "wires": []
    },
    {
        "id": "815979ab.7b8de8",
        "type": "mqtt in",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "topic": "esp32/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "32867152.1a9afe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 80,
        "y": 260,
        "wires": [
            [
                "9d3b28ed.942d58",
                "d188aca0.b7e6f"
            ]
        ]
    },
    {
        "id": "95223a.ee65adc8",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "jsonToString",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "d188aca0.b7e6f",
        "type": "json",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 270,
        "y": 360,
        "wires": [
            [
                "95223a.ee65adc8",
                "294f71f1.7be02e",
                "e169da87.1ce788",
                "1fb6d6f7.9352f9",
                "fadfa0f4.faea9",
                "27a8cb39.c243f4"
            ]
        ]
    },
    {
        "id": "294f71f1.7be02e",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "var dev ={payload:msg.payload.Node};\nvar status ={payload:msg.payload.status};\nvar network = {payload:msg.payload.network};\nvar rssi = { payload:parseFloat(msg.payload.rssi).toFixed(0) };\nvar ip = {payload:msg.payload.mqttIP};\n\nvar dev1 ={payload:msg.payload.device1};\nvar dev1_Bvoltage = { payload:parseFloat(msg.payload.d1_Bvol) };\nvar dev1_Lvoltage = { payload:parseFloat(msg.payload.d1_Lvol)};\nvar dev1_current = { payload:parseFloat(msg.payload.d1_cur) };\nvar  dev1_power= { payload:parseFloat(msg.payload.d1_pow) };\n\nvar dev2 ={payload:msg.payload.device2};\nvar dev2_Bvoltage = { payload:parseFloat(msg.payload.d2_Bvol) };\nvar dev2_Lvoltage = { payload:parseFloat(msg.payload.d2_Lvol)};\nvar dev2_current = { payload:parseFloat(msg.payload.d2_cur) };\nvar  dev2_power= { payload:parseFloat(msg.payload.d2_pow) };\n\nvar dev3 ={payload:msg.payload.device3};\nvar dev3_Bvoltage = { payload:parseFloat(msg.payload.d3_Bvol) };\nvar dev3_Lvoltage = { payload:parseFloat(msg.payload.d3_Lvol)};\nvar dev3_current = { payload:parseFloat(msg.payload.d3_cur) };\nvar  dev3_power= { payload:parseFloat(msg.payload.d3_pow) };\n\nreturn [dev,status,network,rssi,ip,\ndev1,dev1_Bvoltage,dev1_Lvoltage,dev1_current,dev1_power,\ndev2,dev2_Bvoltage,dev2_Lvoltage,dev2_current,dev2_power,\ndev3,dev3_Bvoltage,dev3_Lvoltage,dev3_current,dev3_power];\n\n ",
        "outputs": 20,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "4d8a616b.4df64",
                "b2f0d6c6.553398"
            ],
            [
                "26c23fbb.77e96"
            ],
            [
                "b49da85b.c8be28"
            ],
            [
                "e1b67373.9f9b2"
            ],
            [
                "f296ebeb.1d56c8"
            ],
            [
                "957a0786.fc47b8"
            ],
            [
                "cf28c556.c99ac8"
            ],
            [
                "408d8e62.7d937"
            ],
            [
                "da2c2e45.5b34b"
            ],
            [
                "ba788c48.a5aec"
            ],
            [
                "fd933238.d6f23"
            ],
            [
                "288e2976.5b0a16"
            ],
            [
                "d4590802.b49a88"
            ],
            [
                "2abb01ad.ae01fe"
            ],
            [
                "9166c4df.77fd48"
            ],
            [
                "c5dac2fc.48d9c"
            ],
            [
                "f6648f45.bae18"
            ],
            [
                "2db2ea3c.ebc9d6"
            ],
            [
                "bb8faec0.f7bd"
            ],
            [
                "1aa5911a.16980f"
            ]
        ]
    },
    {
        "id": "4d8a616b.4df64",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "name0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 360,
        "wires": []
    },
    {
        "id": "e169da87.1ce788",
        "type": "trigger",
        "z": "246ce6ab.bd4c1a",
        "name": "trigger",
        "op1": "node1 Connected",
        "op2": "node1 Disconnected",
        "op1type": "str",
        "op2type": "str",
        "duration": "7",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 210,
        "y": 540,
        "wires": [
            [
                "5a9e32e1.26731c",
                "c2f978d6.a7f9f8"
            ],
            [
                "c2f978d6.a7f9f8",
                "43f5e16f.8fa07"
            ]
        ]
    },
    {
        "id": "5a9e32e1.26731c",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "trigger",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 480,
        "wires": []
    },
    {
        "id": "c2f978d6.a7f9f8",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "\nif(msg.payload == \"node1 Connected\") {msg.payload={\n    ui_control:{\n        \"words\":\"NODE1 CONNECTED\",\n        \"icon\":\"signal_wifi_3_bar\",\n        \"color\":\"white\",\n        \"bgcolor\":\"green\"\n    }};}\nif(msg.payload == \"node1 Disconnected\") {msg.payload={\n    ui_control:{\n        \"words\":\"NODE1 DISCONNECTED\",\n        \"icon\":\"signal_wifi_0_bar\",\n        \"color\":\"white\",\n        \"bgcolor\":\"red\"\n    }};}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 640,
        "wires": [
            [
                "98157d2.748f38",
                "7442600f.97691"
            ]
        ]
    },
    {
        "id": "7442600f.97691",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "BtnFunction",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 620,
        "wires": []
    },
    {
        "id": "43f5e16f.8fa07",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "msg.payload={\n \nNode : \"Transmitter\",\n status : \"Active\",\n network : \"WIFI\",\n rssi : \"-79dB\",\n mqttIP : \"192.168.8.1\",\n device1 : \"Raspberry\",\n d1_Bvol :5.1 ,\n d1_Lvol : 5.0,\n d1_cur : 900,\n d1_pow : 4500,\n\n device2 : \"MCU\",\n d2_Bvol :5.1 ,\n d2_Lvol : 5.0,\n d2_cur : 83,\n d2_pow : 550,\n \n device3 : \"nRF24l01-Tx\",\n d3_Bvol :3.3 ,\n d3_Lvol : 3.3,\n d3_cur : 12,\n d3_pow : 39,\n};\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 560,
        "wires": [
            [
                "294f71f1.7be02e",
                "1fb6d6f7.9352f9",
                "fadfa0f4.faea9",
                "27a8cb39.c243f4"
            ]
        ]
    },
    {
        "id": "53f04c9a.877194",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "influx test",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1260,
        "wires": []
    },
    {
        "id": "673449fe.cfb308",
        "type": "mqtt in",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "topic": "esp32/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "32867152.1a9afe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 120,
        "y": 880,
        "wires": [
            [
                "6f8c9b49.d24f54",
                "f10f27f3.7ed2d8"
            ]
        ]
    },
    {
        "id": "6f8c9b49.d24f54",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "mqtt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 760,
        "wires": []
    },
    {
        "id": "f10f27f3.7ed2d8",
        "type": "json",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 270,
        "y": 880,
        "wires": [
            [
                "8c57ba26.1c3c08",
                "3373fa9d.233f86",
                "b6c32297.959d9",
                "f1e0e04c.9ffe6"
            ]
        ]
    },
    {
        "id": "8c57ba26.1c3c08",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "jsonToString",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 780,
        "wires": []
    },
    {
        "id": "3373fa9d.233f86",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "func": "var dev ={payload:msg.payload.Device};\nvar status ={payload:msg.payload.status};\nvar network = {payload:msg.payload.network};\nvar rssi = { payload:parseFloat(msg.payload.rssi).toFixed(0) };\nvar ip = {payload:msg.payload.mqttIP};\nvar press = { payload:parseFloat(msg.payload.pressure).toFixed(2) };\nvar hum = { payload:parseFloat(msg.payload.humidity).toFixed(2) };\nvar tempe ={ payload:parseFloat(msg.payload.temp).toFixed(2) };\nvar Co = { payload:parseFloat(msg.payload.co).toFixed(2) };\nvar No2 = { payload:parseFloat(msg.payload.no2).toFixed(2) };\nvar o3 = { payload:parseFloat(msg.payload.o3).toFixed(2) };\nvar So2 = { payload:parseFloat(msg.payload.so2).toFixed(2) };\nvar lat = { payload:parseFloat(msg.payload.gps[0]).toFixed(6) };\nvar lon = { payload:parseFloat(msg.payload.gps[1]).toFixed(6) };\nvar alt = { payload:parseFloat((msg.payload.pressure) * 0.09).toFixed(2) };\n\nreturn [dev,status,network,rssi,ip,press,hum,tempe,Co,No2,o3,So2,lat,lon,alt ];\n\n ",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 980,
        "wires": [
            [
                "e45d6f79.e2412"
            ],
            [
                "2f67912c.c07a0e"
            ],
            [
                "8b4a1071.b1d7f"
            ],
            [
                "d5914a2a.ad24a8"
            ],
            [
                "3eb5516a.8267ae"
            ],
            [
                "765d673b.7bb658"
            ],
            [
                "63fc0a3c.064764"
            ],
            [
                "7ecc60d1.853ca",
                "53f04c9a.877194"
            ],
            [
                "327a05c.766fffa"
            ],
            [
                "f9144d6e.b065a"
            ],
            [
                "fb866a03.706db8"
            ],
            [
                "9da1ab3e.c97898"
            ],
            [
                "3627061f.e68eda"
            ],
            [
                "384335e5.cf033a"
            ],
            [
                "145e9a35.60ff46"
            ]
        ]
    },
    {
        "id": "91373699.7559c8",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 400,
        "wires": []
    },
    {
        "id": "f1e0e04c.9ffe6",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Set data",
        "func": "var now = new Date();\n\nmsg.payload = {\n    //\"Timestamp\" : now.toLocaleTimeString(),\n    \"Timestamp\" : now.getTime(),\n    //\"Device\" : msg.payload.Device,\n    //\"Status\" : msg.payload.status,\n    //\"Network\" : msg.payload.network,\n   // \"RSSI\" : msg.payload.rssi,\n    //\"MQTT_IP\" : msg.payload.mqttIP,\n    \"Pressure\" : msg.payload.pressure,\n    \"Altitude\" : parseFloat((msg.payload.pressure) * 0.09).toFixed(2),\n    \"Humidity\" : msg.payload.humidity,\n    \"Temperature\" : msg.payload.temp,\n    \"co\" : msg.payload.co,\n    \"no2\" : msg.payload.no2,\n    \"o3\" : msg.payload.o3,\n    \"so2\" : msg.payload.so2,\n    \"Latitude\" : msg.payload.gps[0],\n    \"Longitude\" : msg.payload.gps[1]\n}\n//return sensorData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 620,
        "wires": [
            [
                "f46f569e.ff1a08",
                "173f827b.c2ad7e"
            ]
        ]
    },
    {
        "id": "859868d2.eec788",
        "type": "ui_dropdown",
        "z": "f433a985.3ae538",
        "name": "",
        "label": "Select",
        "tooltip": "",
        "place": "Select option",
        "group": "160e81fb.f1c86e",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "p",
                "value": 1,
                "type": "num"
            },
            {
                "label": "q",
                "value": 2,
                "type": "num"
            },
            {
                "label": "r",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "selection",
        "topicType": "msg",
        "x": 670,
        "y": 940,
        "wires": [
            [
                "5a4771b5.d22f6"
            ]
        ]
    },
    {
        "id": "eb1edad0.264978",
        "type": "debug",
        "z": "f433a985.3ae538",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1f215bca.eef9b4",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "selection",
        "func": "var chart = [{\n    \"series\":[],\n    \"data\":[],\n    \"labels\":[\"Sensor Data\"]\n}];\n\nlet columns = 0;\n\nif(msg.topic == \"selection\"){\n//node.warn(\"chart 0  \"+msg.payload[0].toString());\nvar selMsg = { payload: msg.payload,topic:\"selected\" };\n}\n\nfor(var series in msg.payload[0]) {\n    if(series!==\"Timestamp\") {\n        chart[0].series.push(series);\n        chart[0].data.push([]);\n        columns++;\n    }\n}\n\n\nfor (var j=0; j<msg.payload.length; j++) {\n   for(var i=0;i<columns;i++) {\n       chart[0].data[i].push({\"x\":msg.payload[j].Timestamp, \"y\":msg.payload[j][chart[0].series[i]]});\n   } \n}\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 860,
        "wires": [
            [
                "886d7264.65d1d",
                "579c6a8e.2180f4"
            ]
        ]
    },
    {
        "id": "886d7264.65d1d",
        "type": "ui_chart",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 13,
        "width": 25,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1500",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1150,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "579c6a8e.2180f4",
        "type": "debug",
        "z": "f433a985.3ae538",
        "name": "selection",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 920,
        "wires": []
    },
    {
        "id": "5a4771b5.d22f6",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "",
        "func": "var newMsg = { payload: msg.payload,topic:\"selection\" };\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 960,
        "wires": [
            [
                "eb1edad0.264978",
                "1f215bca.eef9b4"
            ]
        ]
    },
    {
        "id": "949f090a.835d08",
        "type": "inject",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1460,
        "wires": [
            [
                "3372e45d.328d0c"
            ]
        ]
    },
    {
        "id": "3372e45d.328d0c",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Fields and Tags",
        "func": "msg.payload = [{\n    intValue: '10i',\n    numValue: 12,\n    randomValue: Math.random()*10,\n    strValue: \"message2\"\n},\n{\n    tag1:\"sensor1\",\n    tag2:\"device2\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "bc1b061c.18b8a8",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Fields and Tags",
        "func": "msg.payload = [{\n    intValue: '10i',\n    numValue: 12,\n    randomValue: Math.random()*10,\n    strValue: \"message2\"\n},\n{\n    tag1:\"sensor1\",\n    tag2:\"device2\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "3627061f.e68eda",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-13",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Latitude\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1260,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "384335e5.cf033a",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_14",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Longitude\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1300,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "145e9a35.60ff46",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_15",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Altitude\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1340,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "b356bc43.93a4",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "influx test 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7ecc60d1.853ca",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-08",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Temperature\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1060,
        "wires": [
            [
                "b356bc43.93a4",
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "957a0786.fc47b8",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Device 1:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1080,
        "y": 260,
        "wires": []
    },
    {
        "id": "cf28c556.c99ac8",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Bus Voltage (V):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 300,
        "wires": []
    },
    {
        "id": "408d8e62.7d937",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Load Voltage (V):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 340,
        "wires": []
    },
    {
        "id": "da2c2e45.5b34b",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Current (mA):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 380,
        "wires": []
    },
    {
        "id": "ba788c48.a5aec",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 6,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Power (mW):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1090,
        "y": 420,
        "wires": []
    },
    {
        "id": "fd933238.d6f23",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "c35e46a8.b04ce8",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Device 2:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1080,
        "y": 520,
        "wires": []
    },
    {
        "id": "288e2976.5b0a16",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "c35e46a8.b04ce8",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Bus Voltage (V):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 560,
        "wires": []
    },
    {
        "id": "d4590802.b49a88",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "c35e46a8.b04ce8",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Load Voltage (V):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 600,
        "wires": []
    },
    {
        "id": "2abb01ad.ae01fe",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "c35e46a8.b04ce8",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Current (mA):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 640,
        "wires": []
    },
    {
        "id": "9166c4df.77fd48",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "c35e46a8.b04ce8",
        "order": 6,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Power (mW):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1090,
        "y": 680,
        "wires": []
    },
    {
        "id": "c5dac2fc.48d9c",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "4de9506d.e7364",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Device 3:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1080,
        "y": 740,
        "wires": []
    },
    {
        "id": "f6648f45.bae18",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "4de9506d.e7364",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Bus Voltage (V):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 780,
        "wires": []
    },
    {
        "id": "2db2ea3c.ebc9d6",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "4de9506d.e7364",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Load Voltage (V):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 820,
        "wires": []
    },
    {
        "id": "bb8faec0.f7bd",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "4de9506d.e7364",
        "order": 6,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Current (mA):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1100,
        "y": 860,
        "wires": []
    },
    {
        "id": "1aa5911a.16980f",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "4de9506d.e7364",
        "order": 7,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Power (mW):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1090,
        "y": 900,
        "wires": []
    },
    {
        "id": "535c54db.d688fc",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "dev",
        "label": "Device :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 970,
        "y": 1300,
        "wires": []
    },
    {
        "id": "cd520c56.0cd93",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 9,
        "width": 4,
        "height": 1,
        "name": "status",
        "label": "Status :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 970,
        "y": 1340,
        "wires": []
    },
    {
        "id": "54ba1f96.13563",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "RSSI",
        "label": "RSSI :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 970,
        "y": 1420,
        "wires": []
    },
    {
        "id": "21bc938.e51056c",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "mqtt",
        "label": "MQTT :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 970,
        "y": 1460,
        "wires": []
    },
    {
        "id": "7e8aa650.d82c98",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 11,
        "width": 4,
        "height": 1,
        "name": "network",
        "label": "Network :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 980,
        "y": 1380,
        "wires": []
    },
    {
        "id": "4cc64461.61645c",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "93367266.b4c1f",
        "order": 1,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Device 0:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 980,
        "y": 1520,
        "wires": []
    },
    {
        "id": "3957bc16.fd3664",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "93367266.b4c1f",
        "order": 3,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Bus Voltage (V):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1000,
        "y": 1560,
        "wires": []
    },
    {
        "id": "c8ad0b7a.b0e688",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "93367266.b4c1f",
        "order": 4,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Load Voltage (V):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 1600,
        "wires": []
    },
    {
        "id": "9b4688d5.dd4858",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "93367266.b4c1f",
        "order": 5,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Current (mA):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1000,
        "y": 1640,
        "wires": []
    },
    {
        "id": "3e19aadc.a5e796",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "93367266.b4c1f",
        "order": 6,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Power (mW):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 990,
        "y": 1680,
        "wires": []
    },
    {
        "id": "632b698d.8506d8",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "Device 0",
        "group": "93367266.b4c1f",
        "order": 2,
        "width": 17,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0 ",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 820,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "b60d2168.62af3",
        "type": "ui_button",
        "z": "246ce6ab.bd4c1a",
        "name": "status",
        "group": "86031276.81481",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "{{msg.payload.ui_control.words}}",
        "tooltip": "",
        "color": "{{msg.payload.ui_control.color}}",
        "bgcolor": "{{msg.payload.ui_control.bgcolor}}",
        "icon": "{{msg.payload.ui_control.icon}}",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 490,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "7e149105.a6845",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "mqtt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3fcb91.4c00047",
        "type": "mqtt in",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "topic": "esp32/Rx",
        "qos": "0",
        "datatype": "auto",
        "broker": "32867152.1a9afe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 180,
        "y": 1180,
        "wires": [
            [
                "7e149105.a6845",
                "28b981f8.a3dfbe"
            ]
        ]
    },
    {
        "id": "d3606f5a.c2b54",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "jsonToString",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1220,
        "wires": []
    },
    {
        "id": "28b981f8.a3dfbe",
        "type": "json",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 1280,
        "wires": [
            [
                "d3606f5a.c2b54",
                "8e737e7.746218",
                "61fe4570.517e5c",
                "f5c4837c.11929"
            ]
        ]
    },
    {
        "id": "8e737e7.746218",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "var dev ={payload:msg.payload.Node};\nvar status ={payload:msg.payload.status};\nvar network = {payload:msg.payload.network};\nvar rssi = { payload:parseFloat(msg.payload.rssi).toFixed(0) };\nvar ip = {payload:msg.payload.mqttIP};\n\nvar dev0 ={payload:msg.payload.device0};\nvar dev0_Bvoltage = { payload:parseFloat(msg.payload.d0_Bvol) };\nvar dev0_Lvoltage = { payload:parseFloat(msg.payload.d0_Lvol)};\nvar dev0_current = { payload:parseFloat(msg.payload.d0_cur) };\nvar  dev0_power= { payload:parseFloat(msg.payload.d0_pow) };\n\n\nreturn [dev,status,network,rssi,ip,\ndev0,dev0_Bvoltage,dev0_Lvoltage,dev0_current,dev0_power];\n\n ",
        "outputs": 10,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1480,
        "wires": [
            [
                "dec0a7fd.5d42d8",
                "535c54db.d688fc"
            ],
            [
                "cd520c56.0cd93"
            ],
            [
                "7e8aa650.d82c98"
            ],
            [
                "54ba1f96.13563"
            ],
            [
                "21bc938.e51056c"
            ],
            [
                "4cc64461.61645c"
            ],
            [
                "3957bc16.fd3664"
            ],
            [
                "c8ad0b7a.b0e688"
            ],
            [
                "9b4688d5.dd4858"
            ],
            [
                "3e19aadc.a5e796"
            ]
        ]
    },
    {
        "id": "dec0a7fd.5d42d8",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "name0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 1280,
        "wires": []
    },
    {
        "id": "61fe4570.517e5c",
        "type": "trigger",
        "z": "246ce6ab.bd4c1a",
        "name": "trigger",
        "op1": "Node2 Connected",
        "op2": "Node2 Disconnected",
        "op1type": "str",
        "op2type": "str",
        "duration": "7",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 310,
        "y": 1460,
        "wires": [
            [
                "1e724f43.7b7251",
                "eba84b28.5d5538"
            ],
            [
                "eba84b28.5d5538",
                "803c9136.d64ab"
            ]
        ]
    },
    {
        "id": "1e724f43.7b7251",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "trigger",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1400,
        "wires": []
    },
    {
        "id": "eba84b28.5d5538",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "\nif(msg.payload == \"Node2 Connected\") {msg.payload={\n    ui_control:{\n        \"words\":\"NODE2 CONNECTED\",\n        \"icon\":\"signal_wifi_3_bar\",\n        \"color\":\"white\",\n        \"bgcolor\":\"green\"\n    }};}\nif(msg.payload == \"Node2 Disconnected\") {msg.payload={\n    ui_control:{\n        \"words\":\"NODE2 DISCONNECTED\",\n        \"icon\":\"signal_wifi_0_bar\",\n        \"color\":\"white\",\n        \"bgcolor\":\"red\"\n    }};}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1560,
        "wires": [
            [
                "b60d2168.62af3",
                "f0bf940a.db15c8"
            ]
        ]
    },
    {
        "id": "f0bf940a.db15c8",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "BtnFunction",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 1540,
        "wires": []
    },
    {
        "id": "803c9136.d64ab",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "msg.payload={\n \nNode : \"Receiver\",\n status : \"Active\",\n network : \"WIFI\",\n rssi : \"-79dB\",\n mqttIP : \"192.168.8.5\",\n device0 : \"nRF24l01-Rx\",\n d0_Bvol :3.2 ,\n d0_Lvol : 3.1,\n d0_cur : 16,\n d0_pow : 49,\n\n};\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1480,
        "wires": [
            [
                "8e737e7.746218",
                "f5c4837c.11929"
            ]
        ]
    },
    {
        "id": "e20b5912.d77898",
        "type": "inject",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "e169da87.1ce788"
            ]
        ]
    },
    {
        "id": "f5c4837c.11929",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\n\nmsg1.payload = msg.payload.d0_Bvol;\nmsg1.topic = 'Bus Voltage (V)';\n\nmsg2.payload = msg.payload.d0_Lvol;\nmsg2.topic = 'Load Voltage (V)';\n\nmsg3.payload = msg.payload.d0_cur;\nmsg3.topic = 'Current (mA)';\n\nmsg4.payload = msg.payload.d0_pow;\nmsg4.topic = 'Power (mW)';\n\n\nreturn [msg1,msg2,msg3,msg4];\n\n ",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1620,
        "wires": [
            [
                "632b698d.8506d8"
            ],
            [
                "632b698d.8506d8"
            ],
            [
                "632b698d.8506d8"
            ],
            [
                "632b698d.8506d8"
            ]
        ]
    },
    {
        "id": "9dfa50fe.394db",
        "type": "inject",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1420,
        "wires": [
            [
                "61fe4570.517e5c"
            ]
        ]
    },
    {
        "id": "535dbb2f.d82fc4",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 22,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 660,
        "y": 140,
        "wires": []
    },
    {
        "id": "37d65af.d81e0a6",
        "type": "ui_button",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "group": "55a170ed.4121",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 530,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "3c75210f.43a3fe",
        "type": "ui_button",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "group": "55a170ed.4121",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 530,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "404ef4ff.4d10ac",
        "type": "ui_text_input",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "label": "Optional Text",
        "tooltip": "",
        "group": "55a170ed.4121",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 690,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "87b1fb9.ff86b08",
        "type": "ui_dropdown",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "55a170ed.4121",
        "order": 3,
        "width": 7,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Algorithm 01",
                "value": "Al1",
                "type": "str"
            },
            {
                "label": "Algorithm 02",
                "value": "Al2",
                "type": "str"
            },
            {
                "label": "Algorithm 03",
                "value": "Al3",
                "type": "str"
            },
            {
                "label": "Algorithm 04",
                "value": "Al4",
                "type": "str"
            },
            {
                "label": "Algorithm 05",
                "value": "Al5",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 680,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "1fb6d6f7.9352f9",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\n\nmsg1.payload = msg.payload.d1_Bvol;\nmsg1.topic = 'Bus Voltage (V)';\n\nmsg2.payload = msg.payload.d1_Lvol;\nmsg2.topic = 'Load Voltage (V)';\n\nmsg3.payload = msg.payload.d1_cur;\nmsg3.topic = 'Current (mA)';\n\nmsg4.payload = msg.payload.d1_pow;\nmsg4.topic = 'Power (mW)';\n\n\nreturn [msg1,msg2,msg3,msg4];\n\n ",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 760,
        "wires": [
            [
                "9f13d368.e52ec"
            ],
            [
                "9f13d368.e52ec"
            ],
            [
                "9f13d368.e52ec"
            ],
            [
                "9f13d368.e52ec"
            ]
        ]
    },
    {
        "id": "9f13d368.e52ec",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "Device 1",
        "group": "3957e09f.51e67",
        "order": 2,
        "width": 17,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0 ",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 720,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "fadfa0f4.faea9",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\n\nmsg1.payload = msg.payload.d2_Bvol;\nmsg1.topic = 'Bus Voltage (V)';\n\nmsg2.payload = msg.payload.d2_Lvol;\nmsg2.topic = 'Load Voltage (V)';\n\nmsg3.payload = msg.payload.d2_cur;\nmsg3.topic = 'Current (mA)';\n\nmsg4.payload = msg.payload.d2_pow;\nmsg4.topic = 'Power (mW)';\n\n\nreturn [msg1,msg2,msg3,msg4];\n\n ",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 860,
        "wires": [
            [
                "7e4ba037.91774"
            ],
            [
                "7e4ba037.91774"
            ],
            [
                "7e4ba037.91774"
            ],
            [
                "7e4ba037.91774"
            ]
        ]
    },
    {
        "id": "7e4ba037.91774",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "Device 2",
        "group": "c35e46a8.b04ce8",
        "order": 2,
        "width": 17,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0 ",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 720,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "27a8cb39.c243f4",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar msg3 = {};\nvar msg4 = {};\n\nmsg1.payload = msg.payload.d3_Bvol;\nmsg1.topic = 'Bus Voltage (V)';\n\nmsg2.payload = msg.payload.d3_Lvol;\nmsg2.topic = 'Load Voltage (V)';\n\nmsg3.payload = msg.payload.d3_cur;\nmsg3.topic = 'Current (mA)';\n\nmsg4.payload = msg.payload.d3_pow;\nmsg4.topic = 'Power (mW)';\n\n\nreturn [msg1,msg2,msg3,msg4];\n\n ",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 960,
        "wires": [
            [
                "dea621b6.24bc6"
            ],
            [
                "dea621b6.24bc6"
            ],
            [
                "dea621b6.24bc6"
            ],
            [
                "dea621b6.24bc6"
            ]
        ]
    },
    {
        "id": "dea621b6.24bc6",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "Device 3",
        "group": "4de9506d.e7364",
        "order": 2,
        "width": 17,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0 ",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 720,
        "y": 1040,
        "wires": [
            []
        ]
    }
]