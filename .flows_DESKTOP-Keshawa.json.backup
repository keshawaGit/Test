[
    {
        "id": "a77bf1d3.a74af",
        "type": "tab",
        "label": "Raw Data",
        "disabled": false,
        "info": ""
    },
    {
        "id": "daafd2c4.fca54",
        "type": "tab",
        "label": "GPS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2eded1c.5830e2e",
        "type": "tab",
        "label": "System Info",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2d4154ab.c87cdc",
        "type": "tab",
        "label": "csv generator",
        "disabled": false,
        "info": ""
    },
    {
        "id": "246ce6ab.bd4c1a",
        "type": "tab",
        "label": "Home",
        "disabled": false,
        "info": ""
    },
    {
        "id": "56bde742.2302f8",
        "type": "tab",
        "label": "Settings",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f433a985.3ae538",
        "type": "tab",
        "label": "File Browser",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5c561430.86ca8c",
        "type": "tab",
        "label": "Weather flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9cb4bc4d.96552",
        "type": "ui_group",
        "name": "Lead 2",
        "tab": "56402a64.3af794",
        "order": 3,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "dd70abe0.14cb38",
        "type": "ui_group",
        "name": "Lead 4",
        "tab": "56402a64.3af794",
        "order": 5,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "c1a14d89.c9822",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 2",
                "default": "#4B7930",
                "baseColor": "#2cc2dd",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Air Quality Monitoring Portal",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 5,
                "gy": 5,
                "cx": 2,
                "cy": 2,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "7c608d.3181bf74",
        "type": "ui_group",
        "name": "Memory",
        "tab": "d436ad3d.0b0a9",
        "order": 3,
        "disp": true,
        "width": 7
    },
    {
        "id": "3edba3a.29e675c",
        "type": "ui_group",
        "name": "System Information",
        "tab": "d436ad3d.0b0a9",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "38eca677.c20d6a",
        "type": "ui_group",
        "name": "Storage",
        "tab": "d436ad3d.0b0a9",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "522b5ae6.1911d4",
        "type": "ui_group",
        "name": "CPU Load",
        "tab": "d436ad3d.0b0a9",
        "order": 2,
        "disp": true,
        "width": 7
    },
    {
        "id": "d436ad3d.0b0a9",
        "type": "ui_tab",
        "name": "System",
        "icon": "gamepad",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "56402a64.3af794",
        "type": "ui_tab",
        "name": "Raw Data",
        "icon": "assessment",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e8ae12f4.50308",
        "type": "ui_group",
        "name": "Serial text",
        "tab": "56402a64.3af794",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "e8d8fb62.de9638",
        "type": "ui_group",
        "name": "Lead 3",
        "tab": "56402a64.3af794",
        "order": 4,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "711d371e.0a1fe8",
        "type": "ui_group",
        "name": "Lead 1",
        "tab": "56402a64.3af794",
        "order": 2,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "c261a3ad.65218",
        "type": "ui_group",
        "name": "Lead 5",
        "tab": "56402a64.3af794",
        "order": 6,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "631df8e7.d27568",
        "type": "ui_group",
        "name": "Lead 6",
        "tab": "56402a64.3af794",
        "order": 7,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "812ea8e2.d442a8",
        "type": "ui_group",
        "name": "Lead 7",
        "tab": "56402a64.3af794",
        "order": 8,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "e8f50434.b60c38",
        "type": "ui_group",
        "name": "Lead 8",
        "tab": "56402a64.3af794",
        "order": 9,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "160e81fb.f1c86e",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "b63d1f91.68095",
        "order": 1,
        "disp": true,
        "width": 25,
        "collapse": false
    },
    {
        "id": "b63d1f91.68095",
        "type": "ui_tab",
        "name": "Report Explorer",
        "icon": "create_new_folder",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9b22337f.e01e7",
        "type": "ui_link",
        "name": "Visualization",
        "link": "http://localhost:3000/d/mGaYK63Mz/aqm?orgId=1",
        "icon": "open_in_browser",
        "target": "iframe",
        "order": 4
    },
    {
        "id": "e8ddaa11.2fffd8",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "settings",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6e1bf5f0.a0ae5c",
        "type": "ui_group",
        "name": "Telemetry Data ",
        "tab": "e8ddaa11.2fffd8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b82da486.9fc8d8",
        "type": "ui_group",
        "name": "GPS",
        "tab": "d65502b1.ee517",
        "order": 2,
        "disp": false,
        "width": 14,
        "collapse": false
    },
    {
        "id": "c35e46a8.b04ce8",
        "type": "ui_group",
        "name": "SensorData row 1",
        "tab": "d65502b1.ee517",
        "order": 4,
        "disp": false,
        "width": "26",
        "collapse": false
    },
    {
        "id": "4de9506d.e7364",
        "type": "ui_group",
        "name": "SensorData row 2",
        "tab": "d65502b1.ee517",
        "order": 5,
        "disp": false,
        "width": "26",
        "collapse": false
    },
    {
        "id": "d65502b1.ee517",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "windows",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a7b87918.e26628",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "AQM_data",
        "name": "AQM_data",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.8-flux",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "b1f70f39.8b017",
        "type": "google-service-account",
        "name": "Data Monitor",
        "scope": [
            "https://www.googleapis.com/auth/spreadsheets"
        ],
        "way": "json",
        "check_dialogflow": "",
        "check_speech": ""
    },
    {
        "id": "cd81d08b.eebb3",
        "type": "ui_group",
        "z": "daafd2c4.fca54",
        "name": "GPS Loacation",
        "tab": "b34078e6.e60df8",
        "order": 1,
        "disp": false,
        "width": "27",
        "collapse": false
    },
    {
        "id": "b34078e6.e60df8",
        "type": "ui_tab",
        "z": "daafd2c4.fca54",
        "name": "Location Tracker",
        "icon": "location_on",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "86031276.81481",
        "type": "ui_group",
        "name": "Location Data:",
        "tab": "d65502b1.ee517",
        "order": 1,
        "disp": false,
        "width": 6,
        "collapse": false
    },
    {
        "id": "3957e09f.51e67",
        "type": "ui_group",
        "name": "Sensor Data",
        "tab": "d65502b1.ee517",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "70656f3d.c652f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "b200eea.e5aaa1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "8f3b79e9.6d0fb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "6d75106.91f0ff",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "13630136.0b774f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "3d340851.c37168",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "58e7f0ee.08f56",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "3408d8a4.821ce8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "5178b47b.dddbdc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "522b5ae6.1911d4",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "d2056d6f.1860c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "38eca677.c20d6a",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "cc7a5eb7.d5296",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "9817157e.de2e28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "6211866d.97bdd8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 10,
        "width": 6,
        "height": 1
    },
    {
        "id": "3cb5598e.2ab9a6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "19a2248e.f4063b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 12,
        "width": 6,
        "height": 1
    },
    {
        "id": "a772ab05.241668",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 13,
        "width": 6,
        "height": 1
    },
    {
        "id": "5924e7d0.8f4918",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cd81d08b.eebb3",
        "order": 14,
        "width": 6,
        "height": 1
    },
    {
        "id": "dbfa9241.14d0a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c35e46a8.b04ce8",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "dd3d5753.726658",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c35e46a8.b04ce8",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "92574929.8ec788",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c35e46a8.b04ce8",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "e4cf483.3f4ddb8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c35e46a8.b04ce8",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "a5bd4673.a7ae58",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c35e46a8.b04ce8",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "10fdbf77.07b2e1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c35e46a8.b04ce8",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "407a01e4.6b637",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "test",
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "32867152.1a9afe",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "true",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "1",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "e7e95985.bf96f8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "711d371e.0a1fe8",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "dce1b2da.d259f",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "9cb4bc4d.96552",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "158ba65d.f115ba",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "e8d8fb62.de9638",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "f8440462.64a498",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "dd70abe0.14cb38",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "7eec8926.c7cef8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c261a3ad.65218",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "21457550.ba310a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "631df8e7.d27568",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "3512f6d6.4137ca",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "812ea8e2.d442a8",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "329aa64e.67c53a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "e8f50434.b60c38",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "8b77cdd5.870e2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2c083d33.8b58e2",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "1f9313dc.8a707c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2c083d33.8b58e2",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "6f14abf8.716a64",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2c083d33.8b58e2",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "5c36b65a.063598",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "2c083d33.8b58e2",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "b2995b83.d8fe08",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "160e81fb.f1c86e",
        "order": 12,
        "width": 9,
        "height": 1
    },
    {
        "id": "b12941f.1cd05c",
        "type": "ui_group",
        "name": "Detail",
        "tab": "eb94216d.968598",
        "order": 5,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "8da50f69.44fe38",
        "type": "ui_group",
        "name": "Wind",
        "tab": "eb94216d.968598",
        "order": 4,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "14584712.7a2929",
        "type": "ui_group",
        "name": "Condition",
        "tab": "eb94216d.968598",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5e0d6747.b726b",
        "type": "ui_group",
        "name": "Forecast",
        "tab": "eb94216d.968598",
        "order": 6,
        "disp": true,
        "width": "26",
        "collapse": false
    },
    {
        "id": "eb94216d.968598",
        "type": "ui_tab",
        "name": "Weather",
        "icon": "wi-wu-nt_partlysunny",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8dfd123a.747be",
        "type": "ui_group",
        "name": "NAV1",
        "tab": "e8ddaa11.2fffd8",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "16e373f4.645dac",
        "type": "ui_group",
        "name": "NAV2",
        "tab": "e8ddaa11.2fffd8",
        "order": 4,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "361cf2a6.c1d6fe",
        "type": "ui_group",
        "name": "NAV3",
        "tab": "e8ddaa11.2fffd8",
        "order": 5,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "1f5ca70a.9612d9",
        "type": "ui_group",
        "name": "NAV4",
        "tab": "e8ddaa11.2fffd8",
        "order": 6,
        "disp": true,
        "width": 4,
        "collapse": false
    },
    {
        "id": "d9fbfecb.148d9",
        "type": "ui_group",
        "name": "OSD",
        "tab": "e8ddaa11.2fffd8",
        "order": 2,
        "disp": true,
        "width": 20,
        "collapse": false
    },
    {
        "id": "8844e995.f0e0a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "f297c494.7c4dd8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "90e95dd4.e3b1a",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "56b96a6a.38caf4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "f64d1660.4438a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "4ebcdddd.432644",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "361cf2a6.c1d6fe",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "ce5a0aed.88e068",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "e1dee6c2.8f0478",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "487dbed0.aa0c7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "b5e7bc38.d37a2",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "242bbbb4.3f6384",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "a9091671.e1a908",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1f5ca70a.9612d9",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "7fd1c5cc.ceb5fc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "2c3d1162.ace7ee",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "43de1a21.21f0c4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "7ef2a222.a44a5c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "d6c329d8.085b88",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "223d1d14.f74872",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "3a3e0d9e.464842",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "a3257d76.a99e6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "14584712.7a2929",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "d6c8e29f.d0f4c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "8dc0cfb.5a7793",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "91ea6ca0.6bf17",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "72ac13d7.c1d1fc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "36f8a3ac.46620c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "c170291.7b0a8d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "1bd47243.5bc79e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d08e6d6.1a32d8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "d06c516d.9180c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "42880fe0.9755b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "8da50f69.44fe38",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "b0403a45.981ae8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "d13dbc48.1aa36",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "a227c1ff.0a412",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "1e92e78a.d9f068",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "750b9b94.08bbd4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "52b6ea73.0c9084",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "b12941f.1cd05c",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "f2c4b5ab.00ea48",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "ab6d9a16.93bdf8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "2e3de2ef.fb856e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "e53a24c0.ef0308",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a1bbd62.be2224",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 22,
        "width": 2,
        "height": 1
    },
    {
        "id": "f9f8aacd.b90118",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 23,
        "width": 2,
        "height": 1
    },
    {
        "id": "1fd8b939.5805f7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "98441cfd.30b41",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 25,
        "width": 2,
        "height": 1
    },
    {
        "id": "66e9fdc3.834dd4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 26,
        "width": 2,
        "height": 1
    },
    {
        "id": "c8a79a6c.4b6098",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "5e0d6747.b726b",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "6daac8e7.9b06e8",
        "type": "debug",
        "z": "a77bf1d3.a74af",
        "name": "mqtt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 120,
        "wires": []
    },
    {
        "id": "854536e9.4e7e58",
        "type": "inject",
        "z": "2eded1c.5830e2e",
        "name": "update",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 94,
        "y": 245,
        "wires": [
            [
                "9c2f6309.6e94f",
                "204dd57d.fdda7a",
                "624cb7bc.fa7328",
                "1773a8ab.ce6337",
                "e65f0726.d9e648",
                "aa1b9b0d.0a4fe8"
            ]
        ]
    },
    {
        "id": "c477bd4f.17029",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.loadavg[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 100,
        "wires": [
            [
                "2c2258f0.b7f108"
            ]
        ]
    },
    {
        "id": "a92c83d0.93253",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.loadavg[1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "fd19c2c7.c2fb9"
            ]
        ]
    },
    {
        "id": "80be8bdc.4a48f8",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.loadavg[2];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "655f2b69.645494"
            ]
        ]
    },
    {
        "id": "31da9e31.5f2b02",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.memusage*3.85;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 720,
        "wires": [
            [
                "e13436f3.03f288"
            ]
        ]
    },
    {
        "id": "d1fbcac1.6d1358",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "function formatBytes(bytes,decimals) {\n   if(bytes === 0) return '0 Byte';\n   var k = 1000; // or 1024 for binary\n   var dm = decimals + 1 || 3;\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n   var i = Math.floor(Math.log(bytes) / Math.log(k));\n   return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nmsg.payload = formatBytes(msg.payload.totalmem);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 760,
        "wires": [
            [
                "8180911b.9eb55"
            ]
        ]
    },
    {
        "id": "2df8ad9c.8519e2",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "function formatBytes(bytes,decimals) {\n   if(bytes === 0) return '0 Byte';\n   var k = 1000; // or 1024 for binary\n   var dm = decimals + 1 || 3;\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n   var i = Math.floor(Math.log(bytes) / Math.log(k));\n   return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nmsg.payload = formatBytes(msg.payload.freemem);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 800,
        "wires": [
            [
                "8890a962.e10938"
            ]
        ]
    },
    {
        "id": "ef36d626.7c6808",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "function timeConversion(millisec) {\n\n    var seconds = (millisec / 1000).toFixed(1);\n\n    var minutes = (millisec / (1000 * 60)).toFixed(1);\n\n    var hours = (millisec / (1000 * 60 * 60)).toFixed(1);\n\n    var days = (millisec / (1000 * 60 * 60 * 24)).toFixed(1);\n\n    if (seconds < 60) {\n        return seconds + \" Sec\";\n    } else if (minutes < 60) {\n        return minutes + \" Min\";\n    } else if (hours < 24) {\n        return hours + \" Hrs\";\n    } else {\n        return days + \" Days\"\n    }\n}\n\nmsg.payload = timeConversion(msg.payload.uptime * 1000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "9a758b27.30fa58"
            ]
        ]
    },
    {
        "id": "ef5ffe5b.34697",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.hostname;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 400,
        "wires": [
            [
                "be33e559.ef68a8"
            ]
        ]
    },
    {
        "id": "7bbba0f8.29556",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.platform;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "ecef6591.654458"
            ]
        ]
    },
    {
        "id": "e82ffcf9.afa07",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.arch;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 480,
        "wires": [
            [
                "a2d635e0.7262b8"
            ]
        ]
    },
    {
        "id": "3b413552.6f001a",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.release;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 520,
        "wires": [
            [
                "d439e534.2ceaf8"
            ]
        ]
    },
    {
        "id": "f2264a42.9fae58",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.cpus[0].model;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "354b3c88.1462e4"
            ]
        ]
    },
    {
        "id": "5af23f27.cf573",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.loadavg[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "c2691372.0f74a"
            ]
        ]
    },
    {
        "id": "80c26e50.abdc2",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.memusage*3.85;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 680,
        "wires": [
            [
                "dbc08a9.b3c6678"
            ]
        ]
    },
    {
        "id": "4bcc9be.152f164",
        "type": "comment",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load",
        "info": "",
        "x": 600,
        "y": 60,
        "wires": []
    },
    {
        "id": "c68bb286.2422f",
        "type": "comment",
        "z": "2eded1c.5830e2e",
        "name": "Memory Usage",
        "info": "",
        "x": 240,
        "y": 620,
        "wires": []
    },
    {
        "id": "eaca0a52.0f5678",
        "type": "comment",
        "z": "2eded1c.5830e2e",
        "name": "System Information",
        "info": "",
        "x": 330,
        "y": 300,
        "wires": []
    },
    {
        "id": "5d65603c.0c3ce",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = msg.payload[0].size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 960,
        "wires": [
            [
                "f30e8a25.0537b8"
            ]
        ]
    },
    {
        "id": "30edef8f.f5f03",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = msg.payload[0].used.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1000,
        "wires": [
            [
                "10dcdfae.21374"
            ]
        ]
    },
    {
        "id": "b43465b3.c58528",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = msg.payload[0].available.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1040,
        "wires": [
            [
                "2f124f9a.51c5a"
            ]
        ]
    },
    {
        "id": "b824e87a.421b18",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = Math.floor(msg.payload[0].capacity*100);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1080,
        "wires": [
            [
                "9bb5f640.219d58"
            ]
        ]
    },
    {
        "id": "8180911b.9eb55",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "7c608d.3181bf74",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Total Memory",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 500,
        "y": 760,
        "wires": []
    },
    {
        "id": "8890a962.e10938",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "7c608d.3181bf74",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Free Memory",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 490,
        "y": 800,
        "wires": []
    },
    {
        "id": "9a758b27.30fa58",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 620,
        "y": 360,
        "wires": []
    },
    {
        "id": "be33e559.ef68a8",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Hostname",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 630,
        "y": 400,
        "wires": []
    },
    {
        "id": "ecef6591.654458",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Platform",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 620,
        "y": 440,
        "wires": []
    },
    {
        "id": "a2d635e0.7262b8",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Arch",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 610,
        "y": 480,
        "wires": []
    },
    {
        "id": "d439e534.2ceaf8",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Release",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 620,
        "y": 520,
        "wires": []
    },
    {
        "id": "354b3c88.1462e4",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "CPU",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 610,
        "y": 560,
        "wires": []
    },
    {
        "id": "f30e8a25.0537b8",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Capacity",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 640,
        "y": 960,
        "wires": []
    },
    {
        "id": "10dcdfae.21374",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Used",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 630,
        "y": 1000,
        "wires": []
    },
    {
        "id": "2f124f9a.51c5a",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Available",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 640,
        "y": 1040,
        "wires": []
    },
    {
        "id": "da9b51ca.d120d",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Figures in KB",
        "label": "Figures in KB",
        "format": "",
        "layout": "row-right",
        "x": 660,
        "y": 880,
        "wires": []
    },
    {
        "id": "2c2258f0.b7f108",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load 1",
        "group": "522b5ae6.1911d4",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "1 Minute",
        "label": "load",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "fd19c2c7.c2fb9",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load 2",
        "group": "522b5ae6.1911d4",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "5 Minutes",
        "label": "load",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "655f2b69.645494",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load 3",
        "group": "522b5ae6.1911d4",
        "order": 8,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "15 Minutes",
        "label": "load",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "4",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "e13436f3.03f288",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "Memory Usage",
        "group": "7c608d.3181bf74",
        "order": 2,
        "width": 7,
        "height": 4,
        "gtype": "gage",
        "title": "1 Minute",
        "label": "Usage",
        "format": "{{value | number:2}}",
        "min": 0,
        "max": "915",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 500,
        "y": 720,
        "wires": []
    },
    {
        "id": "9bb5f640.219d58",
        "type": "ui_gauge",
        "z": "2eded1c.5830e2e",
        "name": "Used",
        "group": "38eca677.c20d6a",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Used",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca4d4d"
        ],
        "x": 630,
        "y": 1080,
        "wires": []
    },
    {
        "id": "c2691372.0f74a",
        "type": "ui_chart",
        "z": "2eded1c.5830e2e",
        "name": "CPU Load - Historical",
        "group": "522b5ae6.1911d4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "CPU Load Historical",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 640,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "dbc08a9.b3c6678",
        "type": "ui_chart",
        "z": "2eded1c.5830e2e",
        "name": "Memory - 24 Hours",
        "group": "7c608d.3181bf74",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Memory Historical",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "915",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 510,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "4ccfed2e.587d14",
        "type": "comment",
        "z": "2eded1c.5830e2e",
        "name": "Storage Data",
        "info": "",
        "x": 170,
        "y": 860,
        "wires": []
    },
    {
        "id": "4b87ebb5.896c64",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get drive details",
        "func": "msg.payload = msg.payload[0].mount;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 920,
        "wires": [
            [
                "1da6a70a.4d7c89"
            ]
        ]
    },
    {
        "id": "1da6a70a.4d7c89",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "38eca677.c20d6a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Mount",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 630,
        "y": 920,
        "wires": []
    },
    {
        "id": "65e2b268.21c8dc",
        "type": "debug",
        "z": "2eded1c.5830e2e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 160,
        "y": 1080,
        "wires": []
    },
    {
        "id": "9c2f6309.6e94f",
        "type": "OS",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 230,
        "y": 400,
        "wires": [
            [
                "ef5ffe5b.34697",
                "7bbba0f8.29556",
                "e82ffcf9.afa07",
                "3b413552.6f001a"
            ]
        ]
    },
    {
        "id": "aa1b9b0d.0a4fe8",
        "type": "Drives",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "5d65603c.0c3ce",
                "30edef8f.f5f03",
                "b43465b3.c58528",
                "b824e87a.421b18",
                "4b87ebb5.896c64",
                "65e2b268.21c8dc"
            ]
        ]
    },
    {
        "id": "204dd57d.fdda7a",
        "type": "Uptime",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 240,
        "y": 360,
        "wires": [
            [
                "ef36d626.7c6808"
            ]
        ]
    },
    {
        "id": "624cb7bc.fa7328",
        "type": "CPUs",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 230,
        "y": 440,
        "wires": [
            [
                "f2264a42.9fae58"
            ]
        ]
    },
    {
        "id": "1773a8ab.ce6337",
        "type": "Loadavg",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 171,
        "y": 165,
        "wires": [
            [
                "c477bd4f.17029",
                "a92c83d0.93253",
                "80be8bdc.4a48f8",
                "5af23f27.cf573"
            ]
        ]
    },
    {
        "id": "e65f0726.d9e648",
        "type": "Memory",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 120,
        "y": 720,
        "wires": [
            [
                "31da9e31.5f2b02",
                "d1fbcac1.6d1358",
                "2df8ad9c.8519e2",
                "80c26e50.abdc2"
            ]
        ]
    },
    {
        "id": "a67ba4d2.2daf78",
        "type": "ui_button",
        "z": "2eded1c.5830e2e",
        "name": "",
        "group": "3edba3a.29e675c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log off",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Are You Sure ?",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 110,
        "y": 1200,
        "wires": [
            [
                "5e070a32.4daaa4"
            ]
        ]
    },
    {
        "id": "e4b8c220.82906",
        "type": "exec",
        "z": "2eded1c.5830e2e",
        "command": "shutdown /l",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "Reboot",
        "x": 820,
        "y": 1160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "13b544a3.d850cb",
        "type": "ui_button",
        "z": "2eded1c.5830e2e",
        "name": "",
        "group": "3edba3a.29e675c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "Are You Sure ?",
        "payloadType": "str",
        "topic": "",
        "x": 109.61107635498047,
        "y": 1256.4722290039062,
        "wires": [
            [
                "432c2342.22507c"
            ]
        ]
    },
    {
        "id": "7b7e4f8d.ad7b2",
        "type": "ui_text",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "IP Address",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 710,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6cccbba3.f20974",
        "type": "inject",
        "z": "2eded1c.5830e2e",
        "name": "",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 124.24151611328125,
        "y": 1315.567011833191,
        "wires": [
            [
                "642b1faf.4976f"
            ]
        ]
    },
    {
        "id": "483bf269.46d14c",
        "type": "ui_text",
        "z": "a77bf1d3.a74af",
        "group": "e8ae12f4.50308",
        "order": 1,
        "width": 30,
        "height": 2,
        "name": "",
        "label": "MQTT In ---->",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 340,
        "y": 40,
        "wires": []
    },
    {
        "id": "c8b5cc79.873c2",
        "type": "ui_gauge",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 630,
        "y": 200,
        "wires": []
    },
    {
        "id": "33dbbac6.7ac476",
        "type": "ui_chart",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "9cb4bc4d.96552",
        "order": 2,
        "width": 26,
        "height": 4,
        "label": "Temperature (°C)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 830,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9df76a97.f74758",
        "type": "ui_gauge",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "e8d8fb62.de9638",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "Atmospheric pressure",
        "label": "mbar",
        "format": "{{value}}",
        "min": 0,
        "max": "1200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 640,
        "y": 80,
        "wires": []
    },
    {
        "id": "f9965d72.149c8",
        "type": "ui_chart",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "e8d8fb62.de9638",
        "order": 2,
        "width": 26,
        "height": 4,
        "label": "Atmospheric pressure (mbar)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1200",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 900,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "fcd8a1fe.0f9fb",
        "type": "ui_gauge",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "711d371e.0a1fe8",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "Humidity ",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "cc0a7875.d8e578",
        "type": "ui_chart",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "711d371e.0a1fe8",
        "order": 2,
        "width": 26,
        "height": 4,
        "label": "Humidity (%)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 810,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6cc54f87.1afb5",
        "type": "ui_gauge",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "Altitude",
        "label": "m",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 620,
        "y": 560,
        "wires": []
    },
    {
        "id": "58039d77.64a3e4",
        "type": "ui_chart",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "dd70abe0.14cb38",
        "order": 2,
        "width": 26,
        "height": 4,
        "label": "Altitude (m)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 770,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "5f49f702.c227f8",
        "type": "ui_gauge",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "c261a3ad.65218",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "O3",
        "label": "ppm",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "a1de4b97.b6b5e8",
        "type": "ui_gauge",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "631df8e7.d27568",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "CO",
        "label": "ppm",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 240,
        "wires": []
    },
    {
        "id": "104bc5de.a7c08a",
        "type": "ui_gauge",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "812ea8e2.d442a8",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "NO2",
        "label": "ppm",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "a9178b4b.5530f8",
        "type": "ui_gauge",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "e8f50434.b60c38",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "donut",
        "title": "SO2",
        "label": "ppm",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 610,
        "y": 360,
        "wires": []
    },
    {
        "id": "53188ce9.4c3bb4",
        "type": "ui_chart",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "c261a3ad.65218",
        "order": 2,
        "width": 26,
        "height": 4,
        "label": "O3 (ppm)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 800,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a24adaeb.ad7ab8",
        "type": "ui_chart",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "631df8e7.d27568",
        "order": 2,
        "width": 26,
        "height": 4,
        "label": "CO (ppm)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "56a942ab.ebcaac",
        "type": "ui_chart",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "812ea8e2.d442a8",
        "order": 2,
        "width": 26,
        "height": 4,
        "label": "NO2 (ppm)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 810,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4a865462.dcdebc",
        "type": "ui_chart",
        "z": "a77bf1d3.a74af",
        "name": "",
        "group": "e8f50434.b60c38",
        "order": 2,
        "width": 26,
        "height": 4,
        "label": "SO2 (ppm)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 810,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "5e070a32.4daaa4",
        "type": "ui_toast",
        "z": "2eded1c.5830e2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "CANCEL",
        "raw": false,
        "topic": "",
        "name": "Notification",
        "x": 308.3333053588867,
        "y": 1202.999930381775,
        "wires": [
            [
                "bd99e6c8.122598"
            ]
        ]
    },
    {
        "id": "bd99e6c8.122598",
        "type": "switch",
        "z": "2eded1c.5830e2e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCEL",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 488.3333053588867,
        "y": 1202.999930381775,
        "wires": [
            [
                "e4b8c220.82906"
            ],
            []
        ]
    },
    {
        "id": "432c2342.22507c",
        "type": "ui_toast",
        "z": "2eded1c.5830e2e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "CANCEL",
        "raw": false,
        "topic": "",
        "name": "Notification",
        "x": 308.3333053588867,
        "y": 1262.999930381775,
        "wires": [
            [
                "f0002c1d.7b2d7"
            ]
        ]
    },
    {
        "id": "f0002c1d.7b2d7",
        "type": "switch",
        "z": "2eded1c.5830e2e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCEL",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 488.3333053588867,
        "y": 1262.999930381775,
        "wires": [
            [
                "1434360d.a6430a"
            ],
            []
        ]
    },
    {
        "id": "782b06fb.cc1df8",
        "type": "comment",
        "z": "2d4154ab.c87cdc",
        "name": "Auto Logger old data archiving",
        "info": "Generate file name that are to be archived.\n\nIdea is that this generates a list of file names for let's say between current day-5 days to current day-10 days, so all files that are 5-10 days old will get archived. And this can be executed daily or weekly, and the interval allows some overlap (e.g. the program fails, Node-Red was down, etc.)\n\nInject node should contain a JSON:\n{    \n    \"start\": 20,    \n    \"end\": 10\n}\n\nThis will generate file names D-20 to D-10 days.\nStart should be greather than end!\n",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "f14e2f71.1ad87",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Raw Data Filename generator",
        "func": "let output = [];\nfor (var i=msg.payload.end;i<msg.payload.start;i++) {\n    \n    // calculate the date\n    let now = new Date();\n    now.setTime(now.getTime() - 1000*60*60*24*i);\n    let yyyy = now.getFullYear();\n    let mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\n    let dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n    let hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\n    let mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n    let ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n    \n    let newfile = { \"topic\": \"archive\", \"payload\": \"\"};\n    // Generate out file name pattern\n    newfile.fname = \"Raw Data_\"+ yyyy + mm + dd + \".csv\";\n    // Full filename with path \n    newfile.filename = \"/home/pi/Desktop/datalogger/\"+ newfile.fname;\n    \n    // Shell script only needs the filename without the path\n    newfile.payload = newfile.fname;\n    output.push(newfile);\n\n}\n\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "5ba61ce5.11d8a4"
            ]
        ]
    },
    {
        "id": "b57ab78e.cf1658",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Process data Filename generator",
        "func": "let output = [];\nfor (var i=msg.payload.end;i<msg.payload.start;i++) {\n    \n    // calculate the date\n    let now = new Date();\n    now.setTime(now.getTime() - 1000*60*60*24*i);\n    let yyyy = now.getFullYear();\n    let mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\n    let dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n    let hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\n    let mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n    let ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n    \n    let newfile = { \"topic\": \"archive\", \"payload\": \"\"};\n    // Generate out file name pattern\n    newfile.fname = \"data_\"+ yyyy + mm + dd + \".csv\";\n    // Full filename with path \n    newfile.filename = \"/home/pi/datalog/\"+ newfile.fname;\n    \n    // Shell script only needs the filename without the path\n    newfile.payload = newfile.fname;\n    output.push(newfile);\n\n}\n\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 200,
        "wires": [
            [
                "5ba61ce5.11d8a4"
            ]
        ]
    },
    {
        "id": "5e47f3b4.7c779c",
        "type": "inject",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "40 02 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"start\":20,\"end\":10}",
        "payloadType": "json",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "f14e2f71.1ad87",
                "b57ab78e.cf1658"
            ]
        ]
    },
    {
        "id": "ad87fee.c53d5",
        "type": "exec",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "command": "/home/pi/Desktop/datalogger/log_upload.sh",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "File upload",
        "x": 710,
        "y": 140,
        "wires": [
            [],
            [],
            [
                "5f0f09f4.a09208"
            ]
        ]
    },
    {
        "id": "5f0f09f4.a09208",
        "type": "switch",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Return code",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 240,
        "wires": [
            [],
            [
                "639dcab5.1028b4"
            ]
        ]
    },
    {
        "id": "49210be0.0dbbe4",
        "type": "exec",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "command": "sudo rm ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "File delete",
        "x": 1130,
        "y": 140,
        "wires": [
            [],
            [],
            [
                "1fee1de5.695e32"
            ]
        ]
    },
    {
        "id": "639dcab5.1028b4",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Get filename",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 140,
        "wires": [
            [
                "49210be0.0dbbe4"
            ]
        ]
    },
    {
        "id": "1fee1de5.695e32",
        "type": "switch",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Return code",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 160,
        "wires": [
            [
                "1890401d.96f9"
            ],
            []
        ]
    },
    {
        "id": "5ba61ce5.11d8a4",
        "type": "delay",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 680,
        "y": 220,
        "wires": [
            [
                "ad87fee.c53d5"
            ]
        ]
    },
    {
        "id": "9da5c02.66c844",
        "type": "comment",
        "z": "2d4154ab.c87cdc",
        "name": "log_upload.sh",
        "info": "ftp -inv 192.168.1.x << EOF\n    user <username> <password>\n    binary\n    cd backup/logs\n    lcd /home/pi/datalog\n    put $1\nEOF",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "f79c29b7.055068",
        "type": "comment",
        "z": "2d4154ab.c87cdc",
        "name": "Auto Logger",
        "info": "",
        "x": 70,
        "y": 280,
        "wires": []
    },
    {
        "id": "f46f569e.ff1a08",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"Graph_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"F:/Project works & Backup/INSEED PROJECTS/Air Quality Monitoring/Database/Files/\"+ msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 620,
        "wires": [
            [
                "fa6936f.7758dc8"
            ]
        ]
    },
    {
        "id": "fa6936f.7758dc8",
        "type": "fs-file-lister",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "start": "F:/Project works & Backup/INSEED PROJECTS/Air Quality Monitoring/Database/Files",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 1040,
        "y": 620,
        "wires": [
            [
                "a96494a5.b0f4c8",
                "3db97537.b889ea"
            ]
        ]
    },
    {
        "id": "a96494a5.b0f4c8",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1210,
        "y": 680,
        "wires": []
    },
    {
        "id": "3db97537.b889ea",
        "type": "switch",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1190,
        "y": 620,
        "wires": [
            [
                "3cb887e8.e533a8"
            ],
            [
                "f3ba1c7a.54ef5"
            ]
        ]
    },
    {
        "id": "fe6f74d5.674ec8",
        "type": "csv",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Timestamp,Pressure,Altitude,Humidity,Temperature,co,no2,o3,so2,Latitude,Longitude",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1530,
        "y": 600,
        "wires": [
            [
                "3a8ebdf3.772cc2"
            ]
        ]
    },
    {
        "id": "3a8ebdf3.772cc2",
        "type": "file",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1690,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "f226a86d.9bdfb8",
        "type": "csv",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Timestamp,Pressure,Altitude,Humidity,Temperature,co,no2,o3,so2,Latitude,Longitude",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1530,
        "y": 640,
        "wires": [
            [
                "3a8ebdf3.772cc2"
            ]
        ]
    },
    {
        "id": "3cb887e8.e533a8",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 600,
        "wires": [
            [
                "fe6f74d5.674ec8"
            ]
        ]
    },
    {
        "id": "f3ba1c7a.54ef5",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 640,
        "wires": [
            [
                "f226a86d.9bdfb8"
            ]
        ]
    },
    {
        "id": "1890401d.96f9",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Archive remover",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 160,
        "wires": []
    },
    {
        "id": "173f827b.c2ad7e",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "set data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 560,
        "wires": []
    },
    {
        "id": "6cb7ba1a.b01c04",
        "type": "ui_switch",
        "z": "56bde742.2302f8",
        "name": "",
        "label": "GPS",
        "tooltip": "GPS data ",
        "group": "6e1bf5f0.a0ae5c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "esp32/output",
        "topicType": "str",
        "style": "",
        "onvalue": "gpsON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "\"green\"",
        "offvalue": "gpsOFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "\"red\"",
        "animate": true,
        "x": 790,
        "y": 140,
        "wires": [
            [
                "e5bb60ab.16702"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "b6c32297.959d9",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Set data",
        "func": "var now = new Date();\n\nmsg.payload = {\n    \"Timestamp\" : now.toLocaleTimeString(),\n    //\"timestamp\" : now.getTime(),\n    \"Device\" : msg.payload.Device,\n    \"Status\" : msg.payload.status,\n    \"Network\" : msg.payload.network,\n    \"RSSI\" : msg.payload.rssi,\n    \"MQTT_IP\" : msg.payload.mqttIP,\n    \"Pressure\" : msg.payload.pressure,\n    \"Altitude\" : parseFloat((msg.payload.pressure) * 0.09).toFixed(2),\n    \"Humidity\" : msg.payload.humidity,\n    \"Temperature\" : msg.payload.temp,\n    \"co\" : msg.payload.co,\n    \"no2\" : msg.payload.no2,\n    \"o3\" : msg.payload.o3,\n    \"so2\" : msg.payload.so2,\n    \"Latitude\" : msg.payload.gps[0],\n    \"Longitude\" : msg.payload.gps[1]\n}\n//return sensorData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 480,
        "wires": [
            [
                "cc799962.f2ff28",
                "ad159824.6b14a8"
            ]
        ]
    },
    {
        "id": "ad159824.6b14a8",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"data_STC\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"F:/Project works & Backup/INSEED PROJECTS/Air Quality Monitoring/Database/\"+ msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 480,
        "wires": [
            [
                "f781bdd8.b6939"
            ]
        ]
    },
    {
        "id": "f781bdd8.b6939",
        "type": "fs-file-lister",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "start": "F:/Project works & Backup/INSEED PROJECTS/Air Quality Monitoring/Database",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 1040,
        "y": 480,
        "wires": [
            [
                "6c58826e.2cbd3c"
            ]
        ]
    },
    {
        "id": "6c58826e.2cbd3c",
        "type": "switch",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1190,
        "y": 480,
        "wires": [
            [
                "432271ec.d8bc"
            ],
            [
                "3e046a72.0b3856"
            ]
        ]
    },
    {
        "id": "e9db32e4.1aa61",
        "type": "csv",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Timestamp,Device,Status,Network,RSSI,MQTT_IP,Pressure,Altitude,Humidity,Temperature,co,no2,o3,so2,Latitude,Longitude",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1530,
        "y": 460,
        "wires": [
            [
                "f0ad42ea.6cb3f"
            ]
        ]
    },
    {
        "id": "f0ad42ea.6cb3f",
        "type": "file",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1690,
        "y": 460,
        "wires": [
            [
                "91373699.7559c8"
            ]
        ]
    },
    {
        "id": "458286ba.a471d8",
        "type": "csv",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Timestamp,Device,Status,Network,RSSI,MQTT_IP,Pressure,Altitude,Humidity,Temperature,co,no2,o3,so2,Latitude,Longitude",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1530,
        "y": 500,
        "wires": [
            [
                "f0ad42ea.6cb3f"
            ]
        ]
    },
    {
        "id": "432271ec.d8bc",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 460,
        "wires": [
            [
                "e9db32e4.1aa61"
            ]
        ]
    },
    {
        "id": "3e046a72.0b3856",
        "type": "change",
        "z": "2d4154ab.c87cdc",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 500,
        "wires": [
            [
                "458286ba.a471d8"
            ]
        ]
    },
    {
        "id": "cc799962.f2ff28",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "set data_STC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 420,
        "wires": []
    },
    {
        "id": "3c25286c.3cfc68",
        "type": "comment",
        "z": "f433a985.3ae538",
        "name": "File Browser",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 150,
        "y": 100,
        "wires": []
    },
    {
        "id": "4aa72dba.116c94",
        "type": "fs-file-lister",
        "z": "f433a985.3ae538",
        "name": "Files",
        "start": "F:\\Project works & Backup\\INSEED PROJECTS\\Air Quality Monitoring\\Database\\FIles",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 550,
        "y": 200,
        "wires": [
            [
                "8dc22637.91d278",
                "57bd17a2.4e8028"
            ]
        ]
    },
    {
        "id": "4be2e27b.75d70c",
        "type": "inject",
        "z": "f433a985.3ae538",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "F:\\Project works & Backup\\INSEED PROJECTS\\Air Quality Monitoring\\Database\\FIles",
        "payloadType": "str",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "61751ac1.003644",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "f738bdbb.6767e",
        "type": "ui_dropdown",
        "z": "f433a985.3ae538",
        "name": "File Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a file",
        "group": "160e81fb.f1c86e",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 950,
        "y": 200,
        "wires": [
            [
                "41177c0d.322944"
            ]
        ]
    },
    {
        "id": "8dc22637.91d278",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a file\n    obj = {};\n    obj [msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 200,
        "wires": [
            [
                "f738bdbb.6767e"
            ]
        ]
    },
    {
        "id": "3e464c8a.3b8e64",
        "type": "ui_template",
        "z": "f433a985.3ae538",
        "group": "160e81fb.f1c86e",
        "name": "",
        "order": 6,
        "width": 25,
        "height": 6,
        "format": "<div ng-bind-html=\"msg.payload\" height=\"400\" style=\"height: 400px;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1140,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "b9280615.9f42b8",
        "type": "template",
        "z": "f433a985.3ae538",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\">\n    <tr><th>File Name</th><th>Size</th><th>Created</th><th>Changed</th></tr>\n    {{#payload}}\n        <tr>\n            <td><a href=\"/download?filename={{name}}\" target=\"blank\">{{fname}}</a></td>\n            <td>{{stat.size}}</td>\n            <td>{{stat.created}}</td>\n            <td>{{stat.changed}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 980,
        "y": 260,
        "wires": [
            [
                "3e464c8a.3b8e64"
            ]
        ]
    },
    {
        "id": "57bd17a2.4e8028",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Convert timestamps",
        "func": "for (var i=0; i<msg.payload.length; i++) {\n    msg.payload[i].stat.created = msg.payload[i].stat.created.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.changed = msg.payload[i].stat.changed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.accessed = msg.payload[i].stat.accessed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.statusChanged = msg.payload[i].stat.statusChanged.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "b9280615.9f42b8"
            ]
        ]
    },
    {
        "id": "742d5535.fc3a5c",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "7ebd4be6.71b204"
            ]
        ]
    },
    {
        "id": "53a544e1.1689fc",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    // and delete the context/selection as we are deleting the file as well\n    flow.set(\"fileselected\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "ea928f9a.4a88a"
            ]
        ]
    },
    {
        "id": "ea928f9a.4a88a",
        "type": "file",
        "z": "f433a985.3ae538",
        "name": "Delete file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 580,
        "y": 420,
        "wires": [
            [
                "4aa72dba.116c94",
                "906fa929.281cf8"
            ]
        ]
    },
    {
        "id": "d42f6ada.5dca98",
        "type": "http in",
        "z": "f433a985.3ae538",
        "name": "",
        "url": "/download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "e3a5f500.b3e028"
            ]
        ]
    },
    {
        "id": "b7c16d13.416d",
        "type": "http response",
        "z": "f433a985.3ae538",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 560,
        "wires": []
    },
    {
        "id": "e3a5f500.b3e028",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Get the file name",
        "func": "msg.filename = msg.req.query.filename;\nmsg.contentdisposition = \"attachment; filename=\\\"\" + msg.req.query.filename.replace(/^.*(\\\\|\\/|\\:)/, '') + \"\\\"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 560,
        "wires": [
            [
                "6061ea5.bf53514"
            ]
        ],
        "outputLabels": [
            "Folder selected"
        ]
    },
    {
        "id": "6061ea5.bf53514",
        "type": "file in",
        "z": "f433a985.3ae538",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 620,
        "y": 560,
        "wires": [
            [
                "e14ba809.ef1748"
            ]
        ]
    },
    {
        "id": "e14ba809.ef1748",
        "type": "change",
        "z": "f433a985.3ae538",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/csv",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Disposition",
                "pt": "msg",
                "to": "contentdisposition",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 560,
        "wires": [
            [
                "b7c16d13.416d"
            ]
        ]
    },
    {
        "id": "6a41611a.af06f",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Graph",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "show_chart",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "f57bd6fc.ed3908"
            ]
        ]
    },
    {
        "id": "f57bd6fc.ed3908",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 680,
        "wires": [
            [
                "241ded77.2a0c72"
            ]
        ]
    },
    {
        "id": "241ded77.2a0c72",
        "type": "file in",
        "z": "f433a985.3ae538",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 480,
        "y": 680,
        "wires": [
            [
                "2847902a.4a90c"
            ]
        ]
    },
    {
        "id": "2847902a.4a90c",
        "type": "csv",
        "z": "f433a985.3ae538",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 630,
        "y": 680,
        "wires": [
            [
                "bbc0af9a.a1786",
                "3d57c621.1a105a",
                "1f215bca.eef9b4"
            ]
        ]
    },
    {
        "id": "53bf4a5.3f987b4",
        "type": "debug",
        "z": "f433a985.3ae538",
        "name": "chart",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 600,
        "wires": []
    },
    {
        "id": "3d57c621.1a105a",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Format data for chart",
        "func": "var chart = [{\n    \"series\":[],\n    \"data\":[],\n    \"labels\":[\"Sensor Data\"]\n}];\n\n\n/*\nvar pressure = [];\nvar out2 = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n    pressure.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].pressure});\n    out2.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].out2*200});\n\n}\nchart[0].data.push(pressure);\nchart[0].data.push(out2);\n*/\n\nlet columns = 0;\nnode.warn(\"Init column\"+columns.toString());\n\nfor(var series in msg.payload[0]) {\n    if(series!==\"Timestamp\") {\n        chart[0].series.push(series);\n        chart[0].data.push([]);\n        columns++;\n    }\n}\nnode.warn(\"final column\"+columns.toString());\n\nfor (var j=0; j<msg.payload.length; j++) {\n   for(var i=0;i<columns;i++) {\n       chart[0].data[i].push({\"x\":msg.payload[j].Timestamp, \"y\":msg.payload[j][chart[0].series[i]]});\n   } \n}\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 680,
        "wires": [
            [
                "baf7a705.7c1bc8",
                "53bf4a5.3f987b4"
            ]
        ]
    },
    {
        "id": "baf7a705.7c1bc8",
        "type": "ui_chart",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 13,
        "width": 25,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1500",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1150,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "36b29d62.eeccd2",
        "type": "ui_toast",
        "z": "f433a985.3ae538",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": false,
        "topic": "",
        "name": "Confirmation",
        "x": 550,
        "y": 360,
        "wires": [
            [
                "43fc7418.a3109c"
            ]
        ]
    },
    {
        "id": "7ebd4be6.71b204",
        "type": "change",
        "z": "f433a985.3ae538",
        "name": "Set message",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Delete confirmation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to delete this file?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 360,
        "wires": [
            [
                "36b29d62.eeccd2"
            ]
        ]
    },
    {
        "id": "43fc7418.a3109c",
        "type": "switch",
        "z": "f433a985.3ae538",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 360,
        "wires": [
            [
                "53a544e1.1689fc"
            ]
        ]
    },
    {
        "id": "d28e7c.268be188",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"/\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('\\\\');\n    the_arr.pop();\n    folder=the_arr.join('\\\\'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "4aa72dba.116c94",
                "f2ec5d63.9220d",
                "906fa929.281cf8"
            ]
        ]
    },
    {
        "id": "f2ec5d63.9220d",
        "type": "ui_text",
        "z": "f433a985.3ae538",
        "group": "160e81fb.f1c86e",
        "order": 4,
        "width": 17,
        "height": 1,
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "x": 540,
        "y": 140,
        "wires": []
    },
    {
        "id": "808a06e5.e8cfa8",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "ca206d70.c1ff5",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "folder_open",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "30685cf6.53bba4"
            ]
        ]
    },
    {
        "id": "30685cf6.53bba4",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Change folder",
        "func": "// Get the filename from the flow context\nlet folderselected = flow.get(\"folderselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (folderselected===undefined) {\n    return;\n}\n\nmsg.topic = \"change\";\nmsg.payload = folderselected;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 480,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "345bb19c.f39eae",
        "type": "ui_button",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "autorenew",
        "payload": "F:\\Project works & Backup\\INSEED PROJECTS\\Air Quality Monitoring\\Database",
        "payloadType": "str",
        "topic": "change",
        "topicType": "str",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "906fa929.281cf8",
        "type": "fs-file-lister",
        "z": "f433a985.3ae538",
        "name": "Folders",
        "start": "F:\\Project works & Backup\\INSEED PROJECTS\\Air Quality Monitoring\\Database\\FIles",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 560,
        "y": 300,
        "wires": [
            [
                "d28e19ae.b01a28"
            ]
        ]
    },
    {
        "id": "95a0e663.93b8e8",
        "type": "ui_dropdown",
        "z": "f433a985.3ae538",
        "name": "Folder Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a folder",
        "group": "160e81fb.f1c86e",
        "order": 7,
        "width": 5,
        "height": 1,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 960,
        "y": 300,
        "wires": [
            [
                "8aea6833.5b9e28"
            ]
        ]
    },
    {
        "id": "d28e19ae.b01a28",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a foler\n    obj = {};\n    obj [\"[\"+msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')+\"]\"]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 300,
        "wires": [
            [
                "95a0e663.93b8e8"
            ]
        ]
    },
    {
        "id": "41177c0d.322944",
        "type": "change",
        "z": "f433a985.3ae538",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "fileselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "8aea6833.5b9e28",
        "type": "change",
        "z": "f433a985.3ae538",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "folderselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "fc04606f.f61eb",
        "type": "ui_switch",
        "z": "f433a985.3ae538",
        "name": "",
        "label": "Hidden",
        "tooltip": "Show hidden files or not",
        "group": "160e81fb.f1c86e",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "hidden",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check_box",
        "oncolor": "#000000",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "check_box_outline_blank",
        "offcolor": "#000000",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "d28e7c.268be188"
            ]
        ]
    },
    {
        "id": "bbc0af9a.a1786",
        "type": "debug",
        "z": "f433a985.3ae538",
        "name": "csv payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 780,
        "wires": []
    },
    {
        "id": "d45877c9.cc06d8",
        "type": "influxdb out",
        "z": "2d4154ab.c87cdc",
        "influxdb": "a7b87918.e26628",
        "name": "sensors",
        "measurement": "sensor_data",
        "precision": "",
        "retentionPolicy": "",
        "database": "AQM_data",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1340,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2522b5c8.47886a",
        "type": "comment",
        "z": "2d4154ab.c87cdc",
        "name": "Influx DB",
        "info": "",
        "x": 100,
        "y": 780,
        "wires": []
    },
    {
        "id": "e45d6f79.e2412",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-01",
        "func": "return { \n    \n    payload: [{value_str : msg.payload.toString()},{Lead: \"Device\",\n            checked:\"no\"}]\n    \n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 780,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "2f67912c.c07a0e",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_02",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value_str : msg.payload.toString()\n        },\n        // Tags\n        {\n            Lead: \"status\",\n            checked:\"no\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 820,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "8b4a1071.b1d7f",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_03",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value_str : msg.payload.toString()\n        },\n        // Tags\n        {\n            Lead: \"Network\",\n            checked:\"no\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 860,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "d5914a2a.ad24a8",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-04",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value:parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"RSSI\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 900,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "3eb5516a.8267ae",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_05",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value_str : msg.payload.toString()\n        },\n        // Tags\n        {\n            Lead: \"MQTT IP\",\n            checked:\"no\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 940,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "765d673b.7bb658",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_06",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Pressure\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 980,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "63fc0a3c.064764",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-07",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Humidity\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1020,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "327a05c.766fffa",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_09",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Carbon Monoxide\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1100,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "f9144d6e.b065a",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-10",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Nitrogen Dioxide\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1140,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "fb866a03.706db8",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_11",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Ozone\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1180,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "9da1ab3e.c97898",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_12",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Sulphur Dioxide\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1220,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "e5e34310.e06f4",
        "type": "google-spreadsheet",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "",
        "auth": "b1f70f39.8b017",
        "sheet": "1v-3t-WHTid19PY_r1UwEoxwFMk8BeXpS0aAwKjzZmKE",
        "range": "sheet1",
        "method": "append",
        "direction": "line",
        "action": "set",
        "clear": false,
        "line": false,
        "column": false,
        "fields": "all",
        "save": "_sheet",
        "selfields": [
            ""
        ],
        "cell_l": "",
        "cell_c": "",
        "input": "",
        "output": "",
        "saveType": "global",
        "inputType": "msg",
        "outputType": "msg",
        "sheetType": "str",
        "rangeType": "str",
        "cell_lType": "str",
        "cell_cType": "str",
        "x": 760,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "441fdcc6.e99da4",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "file content",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "37073de4.b7c1c2",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "Set data",
        "func": "var now = new Date();\n\nstr = msg.payload\ns1 = str.substring(str.indexOf(\":\")+1);\nmsg.payload =s1.trim();\n\nvar sensorData = [];\nvar values = msg.payload.trim().split(\",\");\nfor(var v in values){\n    sensorData.push(values[v]);\n}\n//return sensorData;\nmsg.payload = {\n    //\"timestamp\" : now.toLocaleTimeString()+String(sensorData[0]),\n    \"data\" :String(sensorData[0])+String(sensorData[1])+String(sensorData[2])+\n    String(sensorData[3])+String(sensorData[4])+String(sensorData[5])+\n    String(sensorData[6])+String(sensorData[7])+String(sensorData[8])+\n    String(sensorData[9])+String(sensorData[10])+String(sensorData[11])\n\n}\n//return sensorData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 340,
        "wires": [
            [
                "e5e34310.e06f4",
                "441fdcc6.e99da4"
            ]
        ]
    },
    {
        "id": "dc7b40c0.2f609",
        "type": "debug",
        "z": "2eded1c.5830e2e",
        "name": "Local Ip",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1480,
        "wires": []
    },
    {
        "id": "b97bc1c0.cb899",
        "type": "ui_template",
        "z": "2eded1c.5830e2e",
        "group": "3edba3a.29e675c",
        "name": "Clock Toolbar",
        "order": 10,
        "width": 0,
        "height": 0,
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toLocaleString());\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n}\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 860,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "4dc9a552.44753c",
        "type": "delay",
        "z": "2d4154ab.c87cdc",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 260,
        "y": 300,
        "wires": [
            [
                "37073de4.b7c1c2"
            ]
        ]
    },
    {
        "id": "1434360d.a6430a",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "close tab",
        "func": "window.top.close();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1280,
        "wires": [
            [
                "9163a012.53aa7"
            ]
        ]
    },
    {
        "id": "642b1faf.4976f",
        "type": "NetworkIntf",
        "z": "2eded1c.5830e2e",
        "name": "",
        "x": 290,
        "y": 1380,
        "wires": [
            [
                "dc7b40c0.2f609",
                "ae4c5841.129e88"
            ]
        ]
    },
    {
        "id": "ae4c5841.129e88",
        "type": "function",
        "z": "2eded1c.5830e2e",
        "name": "Get details",
        "func": "msg.payload = msg.payload.networkInterfaces[\"Wi-Fi\"][1].address;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1380,
        "wires": [
            [
                "7b7e4f8d.ad7b2",
                "99bf6c91.19f94"
            ]
        ]
    },
    {
        "id": "99bf6c91.19f94",
        "type": "debug",
        "z": "2eded1c.5830e2e",
        "name": "Local Ipv4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1420,
        "wires": []
    },
    {
        "id": "9163a012.53aa7",
        "type": "debug",
        "z": "2eded1c.5830e2e",
        "name": "close tab",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1260,
        "wires": []
    },
    {
        "id": "31caf491.0fcd6c",
        "type": "worldmap",
        "z": "2eded1c.5830e2e",
        "name": "GPS location",
        "lat": "",
        "lon": "",
        "zoom": "4",
        "layer": "Terrain",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "none",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "x": 1070,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9b2a29cc.3c53a8",
        "type": "worldmap",
        "z": "daafd2c4.fca54",
        "name": "",
        "lat": "6.901609",
        "lon": "80.008775",
        "zoom": "",
        "layer": "Esri Satellite",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "true",
        "hiderightclick": "false",
        "coords": "deg",
        "path": "",
        "x": 1050,
        "y": 300,
        "wires": []
    },
    {
        "id": "1714967f.e691ea",
        "type": "inject",
        "z": "daafd2c4.fca54",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 510,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "1b24ad2f.198453",
        "type": "function",
        "z": "daafd2c4.fca54",
        "name": "",
        "func": "// create random position\n//var lat = 6.0788 + Math.random() * 0.001;\n//var lon = 80.1919 + Math.random() * 0.001;\nvar dev =msg.payload.Device;\nvar lat0 = parseFloat(msg.payload.gps[0]).toFixed(6);\nvar lon0 = parseFloat(msg.payload.gps[1]).toFixed(6) ;\n\nmsg.payload={\n   // command :{\n    lat:lat0, \n    lon:lon0, \n   // zoom:17,\n    name:\"Drone\", \n    icon:\"plane\",\n    iconColor: '#FF0000',\n    color:\"#0000FF\"\n    \n};\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 300,
        "wires": [
            [
                "9b2a29cc.3c53a8",
                "de5c4044.d4e0f",
                "2d0d75e4.81e96a",
                "9332c378.4db86",
                "dc9dee25.b592b"
            ]
        ]
    },
    {
        "id": "de3a90c8.8179c",
        "type": "ui_button",
        "z": "daafd2c4.fca54",
        "name": "",
        "group": "cd81d08b.eebb3",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Move Drone",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-male",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 550,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "223f301c.54ea9",
        "type": "comment",
        "z": "daafd2c4.fca54",
        "name": "How to embed Map in Dashboard",
        "info": "This example shows how to embed the Worldmap \ninto a template node within the `node-red-dashboard`\n\nThe first flow creates a dashboard button that \ngenerates a randon position, with the required \nicon, and passes that to the worldmap. The\nmap is configured to automatically pan to the\nposition of any point that arrives.\n\nThe second flow initialise the dashboard template\nwith the initial map and sets it to a more square shape\nby adjusting the height.",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "de5c4044.d4e0f",
        "type": "worldmap-tracks",
        "z": "daafd2c4.fca54",
        "name": "",
        "depth": "5",
        "layer": "combined",
        "x": 830,
        "y": 200,
        "wires": [
            [
                "9b2a29cc.3c53a8"
            ]
        ]
    },
    {
        "id": "17100dd1.70d602",
        "type": "inject",
        "z": "daafd2c4.fca54",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 780,
        "wires": [
            [
                "6adcf732.20d4a8"
            ]
        ]
    },
    {
        "id": "d274502d.7dc77",
        "type": "ui_template",
        "z": "daafd2c4.fca54",
        "group": "cd81d08b.eebb3",
        "name": "",
        "order": 1,
        "width": 21,
        "height": 11,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 560,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "673cc545.4ab7ac",
        "type": "template",
        "z": "daafd2c4.fca54",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<iframe src=\"/worldmap\" height=\"530px\" width=\"1000px\" style=\"border: none;\"></iframe>",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "d274502d.7dc77"
            ]
        ]
    },
    {
        "id": "6ca0c5b4.6373fc",
        "type": "comment",
        "z": "daafd2c4.fca54",
        "name": "Embed the map to the dashboard",
        "info": "",
        "x": 190,
        "y": 720,
        "wires": []
    },
    {
        "id": "7bac4c65.617504",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "lon",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 440,
        "wires": []
    },
    {
        "id": "9332c378.4db86",
        "type": "function",
        "z": "daafd2c4.fca54",
        "name": "",
        "func": "var lat1 = { payload:parseFloat(msg.payload.lat).toFixed(5) };\nvar lon1 = { payload:parseFloat(msg.payload.lon).toFixed(5) };\nvar name1 = { payload:msg.payload.name};\nreturn [ lat1, lon1, name1 ];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 380,
        "wires": [
            [
                "a7d6dd7c.c9c69",
                "af95a5b2.6b9af8"
            ],
            [
                "7bac4c65.617504",
                "beb4ffd6.5e8db"
            ],
            [
                "7eaf6d09.ee5c74",
                "b7a1be94.009bf"
            ]
        ]
    },
    {
        "id": "2d0d75e4.81e96a",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 120,
        "wires": []
    },
    {
        "id": "6adcf732.20d4a8",
        "type": "ui_ui_control",
        "z": "daafd2c4.fca54",
        "name": "",
        "events": "all",
        "x": 270,
        "y": 860,
        "wires": [
            [
                "673cc545.4ab7ac"
            ]
        ]
    },
    {
        "id": "a7d6dd7c.c9c69",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "latt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 400,
        "wires": []
    },
    {
        "id": "7eaf6d09.ee5c74",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "name",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 520,
        "wires": []
    },
    {
        "id": "af95a5b2.6b9af8",
        "type": "ui_text",
        "z": "daafd2c4.fca54",
        "group": "cd81d08b.eebb3",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "Latitude:",
        "label": "Latitude :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1240,
        "y": 340,
        "wires": []
    },
    {
        "id": "beb4ffd6.5e8db",
        "type": "ui_text",
        "z": "daafd2c4.fca54",
        "group": "cd81d08b.eebb3",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "long",
        "label": "Longitude :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1230,
        "y": 380,
        "wires": []
    },
    {
        "id": "b7a1be94.009bf",
        "type": "ui_text",
        "z": "daafd2c4.fca54",
        "group": "cd81d08b.eebb3",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "dev",
        "label": "Device :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1230,
        "y": 420,
        "wires": []
    },
    {
        "id": "c9d66ebf.6f7f7",
        "type": "inject",
        "z": "a77bf1d3.a74af",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "d6400610.1ca868"
            ]
        ]
    },
    {
        "id": "c8300b35.1b45b8",
        "type": "worldmap",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "lat": "6.901609",
        "lon": "80.008775",
        "zoom": "",
        "layer": "Esri Satellite",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "true",
        "hiderightclick": "false",
        "coords": "deg",
        "path": "",
        "x": 870,
        "y": 100,
        "wires": []
    },
    {
        "id": "98157d2.748f38",
        "type": "ui_button",
        "z": "246ce6ab.bd4c1a",
        "name": "status",
        "group": "86031276.81481",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "{{msg.payload.ui_control.words}}",
        "tooltip": "",
        "color": "{{msg.payload.ui_control.color}}",
        "bgcolor": "{{msg.payload.ui_control.bgcolor}}",
        "icon": "{{msg.payload.ui_control.icon}}",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 390,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "6a4c73fe.8a87cc",
        "type": "worldmap-tracks",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "depth": "5",
        "layer": "combined",
        "x": 650,
        "y": 100,
        "wires": [
            [
                "c8300b35.1b45b8"
            ]
        ]
    },
    {
        "id": "915e4de5.95521",
        "type": "inject",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1130,
        "y": 120,
        "wires": [
            [
                "f9a14476.424fd8"
            ]
        ]
    },
    {
        "id": "42301573.027d6c",
        "type": "ui_template",
        "z": "246ce6ab.bd4c1a",
        "group": "b82da486.9fc8d8",
        "name": "",
        "order": 1,
        "width": 14,
        "height": 8,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7bcbb151.cf351",
        "type": "template",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<iframe src=\"/worldmap\" height=\"388px\" width=\"690px\" style=\"border: none;\"></iframe>",
        "x": 1330,
        "y": 120,
        "wires": [
            [
                "42301573.027d6c"
            ]
        ]
    },
    {
        "id": "1bf52845.012bd8",
        "type": "comment",
        "z": "246ce6ab.bd4c1a",
        "name": "Embed the map to the dashboard",
        "info": "",
        "x": 1130,
        "y": 60,
        "wires": []
    },
    {
        "id": "8f3ddfde.77afc",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "lon",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 200,
        "wires": []
    },
    {
        "id": "f9a14476.424fd8",
        "type": "ui_ui_control",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "events": "all",
        "x": 1210,
        "y": 200,
        "wires": [
            [
                "7bcbb151.cf351"
            ]
        ]
    },
    {
        "id": "8c8f6955.21da68",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "latt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 160,
        "wires": []
    },
    {
        "id": "c232136e.75d7e",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "name",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 240,
        "wires": []
    },
    {
        "id": "4d273a07.e7a764",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "Latitude:",
        "label": "Latitude :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 800,
        "wires": []
    },
    {
        "id": "9cd39627.f11e08",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "long",
        "label": "Longitude :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 840,
        "wires": []
    },
    {
        "id": "b2f0d6c6.553398",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "dev",
        "label": "Device :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 320,
        "wires": []
    },
    {
        "id": "26c23fbb.77e96",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "status",
        "label": "Status :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 360,
        "wires": []
    },
    {
        "id": "e1b67373.9f9b2",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "RSSI",
        "label": "RSSI :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 440,
        "wires": []
    },
    {
        "id": "92b63c98.93f74",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "humadity:",
        "label": "Humidity (%) :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 560,
        "wires": []
    },
    {
        "id": "41429d1c.d26b84",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "temp",
        "label": "Temperature :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 600,
        "wires": []
    },
    {
        "id": "1d46c19e.46cd1e",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "press",
        "label": "Atmospheric Pressure :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 520,
        "wires": []
    },
    {
        "id": "f4125550.383d48",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "co",
        "label": "CO (ppm):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 640,
        "wires": []
    },
    {
        "id": "c57f9258.91647",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "O3",
        "label": "O3 (ppm) :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 720,
        "wires": []
    },
    {
        "id": "4eb5caa9.0b9f64",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "SO2",
        "label": "SO2 (ppm) :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 760,
        "wires": []
    },
    {
        "id": "e0fbf79a.d92c58",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "NO2",
        "label": "NO2 (ppm):",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 680,
        "wires": []
    },
    {
        "id": "cc628e56.f997d",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "3957e09f.51e67",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "altitude",
        "label": "Altitude (m) :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 880,
        "wires": []
    },
    {
        "id": "e48fc64e.014958",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "pressure",
        "group": "c35e46a8.b04ce8",
        "order": 1,
        "width": 6,
        "height": 6,
        "label": "Atmospheric Pressure (mbar)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1200",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1320,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "f59ac7c4.4457c8",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "altitude",
        "group": "c35e46a8.b04ce8",
        "order": 2,
        "width": 6,
        "height": 6,
        "label": "Altitude (m)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1320,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "3b1938c9.916dd8",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "humadity",
        "group": "c35e46a8.b04ce8",
        "order": 3,
        "width": 6,
        "height": 6,
        "label": "Humidity (%)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1320,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4c829aad.1a77b4",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "temp",
        "group": "c35e46a8.b04ce8",
        "order": 5,
        "width": 7,
        "height": 6,
        "label": "Temperature (°C)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1310,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4e6da09d.1cb02",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "CO",
        "group": "4de9506d.e7364",
        "order": 1,
        "width": 7,
        "height": 6,
        "label": "CO (ppm)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1310,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "e9cf9440.c5ff88",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "NO2",
        "group": "4de9506d.e7364",
        "order": 3,
        "width": 7,
        "height": 6,
        "label": "NO2 (ppm)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1310,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "30f8b12f.84b37e",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "O3",
        "group": "4de9506d.e7364",
        "order": 2,
        "width": 6,
        "height": 6,
        "label": "O3 (ppm)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1310,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "c2325036.48014",
        "type": "ui_chart",
        "z": "246ce6ab.bd4c1a",
        "name": "SO2",
        "group": "4de9506d.e7364",
        "order": 4,
        "width": 6,
        "height": 6,
        "label": "SO2 (ppm)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1000",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1310,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "b6d1de40.45e8d",
        "type": "ui_text",
        "z": "daafd2c4.fca54",
        "group": "cd81d08b.eebb3",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "corr long",
        "label": "Corr. Longitude :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1240,
        "y": 520,
        "wires": []
    },
    {
        "id": "995a8acb.fef6f8",
        "type": "ui_text",
        "z": "daafd2c4.fca54",
        "group": "cd81d08b.eebb3",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "corr lat:",
        "label": "Corr. Latitude :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1240,
        "y": 480,
        "wires": []
    },
    {
        "id": "d6400610.1ca868",
        "type": "function",
        "z": "a77bf1d3.a74af",
        "name": "",
        "func": "// create random position\nvar lat = 6.0788 + Math.random() * 0.001;\nvar lon = 80.1919 + Math.random() * 0.001;\nvar pressure = 400 + Math.random() * 3;\nvar altitude = 20 + Math.random() * 0.9;\nvar humadity = 65 + Math.random() * 0.9;\nvar temperature = 35 + Math.random() * 0.9;\nvar CO = 100 + Math.random() * 2;\nvar NO2 = 200 + Math.random() * 2;\nvar O3 = 170 + Math.random() * 2;\nvar SO2 = 90 + Math.random() * 2;\n\nmsg.payload={\n    lat:lat, \n    lon:lon, \n    pressure: pressure,\n    altitude:altitude,\n    humadity:humadity,\n    temperature:temperature,\n    CO:CO,\n    NO2:NO2,\n    O3:O3,\n    SO2:SO2,\n    name:\"Drone\", \n    icon:\"plane\",\n    iconColor: '#FF0000',\n    color:\"#0000FF\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "73bed695.7018e8",
        "type": "function",
        "z": "a77bf1d3.a74af",
        "name": "",
        "func": "var dev ={payload:msg.payload.Device};\nvar status ={payload:msg.payload.status};\nvar network = {payload:msg.payload.network};\nvar rssi = { payload:parseFloat(msg.payload.rssi).toFixed(0) };\nvar ip = {payload:msg.payload.mqttIP};\nvar press = { payload:parseFloat(msg.payload.pressure).toFixed(2) };\nvar hum = { payload:parseFloat(msg.payload.humidity).toFixed(2) };\nvar temp = { payload:parseFloat(msg.payload.temp) };\nvar Co = { payload:parseFloat(msg.payload.co).toFixed(2) };\nvar No2 = { payload:parseFloat(msg.payload.no2).toFixed(2) };\nvar o3 = { payload:parseFloat(msg.payload.o3).toFixed(2) };\nvar So2 = { payload:parseFloat(msg.payload.so2).toFixed(2) };\nvar lat = { payload:parseFloat(msg.payload.gps[0]).toFixed(6) };\nvar lon = { payload:parseFloat(msg.payload.gps[1]).toFixed(6) };\nvar alt = { payload:parseFloat((msg.payload.pressure) * 0.09).toFixed(2) };\n\nreturn [dev,status,network,rssi,ip,press,hum,temp,Co,No2,o3,So2,lat,lon,alt ];\n\n ",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 340,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [
                "9df76a97.f74758",
                "f9965d72.149c8"
            ],
            [
                "fcd8a1fe.0f9fb",
                "cc0a7875.d8e578"
            ],
            [
                "c8b5cc79.873c2",
                "33dbbac6.7ac476"
            ],
            [
                "a1de4b97.b6b5e8",
                "a24adaeb.ad7ab8"
            ],
            [
                "104bc5de.a7c08a",
                "56a942ab.ebcaac"
            ],
            [
                "5f49f702.c227f8",
                "53188ce9.4c3bb4"
            ],
            [
                "a9178b4b.5530f8",
                "4a865462.dcdebc"
            ],
            [],
            [],
            [
                "6cc54f87.1afb5",
                "58039d77.64a3e4",
                "15c59248.f1feae"
            ]
        ]
    },
    {
        "id": "f296ebeb.1d56c8",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 6,
        "width": 6,
        "height": 1,
        "name": "mqtt",
        "label": "MQTT :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1110,
        "y": 480,
        "wires": []
    },
    {
        "id": "b49da85b.c8be28",
        "type": "ui_text",
        "z": "246ce6ab.bd4c1a",
        "group": "86031276.81481",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "network",
        "label": "Network :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1120,
        "y": 400,
        "wires": []
    },
    {
        "id": "58e23b31.544664",
        "type": "mqtt out",
        "z": "a77bf1d3.a74af",
        "name": "",
        "topic": "esp32/out",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "407a01e4.6b637",
        "x": 320,
        "y": 660,
        "wires": []
    },
    {
        "id": "d9beed59.94155",
        "type": "inject",
        "z": "a77bf1d3.a74af",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 120,
        "y": 720,
        "wires": [
            [
                "58e23b31.544664",
                "f3532686.119a28"
            ]
        ]
    },
    {
        "id": "f3532686.119a28",
        "type": "debug",
        "z": "a77bf1d3.a74af",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 720,
        "wires": []
    },
    {
        "id": "fe214737.5851e8",
        "type": "mqtt in",
        "z": "a77bf1d3.a74af",
        "name": "",
        "topic": "esp32/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "32867152.1a9afe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 80,
        "y": 200,
        "wires": [
            [
                "483bf269.46d14c",
                "6daac8e7.9b06e8",
                "2f4ee1d0.15882e"
            ]
        ]
    },
    {
        "id": "2f4ee1d0.15882e",
        "type": "json",
        "z": "a77bf1d3.a74af",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 110,
        "y": 340,
        "wires": [
            [
                "6b0da638.130548",
                "73bed695.7018e8"
            ]
        ]
    },
    {
        "id": "6b0da638.130548",
        "type": "debug",
        "z": "a77bf1d3.a74af",
        "name": "jsonToString",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 170,
        "y": 440,
        "wires": []
    },
    {
        "id": "15c59248.f1feae",
        "type": "debug",
        "z": "a77bf1d3.a74af",
        "name": "tets",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 460,
        "wires": []
    },
    {
        "id": "3def5a73.ba8f86",
        "type": "mqtt in",
        "z": "daafd2c4.fca54",
        "name": "",
        "topic": "esp32/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "32867152.1a9afe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 80,
        "y": 240,
        "wires": [
            [
                "eabb0698.e7f498",
                "553a0f60.80535"
            ]
        ]
    },
    {
        "id": "553a0f60.80535",
        "type": "json",
        "z": "daafd2c4.fca54",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 110,
        "y": 380,
        "wires": [
            [
                "2a904fe8.a6338",
                "8c424dc9.a216e",
                "1b24ad2f.198453"
            ]
        ]
    },
    {
        "id": "8c424dc9.a216e",
        "type": "function",
        "z": "daafd2c4.fca54",
        "name": "",
        "func": "var dev ={payload:msg.payload.Device};\nvar status ={payload:msg.payload.status};\nvar network = {payload:msg.payload.network};\nvar rssi = { payload:parseFloat(msg.payload.rssi).toFixed(0) };\nvar ip = {payload:msg.payload.mqttIP};\nvar press = { payload:parseFloat(msg.payload.pressure).toFixed(2) };\nvar hum = { payload:parseFloat(msg.payload.humidity).toFixed(2) };\nvar temp = { payload:parseFloat(msg.payload.temp) };\nvar Co = { payload:parseFloat(msg.payload.co).toFixed(2) };\nvar No2 = { payload:parseFloat(msg.payload.no2).toFixed(2) };\nvar o3 = { payload:parseFloat(msg.payload.o3).toFixed(2) };\nvar So2 = { payload:parseFloat(msg.payload.so2).toFixed(2) };\nvar lat = { payload:parseFloat(msg.payload.gps[0]).toFixed(6) };\nvar lon = { payload:parseFloat(msg.payload.gps[1]).toFixed(6) };\nvar alt = { payload:parseFloat((msg.payload.pressure) * 0.09).toFixed(2) };\n\nreturn [dev,status,network,rssi,ip,press,hum,temp,Co,No2,o3,So2,lat,lon,alt ];\n\n ",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "c55ef961.ab5c98"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                "e731923f.56dc7"
            ],
            [
                "6ff34b5e.7f2f24"
            ],
            []
        ]
    },
    {
        "id": "2a904fe8.a6338",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "jsonToString",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 280,
        "wires": []
    },
    {
        "id": "eabb0698.e7f498",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "mqtt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 120,
        "wires": []
    },
    {
        "id": "e731923f.56dc7",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "lat0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 560,
        "wires": []
    },
    {
        "id": "6ff34b5e.7f2f24",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "lon0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 620,
        "wires": []
    },
    {
        "id": "c55ef961.ab5c98",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "name0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 420,
        "wires": []
    },
    {
        "id": "dc9dee25.b592b",
        "type": "debug",
        "z": "daafd2c4.fca54",
        "name": "xx",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 480,
        "wires": []
    },
    {
        "id": "9d3b28ed.942d58",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "mqtt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 140,
        "wires": []
    },
    {
        "id": "815979ab.7b8de8",
        "type": "mqtt in",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "topic": "esp32/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "32867152.1a9afe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 80,
        "y": 260,
        "wires": [
            [
                "9d3b28ed.942d58",
                "d188aca0.b7e6f"
            ]
        ]
    },
    {
        "id": "95223a.ee65adc8",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "jsonToString",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "d188aca0.b7e6f",
        "type": "json",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 270,
        "y": 360,
        "wires": [
            [
                "95223a.ee65adc8",
                "294f71f1.7be02e",
                "f070a06b.afa76",
                "e169da87.1ce788"
            ]
        ]
    },
    {
        "id": "294f71f1.7be02e",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "var dev ={payload:msg.payload.Device};\nvar status ={payload:msg.payload.status};\nvar network = {payload:msg.payload.network};\nvar rssi = { payload:parseFloat(msg.payload.rssi).toFixed(0) };\nvar ip = {payload:msg.payload.mqttIP};\nvar press = { payload:parseFloat(msg.payload.pressure).toFixed(2) };\nvar hum = { payload:parseFloat(msg.payload.humidity).toFixed(2) };\nvar temp = { payload:parseFloat(msg.payload.temp) };\nvar Co = { payload:parseFloat(msg.payload.co).toFixed(2) };\nvar No2 = { payload:parseFloat(msg.payload.no2).toFixed(2) };\nvar o3 = { payload:parseFloat(msg.payload.o3).toFixed(2) };\nvar So2 = { payload:parseFloat(msg.payload.so2).toFixed(2) };\nvar lat = { payload:parseFloat(msg.payload.gps[0]).toFixed(6) };\nvar lon = { payload:parseFloat(msg.payload.gps[1]).toFixed(6) };\nvar alt = { payload:parseFloat((msg.payload.pressure) * 0.09).toFixed(2) };\n\nreturn [dev,status,network,rssi,ip,press,hum,temp,Co,No2,o3,So2,lat,lon,alt ];\n\n ",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "4d8a616b.4df64",
                "b2f0d6c6.553398"
            ],
            [
                "26c23fbb.77e96"
            ],
            [
                "b49da85b.c8be28"
            ],
            [
                "e1b67373.9f9b2"
            ],
            [
                "f296ebeb.1d56c8"
            ],
            [
                "1d46c19e.46cd1e",
                "e48fc64e.014958"
            ],
            [
                "92b63c98.93f74",
                "3b1938c9.916dd8"
            ],
            [
                "41429d1c.d26b84",
                "4c829aad.1a77b4"
            ],
            [
                "f4125550.383d48",
                "4e6da09d.1cb02"
            ],
            [
                "e0fbf79a.d92c58",
                "e9cf9440.c5ff88"
            ],
            [
                "c57f9258.91647",
                "30f8b12f.84b37e"
            ],
            [
                "4eb5caa9.0b9f64",
                "c2325036.48014"
            ],
            [
                "be11c3b5.ebb0f",
                "4d273a07.e7a764"
            ],
            [
                "7bb10d10.d9fb44",
                "9cd39627.f11e08"
            ],
            [
                "cc628e56.f997d",
                "f59ac7c4.4457c8"
            ]
        ]
    },
    {
        "id": "4d8a616b.4df64",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "name0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 360,
        "wires": []
    },
    {
        "id": "be11c3b5.ebb0f",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "lat0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 760,
        "wires": []
    },
    {
        "id": "7bb10d10.d9fb44",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "lon0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 800,
        "wires": []
    },
    {
        "id": "f070a06b.afa76",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "// create random position\n//var lat = 6.0788 + Math.random() * 0.001;\n//var lon = 80.1919 + Math.random() * 0.001;\nvar dev =msg.payload.Device;\nvar lat0 = parseFloat(msg.payload.gps[0]).toFixed(6);\nvar lon0 = parseFloat(msg.payload.gps[1]).toFixed(6) ;\n\nmsg.payload={\n    command :{\n    lat:lat0, \n    lon:lon0, \n    zoom:17,\n    name:\"Drone\", \n    icon:\"plane\",\n    iconColor: '#FF0000',\n    color:\"#0000FF\"}};\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 200,
        "wires": [
            [
                "c8300b35.1b45b8",
                "6a4c73fe.8a87cc"
            ]
        ]
    },
    {
        "id": "e169da87.1ce788",
        "type": "trigger",
        "z": "246ce6ab.bd4c1a",
        "name": "trigger",
        "op1": "AQM Connected",
        "op2": "AQM Disconnected",
        "op1type": "str",
        "op2type": "str",
        "duration": "7",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 210,
        "y": 540,
        "wires": [
            [
                "5a9e32e1.26731c",
                "c2f978d6.a7f9f8"
            ],
            [
                "c2f978d6.a7f9f8",
                "43f5e16f.8fa07"
            ]
        ]
    },
    {
        "id": "5a9e32e1.26731c",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "trigger",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 480,
        "wires": []
    },
    {
        "id": "c2f978d6.a7f9f8",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "\nif(msg.payload == \"AQM Connected\") {msg.payload={\n    ui_control:{\n        \"words\":\"AQM CONNECTED\",\n        \"icon\":\"signal_wifi_3_bar\",\n        \"color\":\"white\",\n        \"bgcolor\":\"green\"\n    }};}\nif(msg.payload == \"AQM Disconnected\") {msg.payload={\n    ui_control:{\n        \"words\":\"AQM DISCONNECTED\",\n        \"icon\":\"signal_wifi_0_bar\",\n        \"color\":\"white\",\n        \"bgcolor\":\"red\"\n    }};}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 640,
        "wires": [
            [
                "98157d2.748f38",
                "7442600f.97691"
            ]
        ]
    },
    {
        "id": "7442600f.97691",
        "type": "debug",
        "z": "246ce6ab.bd4c1a",
        "name": "BtnFunction",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 620,
        "wires": []
    },
    {
        "id": "43f5e16f.8fa07",
        "type": "function",
        "z": "246ce6ab.bd4c1a",
        "name": "",
        "func": "msg.payload={\n \nDevice : \"\",\n status : \"\",\n network : \"\",\n rssi : \"\",\n mqttIP : \"\",\n pressure : \"\",\n humidity : \"\",\n temp : \"\",\n co : \"\",\n no2 : \"\",\n o3 : \"\",\n so2 : \"\",\n gps :\"\"\n};\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 560,
        "wires": [
            [
                "294f71f1.7be02e"
            ]
        ]
    },
    {
        "id": "e429e7d2.8f5ad8",
        "type": "ui_text",
        "z": "56bde742.2302f8",
        "group": "6e1bf5f0.a0ae5c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Sensor Data :",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 820,
        "y": 80,
        "wires": []
    },
    {
        "id": "e253eeb0.8b0ca",
        "type": "ui_switch",
        "z": "56bde742.2302f8",
        "name": "",
        "label": "Temperature",
        "tooltip": "temperature and Humidity",
        "group": "6e1bf5f0.a0ae5c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "tempON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "\"green\"",
        "offvalue": "tempOFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "\"red\"",
        "animate": true,
        "x": 810,
        "y": 200,
        "wires": [
            [
                "e5bb60ab.16702"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "5b6d9116.c5a39",
        "type": "ui_switch",
        "z": "56bde742.2302f8",
        "name": "",
        "label": "Pressure & Alt.",
        "tooltip": "Atmospheric Pressure and Altitude",
        "group": "6e1bf5f0.a0ae5c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "presON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "\"green\"",
        "offvalue": "presOFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "\"red\"",
        "animate": true,
        "x": 820,
        "y": 300,
        "wires": [
            [
                "e5bb60ab.16702"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "a19b6231.a8e6d",
        "type": "ui_switch",
        "z": "56bde742.2302f8",
        "name": "",
        "label": "Carbon Monoxide(CO)",
        "tooltip": "Carbon Monoxide(CO) in ppm",
        "group": "6e1bf5f0.a0ae5c",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "coON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "\"green\"",
        "offvalue": "coOFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "\"red\"",
        "animate": true,
        "x": 840,
        "y": 360,
        "wires": [
            [
                "e5bb60ab.16702"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "469fc5e0.5ab48c",
        "type": "ui_switch",
        "z": "56bde742.2302f8",
        "name": "",
        "label": "Ozone(O3)",
        "tooltip": "Ozone(O3) in ppm",
        "group": "6e1bf5f0.a0ae5c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "o3ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "\"green\"",
        "offvalue": "o3OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "\"red\"",
        "animate": true,
        "x": 810,
        "y": 420,
        "wires": [
            [
                "e5bb60ab.16702",
                "8311233b.389c9"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "2133fe83.edc9b2",
        "type": "ui_switch",
        "z": "56bde742.2302f8",
        "name": "",
        "label": "Nitrogen Dioxide(NO2)",
        "tooltip": "Nitrogen Dioxide(NO2) in ppm",
        "group": "6e1bf5f0.a0ae5c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "no2ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "\"green\"",
        "offvalue": "no2OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "\"red\"",
        "animate": true,
        "x": 840,
        "y": 480,
        "wires": [
            [
                "e5bb60ab.16702"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "eb80c318.6e167",
        "type": "ui_switch",
        "z": "56bde742.2302f8",
        "name": "",
        "label": "Suphur Dioxide(SO2)",
        "tooltip": "Suphur Dioxide(SO2) in ppm",
        "group": "6e1bf5f0.a0ae5c",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "so2ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "\"green\"",
        "offvalue": "so2OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "\"red\"",
        "animate": true,
        "x": 840,
        "y": 540,
        "wires": [
            [
                "e5bb60ab.16702"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "fbd8ab2e.bdfa58",
        "type": "ui_button",
        "z": "56bde742.2302f8",
        "name": "",
        "group": "6e1bf5f0.a0ae5c",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "ALL ON",
        "tooltip": "",
        "color": "green",
        "bgcolor": "#2A2A2A",
        "icon": "power_settings_new",
        "payload": "all_on",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 100,
        "wires": [
            [
                "79cb4ddf.34f174",
                "86eddc89.66636"
            ]
        ]
    },
    {
        "id": "e5bb60ab.16702",
        "type": "mqtt out",
        "z": "56bde742.2302f8",
        "name": "esp32/output",
        "topic": "esp32/output",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "32867152.1a9afe",
        "x": 1290,
        "y": 180,
        "wires": []
    },
    {
        "id": "aa082565.65cce8",
        "type": "ui_switch",
        "z": "56bde742.2302f8",
        "name": "",
        "label": "Humidity",
        "tooltip": "Humidity",
        "group": "6e1bf5f0.a0ae5c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "humON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "humOFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 800,
        "y": 260,
        "wires": [
            [
                "e5bb60ab.16702"
            ]
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "8311233b.389c9",
        "type": "debug",
        "z": "56bde742.2302f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 380,
        "wires": []
    },
    {
        "id": "b9b567e0.e1fbd8",
        "type": "mqtt in",
        "z": "56bde742.2302f8",
        "name": "",
        "topic": "esp32/TEL_status",
        "qos": "0",
        "datatype": "json",
        "broker": "32867152.1a9afe",
        "nl": false,
        "rap": false,
        "x": 90,
        "y": 280,
        "wires": [
            [
                "5cffb613.fbfc78",
                "4c7ce353.20033c"
            ]
        ]
    },
    {
        "id": "5cffb613.fbfc78",
        "type": "debug",
        "z": "56bde742.2302f8",
        "name": "raw_mqtt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 140,
        "wires": []
    },
    {
        "id": "4c7ce353.20033c",
        "type": "json",
        "z": "56bde742.2302f8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 270,
        "y": 280,
        "wires": [
            [
                "dae0bb94.ecec48",
                "79cb4ddf.34f174"
            ]
        ]
    },
    {
        "id": "dae0bb94.ecec48",
        "type": "debug",
        "z": "56bde742.2302f8",
        "name": "TEL_status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 180,
        "wires": []
    },
    {
        "id": "79cb4ddf.34f174",
        "type": "function",
        "z": "56bde742.2302f8",
        "name": "Parse state json",
        "func": "// Restore status after a re-deploy/reboot and\n// update switch status\nvar pres_S = {payload: (msg.payload.pressure_status ? \"presON\" : \"presOFF\")};\nvar hum_S = {payload: (msg.payload.humidity_status ? \"humON\" : \"humOFF\")};\nvar temp_S= {payload: (msg.payload.temp_status ? \"tempON\" : \"tempOFF\")};\nvar co_S = {payload: (msg.payload.co_status ? \"coON\" : \"coOFF\")};\nvar no2_S = {payload: (msg.payload.no2_status ? \"no2ON\" : \"no2OFF\")};\nvar o3_S = {payload: (msg.payload.o3_status ? \"o3ON\" : \"o3OFF\")};\nvar so2_S = {payload: (msg.payload.so2_status ? \"so2ON\" : \"so2OFF\")};\nvar gps_S = {payload: (msg.payload.gps_status ? \"gpsON\" : \"gpsOFF\")};\n\nif(msg.payload == \"all_on\" ){\n     pres_S = {payload:  \"presON\"};\n     hum_S =  {payload:\"humON\"};\n     temp_S= {payload:\"tempON\"};\n     co_S = {payload:\"coON\"};\n     no2_S = {payload:\"no2ON\"};\n     o3_S = {payload:\"o3ON\"};\n     so2_S = {payload:\"so2ON\"};\n     gps_S = {payload:\"gpsON\"}; \n        \n}else if(msg.payload == \"all_off\"){\n     pres_S =  {payload:\"presOFF\"};\n     hum_S =  {payload:\"humOFF\"};\n     temp_S= {payload:\"tempOFF\"};\n     co_S = {payload:\"coOFF\"};\n     no2_S = {payload:\"no2OFF\"};\n     o3_S = {payload:\"o3OFF\"};\n     so2_S = {payload:\"so2OFF\"};\n     gps_S = {payload:\"gpsOFF\"};\n}\n\n\nreturn [pres_S, hum_S, temp_S,co_S,no2_S,o3_S,so2_S,gps_S];\n\n",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "5b6d9116.c5a39"
            ],
            [
                "aa082565.65cce8"
            ],
            [
                "e253eeb0.8b0ca"
            ],
            [
                "a19b6231.a8e6d"
            ],
            [
                "2133fe83.edc9b2"
            ],
            [
                "469fc5e0.5ab48c"
            ],
            [
                "eb80c318.6e167"
            ],
            [
                "6cb7ba1a.b01c04"
            ]
        ]
    },
    {
        "id": "6bbb7e3.cd79c8",
        "type": "ui_button",
        "z": "56bde742.2302f8",
        "name": "",
        "group": "6e1bf5f0.a0ae5c",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "ALL OFF",
        "tooltip": "",
        "color": "red",
        "bgcolor": "#2A2A2A",
        "icon": "power_settings_new",
        "payload": "all_off",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 480,
        "wires": [
            [
                "79cb4ddf.34f174",
                "cdbb24cf.16bc28"
            ]
        ]
    },
    {
        "id": "86eddc89.66636",
        "type": "debug",
        "z": "56bde742.2302f8",
        "name": "all on",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "cdbb24cf.16bc28",
        "type": "debug",
        "z": "56bde742.2302f8",
        "name": "all off",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 540,
        "wires": []
    },
    {
        "id": "53f04c9a.877194",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "influx test",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1260,
        "wires": []
    },
    {
        "id": "673449fe.cfb308",
        "type": "mqtt in",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "topic": "esp32/data",
        "qos": "0",
        "datatype": "auto",
        "broker": "32867152.1a9afe",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 120,
        "y": 880,
        "wires": [
            [
                "6f8c9b49.d24f54",
                "f10f27f3.7ed2d8"
            ]
        ]
    },
    {
        "id": "6f8c9b49.d24f54",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "mqtt",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 760,
        "wires": []
    },
    {
        "id": "f10f27f3.7ed2d8",
        "type": "json",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 270,
        "y": 880,
        "wires": [
            [
                "8c57ba26.1c3c08",
                "3373fa9d.233f86",
                "b6c32297.959d9",
                "f1e0e04c.9ffe6"
            ]
        ]
    },
    {
        "id": "8c57ba26.1c3c08",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "jsonToString",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 780,
        "wires": []
    },
    {
        "id": "3373fa9d.233f86",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "func": "var dev ={payload:msg.payload.Device};\nvar status ={payload:msg.payload.status};\nvar network = {payload:msg.payload.network};\nvar rssi = { payload:parseFloat(msg.payload.rssi).toFixed(0) };\nvar ip = {payload:msg.payload.mqttIP};\nvar press = { payload:parseFloat(msg.payload.pressure).toFixed(2) };\nvar hum = { payload:parseFloat(msg.payload.humidity).toFixed(2) };\nvar tempe ={ payload:parseFloat(msg.payload.temp).toFixed(2) };\nvar Co = { payload:parseFloat(msg.payload.co).toFixed(2) };\nvar No2 = { payload:parseFloat(msg.payload.no2).toFixed(2) };\nvar o3 = { payload:parseFloat(msg.payload.o3).toFixed(2) };\nvar So2 = { payload:parseFloat(msg.payload.so2).toFixed(2) };\nvar lat = { payload:parseFloat(msg.payload.gps[0]).toFixed(6) };\nvar lon = { payload:parseFloat(msg.payload.gps[1]).toFixed(6) };\nvar alt = { payload:parseFloat((msg.payload.pressure) * 0.09).toFixed(2) };\n\nreturn [dev,status,network,rssi,ip,press,hum,tempe,Co,No2,o3,So2,lat,lon,alt ];\n\n ",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 980,
        "wires": [
            [
                "e45d6f79.e2412"
            ],
            [
                "2f67912c.c07a0e"
            ],
            [
                "8b4a1071.b1d7f"
            ],
            [
                "d5914a2a.ad24a8"
            ],
            [
                "3eb5516a.8267ae"
            ],
            [
                "765d673b.7bb658"
            ],
            [
                "63fc0a3c.064764"
            ],
            [
                "7ecc60d1.853ca",
                "53f04c9a.877194"
            ],
            [
                "327a05c.766fffa"
            ],
            [
                "f9144d6e.b065a"
            ],
            [
                "fb866a03.706db8"
            ],
            [
                "9da1ab3e.c97898"
            ],
            [
                "3627061f.e68eda"
            ],
            [
                "384335e5.cf033a"
            ],
            [
                "145e9a35.60ff46"
            ]
        ]
    },
    {
        "id": "91373699.7559c8",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 400,
        "wires": []
    },
    {
        "id": "f1e0e04c.9ffe6",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Set data",
        "func": "var now = new Date();\n\nmsg.payload = {\n    //\"Timestamp\" : now.toLocaleTimeString(),\n    \"Timestamp\" : now.getTime(),\n    //\"Device\" : msg.payload.Device,\n    //\"Status\" : msg.payload.status,\n    //\"Network\" : msg.payload.network,\n   // \"RSSI\" : msg.payload.rssi,\n    //\"MQTT_IP\" : msg.payload.mqttIP,\n    \"Pressure\" : msg.payload.pressure,\n    \"Altitude\" : parseFloat((msg.payload.pressure) * 0.09).toFixed(2),\n    \"Humidity\" : msg.payload.humidity,\n    \"Temperature\" : msg.payload.temp,\n    \"co\" : msg.payload.co,\n    \"no2\" : msg.payload.no2,\n    \"o3\" : msg.payload.o3,\n    \"so2\" : msg.payload.so2,\n    \"Latitude\" : msg.payload.gps[0],\n    \"Longitude\" : msg.payload.gps[1]\n}\n//return sensorData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 620,
        "wires": [
            [
                "f46f569e.ff1a08",
                "173f827b.c2ad7e"
            ]
        ]
    },
    {
        "id": "859868d2.eec788",
        "type": "ui_dropdown",
        "z": "f433a985.3ae538",
        "name": "",
        "label": "Select",
        "tooltip": "",
        "place": "Select option",
        "group": "160e81fb.f1c86e",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "p",
                "value": 1,
                "type": "num"
            },
            {
                "label": "q",
                "value": 2,
                "type": "num"
            },
            {
                "label": "r",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "selection",
        "topicType": "msg",
        "x": 670,
        "y": 940,
        "wires": [
            [
                "5a4771b5.d22f6"
            ]
        ]
    },
    {
        "id": "eb1edad0.264978",
        "type": "debug",
        "z": "f433a985.3ae538",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1f215bca.eef9b4",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "selection",
        "func": "var chart = [{\n    \"series\":[],\n    \"data\":[],\n    \"labels\":[\"Sensor Data\"]\n}];\n\nlet columns = 0;\n\nif(msg.topic == \"selection\"){\n//node.warn(\"chart 0  \"+msg.payload[0].toString());\nvar selMsg = { payload: msg.payload,topic:\"selected\" };\n}\n\nfor(var series in msg.payload[0]) {\n    if(series!==\"Timestamp\") {\n        chart[0].series.push(series);\n        chart[0].data.push([]);\n        columns++;\n    }\n}\n\n\nfor (var j=0; j<msg.payload.length; j++) {\n   for(var i=0;i<columns;i++) {\n       chart[0].data[i].push({\"x\":msg.payload[j].Timestamp, \"y\":msg.payload[j][chart[0].series[i]]});\n   } \n}\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 860,
        "wires": [
            [
                "886d7264.65d1d",
                "579c6a8e.2180f4"
            ]
        ]
    },
    {
        "id": "886d7264.65d1d",
        "type": "ui_chart",
        "z": "f433a985.3ae538",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 13,
        "width": 25,
        "height": 6,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1500",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1150,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "579c6a8e.2180f4",
        "type": "debug",
        "z": "f433a985.3ae538",
        "name": "selection",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 920,
        "wires": []
    },
    {
        "id": "5a4771b5.d22f6",
        "type": "function",
        "z": "f433a985.3ae538",
        "name": "",
        "func": "var newMsg = { payload: msg.payload,topic:\"selection\" };\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 960,
        "wires": [
            [
                "eb1edad0.264978",
                "1f215bca.eef9b4"
            ]
        ]
    },
    {
        "id": "eb760bbb.8e5ec",
        "type": "inject",
        "z": "5c561430.86ca8c",
        "name": "Refresh Timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "Refresh Timer",
        "payload": "true",
        "payloadType": "bool",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "e54c1170.c13488",
                "f6657c5c.2621a8"
            ]
        ]
    },
    {
        "id": "74cb77c.92dd108",
        "type": "ui_button",
        "z": "5c561430.86ca8c",
        "name": "Weather Refresh",
        "group": "14584712.7a2929",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Weather Refresh",
        "tooltip": "weather refresh",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "e54c1170.c13488",
                "f6657c5c.2621a8"
            ]
        ]
    },
    {
        "id": "4d90e53a.37962c",
        "type": "ui_text",
        "z": "5c561430.86ca8c",
        "group": "b12941f.1cd05c",
        "order": 9,
        "width": 10,
        "height": 1,
        "name": "Condition Txt",
        "label": "Condition :",
        "format": "{{msg.payload.detail}}",
        "layout": "row-left",
        "x": 1150,
        "y": 100,
        "wires": []
    },
    {
        "id": "89a4bed9.5b467",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "Prepare Dashboard Data",
        "func": "var windDirection = {};\nvar windDirectionIcon = {};\nvar windSpeed = {};\nvar windSpeedIcon = {};\nvar sunRise = {};\nvar sunSet = {};\nvar conditionIcon = {};\nvar date = new Date ();\n\n/* function for converting meteorogical degree to text */\n\nvar degToCard = function(deg){\nif (deg>11.25 && deg<=33.75){\nreturn \"NNE\";\n  }else if (deg>33.75 && deg<56.25){\nreturn \"NE\";\n  }else if (deg>56.25 && deg<78.75){\nreturn \"ENE\";\n  }else if (deg>78.75 && deg<101.25){\nreturn \"East\";\n  }else if (deg>101.25 && deg<123.75){\nreturn \"ESE\";\n  }else if (deg>123.75 && deg<146.25){\nreturn \"SE\";\n  }else if (deg>146.25 && deg<168.75){\nreturn \"SSE\";\n  }else if (deg>168.75 && deg<191.25){\nreturn \"South\";\n  }else if (deg>191.25 && deg<213.75){\nreturn \"SSW\";\n  }else if (deg>213.75 && deg<236.25){\nreturn \"SW\";\n  }else if (deg>236.25 && deg<258.75){\nreturn \"WSW\";\n  }else if (deg>258.75 && deg<281.25){\nreturn \"West\";\n  }else if (deg>281.25 && deg<303.75){\nreturn \"WNW\";\n  }else if (deg>303.75 && deg<326.25){\nreturn \"NW\";\n  }else if (deg>326.25 && deg<348.75){\nreturn \"NNW\";\n  }else{\nreturn \"North\"; \n  }\n}\n\n/* function for converting meteorogical degree to weather icons */\n\nvar degToCardIcon = function(deg){\nif (deg>11.25 && deg<=33.75){\nreturn \"wi-from-nne\";\n  }else if (deg>33.75 && deg<56.25){\nreturn \"wi-from-ne\";\n  }else if (deg>56.25 && deg<78.75){\nreturn \"wi-from-ene\";\n  }else if (deg>78.75 && deg<101.25){\nreturn \"wi-from-e\";\n  }else if (deg>101.25 && deg<123.75){\nreturn \"wi-from-ese\";\n  }else if (deg>123.75 && deg<146.25){\nreturn \"wi-from-se\";\n  }else if (deg>146.25 && deg<168.75){\nreturn \"wi-from-sse\";\n  }else if (deg>168.75 && deg<191.25){\nreturn \"wi-from-s\";\n  }else if (deg>191.25 && deg<213.75){\nreturn \"wi-from-ssw\";\n  }else if (deg>213.75 && deg<236.25){\nreturn \"wi-from-sw\";\n  }else if (deg>236.25 && deg<258.75){\nreturn \"wi-from-wsw\";\n  }else if (deg>258.75 && deg<281.25){\nreturn \"wi-from-w\";\n  }else if (deg>281.25 && deg<303.75){\nreturn \"wi-from-wnw\";\n  }else if (deg>303.75 && deg<326.25){\nreturn \"wi-from-nw\";\n  }else if (deg>326.25 && deg<348.75){\nreturn \"wi-from-nnw\";\n  }else{\nreturn \"wi-from-n\"; \n  }\n}\n\n/* Function for converting wind speed into Beaufort scale icon */\n\nvar speedToCardIcon = function(speed){\nif (speed>0.5 && speed<=1.5){\nreturn \"wi-wind-beaufort-1\";\n  }else if (speed>1.5 && speed<=3.3){\nreturn \"wi-wind-beaufort-2\";\n  }else if (speed>3.3 && speed<=5.5){\nreturn \"wi-wind-beaufort-3\";\n  }else if (speed>5.5 && speed<=7.9){\nreturn \"wi-wind-beaufort-4\";\n  }else if (speed>7.9 && speed<=10.7){\nreturn \"wi-wind-beaufort-5\";\n  }else if (speed>10.7 && speed<=13.8){\nreturn \"wi-wind-beaufort-6\";\n  }else if (speed>13.8 && speed<=17.1){\nreturn \"wi-wind-beaufort-7\";\n  }else if (speed>17.1 && speed<=20.7){\nreturn \"wi-wind-beaufort-8\";\n  }else if (speed>20.7 && speed<=24.4){\nreturn \"wi-wind-beaufort-9\";\n  }else if (speed>24.4 && speed<=28.4){\nreturn \"wi-wind-beaufort-10\";\n  }else if (speed>28.4 && speed<=32.6){\nreturn \"wi-wind-beaufort-11\";\n  }else if (speed>32.6){\nreturn \"wi-wind-beaufort-12\";\n  }else{\nreturn \"wi-wind-beaufort-0\"; \n  }\n}\n\n/* Function for Time Conversions */\n\nfunction timeConverter(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp * 1000);\n  var hour = a.getHours();\n  var min = a.getMinutes();\n  if (min < 10) {min = \"0\" + min;}\n    else {min = min;}\n  var sec = a.getSeconds();\n  if (sec < 10) {sec = \"0\" + sec;}\n    else {sec = sec;}\n    \n  var time = hour + ':' + min + ':' + sec ;\n  return time;\n}\n\n/* Convert OpenWeeather Map Icon to https://erikflowers.github.io/weather-icons/ */\n\nconst owIconMap = new Map();\n\nowIconMap.set('01d', 'wi-day-sunny'); // clear sky\nowIconMap.set('02d', 'wi-day-cloudy'); // few clouds\nowIconMap.set('03d', 'wi-cloud'); // scattered clouds\nowIconMap.set('04d', 'wi-cloudy'); // broken clouds\nowIconMap.set('09d', 'wi-day-showers'); // shower rain\nowIconMap.set('10d', 'wi-day-rain'); // rain\nowIconMap.set('11d', 'wi-thunderstorm'); // thunderstorm\nowIconMap.set('13d', 'wi-snow'); // snow\nowIconMap.set('50d', 'wi-fog'); // mist\nowIconMap.set('01n', 'wi-night-clear'); // clear sky\nowIconMap.set('02n', 'wi-night-alt-cloudy'); // few clouds\nowIconMap.set('03n', 'wi-cloud'); // scattered clouds\nowIconMap.set('04n', 'wi-cloudy'); // broken clouds\nowIconMap.set('09n', 'wi-night-alt-showers'); // shower rain\nowIconMap.set('10n', 'wi-night-alt-rain'); // rain\nowIconMap.set('11n', 'wi-thunderstorm'); // thunderstorm\nowIconMap.set('13n', 'wi-snow'); // snow\nowIconMap.set('50n', 'wi-fog'); // mist\n\nconditionIcon.topic = \"ConditionIcon\";\nconditionIcon.payload = owIconMap.get(msg.payload.icon);\n\nwindDirection.topic = \"WindDirection\";\nwindDirection.payload = degToCard(msg.payload.winddirection);\n\nwindDirectionIcon.topic = \"WindDirectionIcon\";\nwindDirectionIcon.payload = degToCardIcon(msg.payload.winddirection);\n//var Str_Direction = parseInt(msg.payload.winddirection);\n\nwindSpeed.topic = \"WindSpeed\";\nwindSpeed.payload = msg.payload.windspeed +  \" m/s\"; /* \" + windDirection.payload; */\n\nwindSpeedIcon.topic = \"WindSpeedIcon\";\nwindSpeedIcon.payload = speedToCardIcon(msg.payload.windspeed);\n\nsunRise.topic = \"SunRise\";\nsunRise.payload = timeConverter(msg.payload.sunrise);\n\nsunSet.topic = \"SunRet\";\nsunSet.payload = timeConverter(msg.payload.sunset);\n\nowIconMap.clear(); //freeing resource\n\nreturn [conditionIcon, windSpeedIcon, windSpeed, windDirection, windDirectionIcon, sunRise, sunSet];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 260,
        "wires": [
            [
                "d0990bb3.6ee1f8",
                "e5cfc523.804698"
            ],
            [
                "6bfd9bef.141194"
            ],
            [
                "49e2e33e.486c14",
                "c150667f.005548"
            ],
            [],
            [],
            [
                "393c1d0b.05766a"
            ],
            [
                "d2011150.f678f"
            ]
        ]
    },
    {
        "id": "49e2e33e.486c14",
        "type": "ui_text",
        "z": "5c561430.86ca8c",
        "group": "8da50f69.44fe38",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "WindSpeed",
        "label": "Wind speed",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1150,
        "y": 220,
        "wires": []
    },
    {
        "id": "393c1d0b.05766a",
        "type": "ui_text",
        "z": "5c561430.86ca8c",
        "group": "14584712.7a2929",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "Sunrise",
        "label": "sun rise",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1140,
        "y": 320,
        "wires": []
    },
    {
        "id": "d2011150.f678f",
        "type": "ui_text",
        "z": "5c561430.86ca8c",
        "group": "14584712.7a2929",
        "order": 12,
        "width": 2,
        "height": 1,
        "name": "Sunset",
        "label": "sun set",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 1140,
        "y": 400,
        "wires": []
    },
    {
        "id": "a767f2cc.5f3478",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "14584712.7a2929",
        "name": "Sunrise Icon",
        "order": 7,
        "width": 1,
        "height": 1,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: left;align-items: center;\">\n<i class=\"fa-2x wi wi-sunrise\"></i>\n</div> ",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1150,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "7dfa615d.50546",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "14584712.7a2929",
        "name": "Sunset Icon",
        "order": 11,
        "width": 1,
        "height": 1,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: left;align-items: center;\">\n<i class=\"fa-2x wi wi-sunset\"></i>\n</div> ",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1150,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e54c1170.c13488",
        "type": "openweathermap",
        "z": "5c561430.86ca8c",
        "name": "Current Weather",
        "wtype": "current",
        "lon": "80.1847351",
        "lat": "6.0795023",
        "city": "",
        "country": "",
        "language": "en",
        "x": 410,
        "y": 140,
        "wires": [
            [
                "89a4bed9.5b467",
                "4d90e53a.37962c",
                "5cd0cb4.09ac834",
                "43bc5e2b.6024a",
                "dcd953b8.01b91"
            ]
        ]
    },
    {
        "id": "6bfd9bef.141194",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "8da50f69.44fe38",
        "name": "WindSpeed Icon",
        "order": 3,
        "width": 4,
        "height": 1,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: left;align-items: top;\">\n<i class=\"fa-3x wi {{msg.payload}}\"></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1160,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "480a6cbf.880804",
        "type": "debug",
        "z": "5c561430.86ca8c",
        "name": "Forecast debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1030,
        "y": 940,
        "wires": []
    },
    {
        "id": "5af8efb7.126a98",
        "type": "comment",
        "z": "5c561430.86ca8c",
        "name": "Open Weather API für aktuelles Wetter und Forecast",
        "info": "",
        "x": 520,
        "y": 60,
        "wires": []
    },
    {
        "id": "d0990bb3.6ee1f8",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "b12941f.1cd05c",
        "name": "Condition Icon",
        "order": 3,
        "width": 6,
        "height": 3,
        "format": "<link rel=\"stylesheet\" href=\"F:/Project works & Backup/INSEED PROJECTS/Air Quality Monitoring/Software sources/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: center;align-items: center;\">\n<i class=\"fa-4x wi {{msg.payload}}\"></i>\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1160,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f6657c5c.2621a8",
        "type": "openweathermap",
        "z": "5c561430.86ca8c",
        "name": "5 Day Forecast",
        "wtype": "forecast",
        "lon": "80.1847351",
        "lat": "6.0795023",
        "city": "",
        "country": "",
        "language": "en",
        "x": 390,
        "y": 600,
        "wires": [
            [
                "25b2dc06.cd7bdc",
                "e58a247.3094b58",
                "c5b71946.ca4de",
                "480a6cbf.880804",
                "fd283f2c.a224c",
                "29dfa9e9.c18956",
                "2fb9d1de.355ede",
                "e578eac8.4ab5f8",
                "1308b9cf.3834d6",
                "d0ae2547.dc3688",
                "e8a5b2b5.55457",
                "3f12c3b3.8b12bc"
            ]
        ]
    },
    {
        "id": "25b2dc06.cd7bdc",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "Prepare Forecast Icon",
        "func": "var wfcIcon1 = {};\nvar wfcIcon2 = {}; \nvar wfcIcon3 = {};\nvar wfcIcon4 = {};\nvar wfcIcon5 = {};\nvar wfcIcon6 = {};\nvar wfcIcon7 = {};\nvar wfcIcon8 = {};\n\n\nvar date = new Date ();\n\n/* Function for Time Conversions */\n\nfunction timeConverter(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp * 1000);\n  var hour = a.getHours();\n  var min = a.getMinutes();\n  if (min < 10) {min = \"0\" + min;}\n    else {min = min;}\n  var sec = a.getSeconds();\n  if (sec < 10) {sec = \"0\" + sec;}\n    else {sec = sec;}\n    \n  var time = hour + ':' + min; /* + ':' + sec ;*/\n  return time;\n}\n\n/* Convert OpenWeeather Map Icon to https://erikflowers.github.io/weather-icons/ */\n\nconst owIconMap = new Map();\n\nowIconMap.set('01d', 'wi-day-sunny'); // clear sky\nowIconMap.set('02d', 'wi-day-cloudy'); // few clouds\nowIconMap.set('03d', 'wi-cloud'); // scattered clouds\nowIconMap.set('04d', 'wi-cloudy'); // broken clouds\nowIconMap.set('09d', 'wi-day-showers'); // shower rain\nowIconMap.set('10d', 'wi-day-rain'); // rain\nowIconMap.set('11d', 'wi-thunderstorm'); // thunderstorm\nowIconMap.set('13d', 'wi-snow'); // snow\nowIconMap.set('50d', 'wi-fog'); // mist\nowIconMap.set('01n', 'wi-night-clear'); // clear sky\nowIconMap.set('02n', 'wi-night-alt-cloudy'); // few clouds\nowIconMap.set('03n', 'wi-cloud'); // scattered clouds\nowIconMap.set('04n', 'wi-cloudy'); // broken clouds\nowIconMap.set('09n', 'wi-night-alt-showers'); // shower rain\nowIconMap.set('10n', 'wi-night-alt-rain'); // rain\nowIconMap.set('11n', 'wi-thunderstorm'); // thunderstorm\nowIconMap.set('13n', 'wi-snow'); // snow\nowIconMap.set('50n', 'wi-fog'); // mist\n\nwfcIcon1.topic = msg.payload[0].dt_txt;\nwfcIcon1.payload = owIconMap.get(msg.payload[0].weather[0].icon);\n\nwfcIcon2.topic = msg.payload[1].dt_txt;\nwfcIcon2.payload = owIconMap.get(msg.payload[1].weather[0].icon);\n\nwfcIcon3.topic = msg.payload[2].dt_txt;\nwfcIcon3.payload = owIconMap.get(msg.payload[2].weather[0].icon);\n\nwfcIcon4.topic = msg.payload[3].dt_txt;\nwfcIcon4.payload = owIconMap.get(msg.payload[3].weather[0].icon);\n\nwfcIcon5.topic = msg.payload[4].dt_txt;\nwfcIcon5.payload = owIconMap.get(msg.payload[4].weather[0].icon);\n\nwfcIcon6.topic = msg.payload[5].dt_txt;\nwfcIcon6.payload = owIconMap.get(msg.payload[5].weather[0].icon);\n\nwfcIcon7.topic = msg.payload[6].dt_txt;\nwfcIcon7.payload = owIconMap.get(msg.payload[6].weather[0].icon);\n\nwfcIcon8.topic = msg.payload[7].dt_txt;\nwfcIcon8.payload = owIconMap.get(msg.payload[7].weather[0].icon);\n\n\nowIconMap.clear(); //freeing resource\n\nreturn [wfcIcon1, wfcIcon2, wfcIcon3, wfcIcon4, wfcIcon5, wfcIcon6, wfcIcon7, wfcIcon8];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 660,
        "wires": [
            [
                "39139188.be2256",
                "ff5f6ba2.e091d8"
            ],
            [
                "c24820ec.48ca8"
            ],
            [
                "764a58c0.442438"
            ],
            [
                "6eab6954.c57d38"
            ],
            [
                "c756059d.18796"
            ],
            [
                "53046826.3645"
            ],
            [
                "229014e6.b0e14c"
            ],
            [
                "fd1a001d.2fc35"
            ]
        ]
    },
    {
        "id": "39139188.be2256",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "WFc Icon 1",
        "order": 1,
        "width": 3,
        "height": 2,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: center;align-items: center;\">\n<i class=\"fa-4x wi {{msg.payload}}\"></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1020,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "c24820ec.48ca8",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "WFc Icon 2",
        "order": 2,
        "width": 3,
        "height": 2,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: center;align-items: center;\">\n<i class=\"fa-4x wi {{msg.payload}}\"></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1020,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "764a58c0.442438",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "WFc Icon 3",
        "order": 3,
        "width": 3,
        "height": 2,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: center;align-items: center;\">\n<i class=\"fa-4x wi {{msg.payload}}\"></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1020,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "6eab6954.c57d38",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "WFc Icon 4",
        "order": 4,
        "width": 3,
        "height": 2,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: center;align-items: center;\">\n<i class=\"fa-4x wi {{msg.payload}}\"></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1020,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "c756059d.18796",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "WFc Icon 5",
        "order": 5,
        "width": 3,
        "height": 2,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: center;align-items: center;\">\n<i class=\"fa-4x wi {{msg.payload}}\"></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1020,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "53046826.3645",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "WFc Icon 6",
        "order": 6,
        "width": 3,
        "height": 2,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: center;align-items: center;\">\n<i class=\"fa-4x wi {{msg.payload}}\"></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1020,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "229014e6.b0e14c",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "WFc Icon 7",
        "order": 7,
        "width": 3,
        "height": 2,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: center;align-items: center;\">\n<i class=\"fa-4x wi {{msg.payload}}\"></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1020,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "fd1a001d.2fc35",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "WFc Icon 8",
        "order": 8,
        "width": 3,
        "height": 2,
        "format": "<link rel=\"stylesheet\" href=\"/weather-icons/mycss/weather-icons.min.css\">\n<div style=\"display: flex;height: 100%;justify-content: center;align-items: center;\">\n<i class=\"fa-4x wi {{msg.payload}}\"></i>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1020,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "e58a247.3094b58",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "Prepare Forecast Data",
        "func": "var fcdata = {};\n\nfcdata.payload = {\n  forecast: {\n    dt00: {\n      dt_txt: msg.payload[0].dt_txt,\n      temp_min: msg.payload[0].main.temp_min,\n      temp_max: msg.payload[0].main.temp_max,\n      temp: msg.payload[0].main.temp,\n      desc: msg.payload[0].weather[0].description\n    },\n    dt01: {\n      dt_txt: msg.payload[1].dt_txt,\n      temp_min: msg.payload[1].main.temp_min,\n      temp_max: msg.payload[1].main.temp_max,\n      temp: msg.payload[1].main.temp,\n      desc: msg.payload[1].weather[0].description\n    },\n    dt02: {\n      dt_txt: msg.payload[2].dt_txt,\n      temp_min: msg.payload[2].main.temp_min,\n      temp_max: msg.payload[2].main.temp_max,\n      temp: msg.payload[2].main.temp,\n      desc: msg.payload[2].weather[0].description\n    },\n    dt03: {\n      dt_txt: msg.payload[3].dt_txt,\n      temp_min: msg.payload[3].main.temp_min,\n      temp_max: msg.payload[3].main.temp_max,\n      temp: msg.payload[3].main.temp,\n      desc: msg.payload[3].weather[0].description\n    },\n    dt04: {\n      dt_txt: msg.payload[4].dt_txt,\n      temp_min: msg.payload[4].main.temp_min,\n      temp_max: msg.payload[4].main.temp_max,\n      temp: msg.payload[4].main.temp,\n      desc: msg.payload[4].weather[0].description\n    },\n    dt05: {\n      dt_txt: msg.payload[5].dt_txt,\n      temp_min: msg.payload[5].main.temp_min,\n      temp_max: msg.payload[5].main.temp_max,\n      temp: msg.payload[5].main.temp,\n      desc: msg.payload[5].weather[0].description\n    },\n    dt06: {\n      dt_txt: msg.payload[6].dt_txt,\n      temp_min: msg.payload[6].main.temp_min,\n      temp_max: msg.payload[6].main.temp_max,\n      temp: msg.payload[6].main.temp,\n      desc: msg.payload[6].weather[0].description\n    },\n    dt07: {\n      dt_txt: msg.payload[7].dt_txt,\n      temp_min: msg.payload[7].main.temp_min,\n      temp_max: msg.payload[7].main.temp_max,\n      temp: msg.payload[7].main.temp,\n      desc: msg.payload[7].weather[0].description\n    }\n  }\n}\n\n\n\nreturn fcdata;",
        "outputs": 1,
        "noerr": 0,
        "x": 730,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "770400c.08ade8",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "Forecast",
        "order": 12,
        "width": 24,
        "height": 1,
        "format": "<div layout=\"row\" layout-align=\"space-around start\" ng-repeat=\"data in msg.payload.row\">\n  <span flex style=\"color: white\">{{data.cell01}}</span>\n  <span flex style=\"color: white\">{{data.cell02}}</span>\n  <span flex style=\"color: white\">{{data.cell03}}</span>\n  <span flex style=\"color: white\">{{data.cell04}}</span>\n  <span flex style=\"color: white\">{{data.cell05}}</span>\n  <span flex style=\"color: white\">{{data.cell06}}</span>\n  <span flex style=\"color: white\">{{data.cell07}}</span>\n  <span flex style=\"color: white\">{{data.cell08}}</span>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1010,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "c5b71946.ca4de",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "Prepare forecast for UI widget",
        "func": "var fcdata = {};\n\n// prepare forecast data for CSS based ui widget\n\nfcdata.payload = {\n  row: {\n  \tdata01: {\n  \t\tcell01: msg.payload[0].dt_txt.substring(11, 16),\n  \t\tcell02: msg.payload[1].dt_txt.substring(11, 16),\n  \t\tcell03: msg.payload[2].dt_txt.substring(11, 16),\n  \t\tcell04: msg.payload[3].dt_txt.substring(11, 16),\n  \t\tcell05: msg.payload[4].dt_txt.substring(11, 16),\n  \t\tcell06: msg.payload[5].dt_txt.substring(11, 16),\n  \t\tcell07: msg.payload[6].dt_txt.substring(11, 16),\n  \t\tcell08: msg.payload[7].dt_txt.substring(11, 16)\n  \t},\n  \tdata02: {\n  \t\tcell01: msg.payload[0].main.temp+\" °C\",\n  \t\tcell02: msg.payload[1].main.temp+\" °C\",\n  \t\tcell03: msg.payload[2].main.temp+\" °C\",\n  \t\tcell04: msg.payload[3].main.temp+\" °C\",\n  \t\tcell05: msg.payload[4].main.temp+\" °C\",\n  \t\tcell06: msg.payload[5].main.temp+\" °C\",\n  \t\tcell07: msg.payload[6].main.temp+\" °C\",\n  \t\tcell08: msg.payload[7].main.temp+\" °C\"\n  \t}\n  }\n}\n\nreturn fcdata;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1080,
        "wires": [
            [
                "770400c.08ade8"
            ]
        ]
    },
    {
        "id": "5cd0cb4.09ac834",
        "type": "debug",
        "z": "5c561430.86ca8c",
        "name": "Current Weather",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 360,
        "wires": []
    },
    {
        "id": "43bc5e2b.6024a",
        "type": "ui_text",
        "z": "5c561430.86ca8c",
        "group": "b12941f.1cd05c",
        "order": 1,
        "width": 10,
        "height": 1,
        "name": "description",
        "label": "",
        "format": "{{msg.payload.description}}",
        "layout": "row-center",
        "x": 1150,
        "y": 60,
        "wires": []
    },
    {
        "id": "e5cfc523.804698",
        "type": "debug",
        "z": "5c561430.86ca8c",
        "name": "wind",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 300,
        "wires": []
    },
    {
        "id": "ff5f6ba2.e091d8",
        "type": "debug",
        "z": "5c561430.86ca8c",
        "name": "forecast 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 620,
        "wires": []
    },
    {
        "id": "dcd953b8.01b91",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "Prepare Dashboard Data",
        "func": "\nvar degToCard = function(deg){\nif (deg>11.25 && deg<=33.75){\nreturn \"NNE\";\n  }else if (deg>33.75 && deg<56.25){\nreturn \"NE\";\n  }else if (deg>56.25 && deg<78.75){\nreturn \"ENE\";\n  }else if (deg>78.75 && deg<101.25){\nreturn \"East\";\n  }else if (deg>101.25 && deg<123.75){\nreturn \"ESE\";\n  }else if (deg>123.75 && deg<146.25){\nreturn \"SE\";\n  }else if (deg>146.25 && deg<168.75){\nreturn \"SSE\";\n  }else if (deg>168.75 && deg<191.25){\nreturn \"South\";\n  }else if (deg>191.25 && deg<213.75){\nreturn \"SSW\";\n  }else if (deg>213.75 && deg<236.25){\nreturn \"SW\";\n  }else if (deg>236.25 && deg<258.75){\nreturn \"WSW\";\n  }else if (deg>258.75 && deg<281.25){\nreturn \"West\";\n  }else if (deg>281.25 && deg<303.75){\nreturn \"WNW\";\n  }else if (deg>303.75 && deg<326.25){\nreturn \"NW\";\n  }else if (deg>326.25 && deg<348.75){\nreturn \"NNW\";\n  }else{\nreturn \"North\"; \n  }\n}\nmsg.payload={\n \n    Str_Direction : degToCard(msg.payload.winddirection),\n    Wind_Direction : msg.payload.winddirection\n\n};\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 440,
        "wires": [
            [
                "48bf629a.d1fb4c",
                "674e95bf.9d290c"
            ]
        ]
    },
    {
        "id": "48bf629a.d1fb4c",
        "type": "debug",
        "z": "5c561430.86ca8c",
        "name": "11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 520,
        "wires": []
    },
    {
        "id": "2cc0112a.76bc8e",
        "type": "ui_table",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "table1",
        "order": 14,
        "width": 3,
        "height": 6,
        "columns": [
            {
                "field": "des",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "val",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 430,
        "y": 740,
        "wires": []
    },
    {
        "id": "28f588cc.95b8d8",
        "type": "ui_table",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "table 2",
        "order": 15,
        "width": 3,
        "height": 6,
        "columns": [
            {
                "field": "des",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "val",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 430,
        "y": 800,
        "wires": []
    },
    {
        "id": "fd283f2c.a224c",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "\n\nvar data =[\n\n        {\n            \"des\": \"App.Temp\",\n            \"val\": msg.payload[0].main.feels_like,\n        },\n        {\n            \"des\": \"Temp_min\",\n            \"val\": msg.payload[0].main.temp_min+\" °C\",\n        },\n        {\n            \"des\": \"Temp_max\",\n            \"val\": msg.payload[0].main.temp_max+\" °C\",\n        },\n        {\n            \"des\": \"At. Pressure\",\n            \"val\": msg.payload[0].main.pressure+\" mbar\",\n        },\n        {\n            \"des\": \"Humidity\",\n            \"val\": msg.payload[0].main.humidity+\" %\",\n        },\n        {\n            \"des\": \"Weather\",\n            \"val\": msg.payload[0].weather[0].description,\n        },\n        {\n            \"des\": \"Wind speed\",\n            \"val\": msg.payload[0].wind.speed+\" m/s\",\n        },\n        {\n            \"des\": \"Wind Direction\",\n            \"val\": msg.payload[0].wind.deg+\" °\",\n        },\n        {\n            \"des\": \"gust\",\n            \"val\": msg.payload[0].wind.gust,\n        }\n        \n        \n        \n]\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 740,
        "wires": [
            [
                "2cc0112a.76bc8e"
            ]
        ]
    },
    {
        "id": "29dfa9e9.c18956",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "\n\nvar data =[\n\n        {\n            \"des\": \"App.Temp\",\n            \"val\": msg.payload[1].main.feels_like,\n        },\n        {\n            \"des\": \"Temp_min\",\n            \"val\": msg.payload[1].main.temp_min+\" °C\",\n        },\n        {\n            \"des\": \"Temp_max\",\n            \"val\": msg.payload[1].main.temp_max+\" °C\",\n        },\n        {\n            \"des\": \"At. Pressure\",\n            \"val\": msg.payload[1].main.pressure+\" mbar\",\n        },\n        {\n            \"des\": \"Humidity\",\n            \"val\": msg.payload[1].main.humidity+\" %\",\n        },\n        {\n            \"des\": \"Weather\",\n            \"val\": msg.payload[1].weather[0].description,\n        },\n        {\n            \"des\": \"Wind speed\",\n            \"val\": msg.payload[1].wind.speed+\" m/s\",\n        },\n        {\n            \"des\": \"Wind Direction\",\n            \"val\": msg.payload[1].wind.deg+\" °\",\n        },\n        {\n            \"des\": \"gust\",\n            \"val\": msg.payload[1].wind.gust,\n        }\n        \n        \n        \n]\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 800,
        "wires": [
            [
                "28f588cc.95b8d8"
            ]
        ]
    },
    {
        "id": "6fd251f4.03ca1",
        "type": "ui_table",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "table 3",
        "order": 16,
        "width": 3,
        "height": 6,
        "columns": [
            {
                "field": "des",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "val",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 430,
        "y": 860,
        "wires": []
    },
    {
        "id": "aed96cdd.4045b",
        "type": "ui_table",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "table 4",
        "order": 17,
        "width": 3,
        "height": 6,
        "columns": [
            {
                "field": "des",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "val",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 430,
        "y": 920,
        "wires": []
    },
    {
        "id": "2fb9d1de.355ede",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "\n\nvar data =[\n\n        {\n            \"des\": \"App.Temp\",\n            \"val\": msg.payload[2].main.feels_like,\n        },\n        {\n            \"des\": \"Temp_min\",\n            \"val\": msg.payload[2].main.temp_min+\" °C\",\n        },\n        {\n            \"des\": \"Temp_max\",\n            \"val\": msg.payload[2].main.temp_max+\" °C\",\n        },\n        {\n            \"des\": \"At. Pressure\",\n            \"val\": msg.payload[2].main.pressure+\" mbar\",\n        },\n        {\n            \"des\": \"Humidity\",\n            \"val\": msg.payload[2].main.humidity+\" %\",\n        },\n        {\n            \"des\": \"Weather\",\n            \"val\": msg.payload[2].weather[0].description,\n        },\n        {\n            \"des\": \"Wind speed\",\n            \"val\": msg.payload[2].wind.speed+\" m/s\",\n        },\n        {\n            \"des\": \"Wind Direction\",\n            \"val\": msg.payload[2].wind.deg+\" °\",\n        },\n        {\n            \"des\": \"gust\",\n            \"val\": msg.payload[2].wind.gust,\n        }\n        \n        \n        \n]\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 860,
        "wires": [
            [
                "6fd251f4.03ca1"
            ]
        ]
    },
    {
        "id": "e578eac8.4ab5f8",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "\n\nvar data =[\n\n        {\n            \"des\": \"App.Temp\",\n            \"val\": msg.payload[3].main.feels_like,\n        },\n        {\n            \"des\": \"Temp_min\",\n            \"val\": msg.payload[3].main.temp_min+\" °C\",\n        },\n        {\n            \"des\": \"Temp_max\",\n            \"val\": msg.payload[3].main.temp_max+\" °C\",\n        },\n        {\n            \"des\": \"At. Pressure\",\n            \"val\": msg.payload[3].main.pressure+\" mbar\",\n        },\n        {\n            \"des\": \"Humidity\",\n            \"val\": msg.payload[3].main.humidity+\" %\",\n        },\n        {\n            \"des\": \"Weather\",\n            \"val\": msg.payload[3].weather[0].description,\n        },\n        {\n            \"des\": \"Wind speed\",\n            \"val\": msg.payload[3].wind.speed+\" m/s\",\n        },\n        {\n            \"des\": \"Wind Direction\",\n            \"val\": msg.payload[3].wind.deg+\" °\",\n        },\n        {\n            \"des\": \"gust\",\n            \"val\": msg.payload[3].wind.gust,\n        }\n        \n        \n        \n]\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 920,
        "wires": [
            [
                "aed96cdd.4045b"
            ]
        ]
    },
    {
        "id": "945d8a66.179448",
        "type": "ui_table",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "table 5",
        "order": 18,
        "width": 3,
        "height": 6,
        "columns": [
            {
                "field": "des",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "val",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 430,
        "y": 980,
        "wires": []
    },
    {
        "id": "6070d770.5b8af8",
        "type": "ui_table",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "table 6",
        "order": 19,
        "width": 3,
        "height": 6,
        "columns": [
            {
                "field": "des",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "val",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 430,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1308b9cf.3834d6",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "\n\nvar data =[\n\n        {\n            \"des\": \"App.Temp\",\n            \"val\": msg.payload[4].main.feels_like,\n        },\n        {\n            \"des\": \"Temp_min\",\n            \"val\": msg.payload[4].main.temp_min+\" °C\",\n        },\n        {\n            \"des\": \"Temp_max\",\n            \"val\": msg.payload[4].main.temp_max+\" °C\",\n        },\n        {\n            \"des\": \"At. Pressure\",\n            \"val\": msg.payload[4].main.pressure+\" mbar\",\n        },\n        {\n            \"des\": \"Humidity\",\n            \"val\": msg.payload[4].main.humidity+\" %\",\n        },\n        {\n            \"des\": \"Weather\",\n            \"val\": msg.payload[4].weather[0].description,\n        },\n        {\n            \"des\": \"Wind speed\",\n            \"val\": msg.payload[4].wind.speed+\" m/s\",\n        },\n        {\n            \"des\": \"Wind Direction\",\n            \"val\": msg.payload[4].wind.deg+\" °\",\n        },\n        {\n            \"des\": \"gust\",\n            \"val\": msg.payload[4].wind.gust,\n        }\n        \n        \n        \n]\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 980,
        "wires": [
            [
                "945d8a66.179448"
            ]
        ]
    },
    {
        "id": "d0ae2547.dc3688",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "\n\nvar data =[\n\n        {\n            \"des\": \"App.Temp\",\n            \"val\": msg.payload[5].main.feels_like,\n        },\n        {\n            \"des\": \"Temp_min\",\n            \"val\": msg.payload[5].main.temp_min+\" °C\",\n        },\n        {\n            \"des\": \"Temp_max\",\n            \"val\": msg.payload[5].main.temp_max+\" °C\",\n        },\n        {\n            \"des\": \"At. Pressure\",\n            \"val\": msg.payload[5].main.pressure+\" mbar\",\n        },\n        {\n            \"des\": \"Humidity\",\n            \"val\": msg.payload[5].main.humidity+\" %\",\n        },\n        {\n            \"des\": \"Weather\",\n            \"val\": msg.payload[5].weather[0].description,\n        },\n        {\n            \"des\": \"Wind speed\",\n            \"val\": msg.payload[5].wind.speed+\" m/s\",\n        },\n        {\n            \"des\": \"Wind Direction\",\n            \"val\": msg.payload[5].wind.deg+\" °\",\n        },\n        {\n            \"des\": \"gust\",\n            \"val\": msg.payload[5].wind.gust,\n        }\n        \n        \n        \n]\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1040,
        "wires": [
            [
                "6070d770.5b8af8"
            ]
        ]
    },
    {
        "id": "bce90efe.e2fe1",
        "type": "ui_table",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "table 7",
        "order": 20,
        "width": 3,
        "height": 6,
        "columns": [
            {
                "field": "des",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "val",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 430,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ed210c6.1b48cf",
        "type": "ui_table",
        "z": "5c561430.86ca8c",
        "group": "5e0d6747.b726b",
        "name": "table 8",
        "order": 21,
        "width": 3,
        "height": 6,
        "columns": [
            {
                "field": "des",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "val",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 430,
        "y": 1160,
        "wires": []
    },
    {
        "id": "e8a5b2b5.55457",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "\n\nvar data =[\n\n        {\n            \"des\": \"App.Temp\",\n            \"val\": msg.payload[6].main.feels_like,\n        },\n        {\n            \"des\": \"Temp_min\",\n            \"val\": msg.payload[6].main.temp_min+\" °C\",\n        },\n        {\n            \"des\": \"Temp_max\",\n            \"val\": msg.payload[6].main.temp_max+\" °C\",\n        },\n        {\n            \"des\": \"At. Pressure\",\n            \"val\": msg.payload[6].main.pressure+\" mbar\",\n        },\n        {\n            \"des\": \"Humidity\",\n            \"val\": msg.payload[6].main.humidity+\" %\",\n        },\n        {\n            \"des\": \"Weather\",\n            \"val\": msg.payload[6].weather[0].description,\n        },\n        {\n            \"des\": \"Wind speed\",\n            \"val\": msg.payload[6].wind.speed+\" m/s\",\n        },\n        {\n            \"des\": \"Wind Direction\",\n            \"val\": msg.payload[6].wind.deg+\" °\",\n        },\n        {\n            \"des\": \"gust\",\n            \"val\": msg.payload[6].wind.gust,\n        }\n        \n        \n        \n]\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 1100,
        "wires": [
            [
                "bce90efe.e2fe1"
            ]
        ]
    },
    {
        "id": "3f12c3b3.8b12bc",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "\n\nvar data =[\n\n        {\n            \"des\": \"App.Temp\",\n            \"val\": msg.payload[7].main.feels_like,\n        },\n        {\n            \"des\": \"Temp_min\",\n            \"val\": msg.payload[7].main.temp_min+\" °C\",\n        },\n        {\n            \"des\": \"Temp_max\",\n            \"val\": msg.payload[7].main.temp_max+\" °C\",\n        },\n        {\n            \"des\": \"At. Pressure\",\n            \"val\": msg.payload[7].main.pressure+\" mbar\",\n        },\n        {\n            \"des\": \"Humidity\",\n            \"val\": msg.payload[7].main.humidity+\" %\",\n        },\n        {\n            \"des\": \"Weather\",\n            \"val\": msg.payload[7].weather[0].description,\n        },\n        {\n            \"des\": \"Wind speed\",\n            \"val\": msg.payload[7].wind.speed+\" m/s\",\n        },\n        {\n            \"des\": \"Wind Direction\",\n            \"val\": msg.payload[7].wind.deg+\" °\",\n        },\n        {\n            \"des\": \"gust\",\n            \"val\": msg.payload[7].wind.gust,\n        }\n        \n        \n        \n]\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1160,
        "wires": [
            [
                "ed210c6.1b48cf"
            ]
        ]
    },
    {
        "id": "674e95bf.9d290c",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "msg.value=msg.payload.Wind_Direction;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 480,
        "wires": [
            [
                "76636aa4.2a53b4"
            ]
        ]
    },
    {
        "id": "76636aa4.2a53b4",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "8da50f69.44fe38",
        "name": "Cog",
        "order": 7,
        "width": 4,
        "height": 4,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar cog;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.value) != \"undefined\")cog.setValueAnimated(msg.value);\n          \n        });\n    })(scope);\n\n    \n\n    cog = new steelseries.Compass('cog', {\n            gaugeType: steelseries.GaugeType.TYPE4,\n            \n            size: 190,\n           \n            //titleString: \"Charge\",\n            //unitString: \"AMPS\",\n           // threshold: 11.9,\n           // minValue: 0,\n           // maxValue:  10,\n           // thresholdRising: false,\n            //lcdVisible: true,\n           \n        });\n//cog.steelseries.BackgroundColor.(steelseries.BackgroundColor.WHITE); \n   cog.setFrameDesign(steelseries.FrameDesign.BRASS);\n   cog.setValueAnimated(0);                   \n   \n   //cog.setPointerType(steelseries.PointerType.TYPE9);\n    \n\n\n</script>\n\n<canvas id=\"cog\" width=\"190\" height=\"190\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c150667f.005548",
        "type": "function",
        "z": "5c561430.86ca8c",
        "name": "",
        "func": "msg.value=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 520,
        "wires": [
            [
                "155fa2e7.2c639d"
            ]
        ]
    },
    {
        "id": "155fa2e7.2c639d",
        "type": "ui_template",
        "z": "5c561430.86ca8c",
        "group": "8da50f69.44fe38",
        "name": "speed",
        "order": 6,
        "width": 4,
        "height": 4,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar speed;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.value) != \"undefined\")speed.setValueAnimated(msg.value);\n          \n        });\n    })(scope);\n\n    \n\n    speed = new steelseries.Radial('speed', {\n            gaugeType: steelseries.GaugeType.TYPE2,\n            size: 190,\n           \n            titleString: \"SPEED\",\n            unitString: \"m/s\",\n            //threshold: 11.9,\n            minValue: 0,\n            maxValue:  20,\n            //thresholdRising: false,\n            //lcdVisible: true,\n           \n        });\n      \n    speed.setValueAnimated(0);                   \n    speed.setFrameDesign(steelseries.FrameDesign.BRASS);\n    speed.setPointerType(steelseries.PointerType.TYPE9);\n    \n\n\n</script>\n\n<canvas id=\"speed\" width=\"190\" height=\"190\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1330,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "46fae1e4.65f7f",
        "type": "ui_template",
        "z": "56bde742.2302f8",
        "group": "8dfd123a.747be",
        "name": "Cog",
        "order": 2,
        "width": 4,
        "height": 4,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar cog;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.value) != \"undefined\")cog.setValueAnimated(msg.value);\n          \n        });\n    })(scope);\n\n    \n\n    cog = new steelseries.Compass('cog', {\n            gaugeType: steelseries.GaugeType.TYPE4,\n            \n            size: 190,\n           \n            //titleString: \"Charge\",\n            //unitString: \"AMPS\",\n           // threshold: 11.9,\n           // minValue: 0,\n           // maxValue:  10,\n           // thresholdRising: false,\n            //lcdVisible: true,\n           \n        });\n//cog.steelseries.BackgroundColor.(steelseries.BackgroundColor.WHITE); \n   cog.setFrameDesign(steelseries.FrameDesign.BRASS);\n   cog.setValueAnimated(0);                   \n   \n   //cog.setPointerType(steelseries.PointerType.TYPE9);\n    \n\n\n</script>\n\n<canvas id=\"cog\" width=\"190\" height=\"190\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1230,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "b8e9c397.2416d",
        "type": "function",
        "z": "56bde742.2302f8",
        "name": "",
        "func": "msg.value=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1080,
        "y": 740,
        "wires": [
            [
                "46fae1e4.65f7f"
            ]
        ]
    },
    {
        "id": "b7460759.95bd48",
        "type": "ui_template",
        "z": "56bde742.2302f8",
        "group": "361cf2a6.c1d6fe",
        "name": "house",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar house;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.value) != \"undefined\")house.setValueAnimated(msg.value);\n          \n        });\n    })(scope);\n\n    \n\n    house = new steelseries.Radial('house', {\n            gaugeType: steelseries.GaugeType.TYPE2,\n            size: 190,\n           \n            titleString: \"HOUSE\",\n            unitString: \"VOLTS\",\n            threshold: 11.9,\n            minValue: 0,\n            maxValue:  15,\n            thresholdRising: false,\n            //lcdVisible: true,\n           \n        });\n      \n    house.setValueAnimated(0);                   \n    house.setFrameDesign(steelseries.FrameDesign.BRASS);\n    house.setPointerType(steelseries.PointerType.TYPE9);\n    \n\n\n</script>\n\n<canvas id=\"house\" width=\"190\" height=\"190\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1231.000072479248,
        "y": 872.000020980835,
        "wires": [
            []
        ]
    },
    {
        "id": "96ef2b05.a9eea8",
        "type": "function",
        "z": "56bde742.2302f8",
        "name": "",
        "func": "msg.value=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 972.0000858306885,
        "y": 872.000020980835,
        "wires": [
            [
                "9cf4a5b9.372038"
            ]
        ]
    },
    {
        "id": "c4f37b21.d0dc18",
        "type": "function",
        "z": "56bde742.2302f8",
        "name": "",
        "func": "msg.value=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 1000,
        "wires": [
            [
                "78c649dc.55ba08"
            ]
        ]
    },
    {
        "id": "8c60423c.8d197",
        "type": "ui_template",
        "z": "56bde742.2302f8",
        "group": "16e373f4.645dac",
        "name": "Compass",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar compass;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.value) != \"undefined\")compass.setValueAnimated(msg.value);\n          \n        });\n    })(scope);\n\n    \n\n    compass = new steelseries.Compass('compass', {\n            gaugeType: steelseries.GaugeType.TYPE4,\n            \n            size: 190,\n            \n            rotateFace:  true,\n            //\n            //titleString: \"Charge\",\n            //unitString: \"AMPS\",\n           // threshold: 11.9,\n           // minValue: 0,\n           // maxValue:  10,\n           // thresholdRising: false,\n            //lcdVisible: true,\n           \n        });\n//cog.steelseries.BackgroundColor.(steelseries.BackgroundColor.WHITE); \n   compass.setFrameDesign(steelseries.FrameDesign.BRASS);\n   compass.setValueAnimated(0);                   \n   \n   //cog.setPointerType(steelseries.PointerType.TYPE9);\n    \n\n\n</script>\n\n<canvas id=\"compass\" width=\"190\" height=\"190\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1240.000316619873,
        "y": 790.0000534057617,
        "wires": [
            []
        ]
    },
    {
        "id": "b44f469e.d38318",
        "type": "ui_template",
        "z": "56bde742.2302f8",
        "group": "8dfd123a.747be",
        "name": "speed",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar speed;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.value) != \"undefined\")speed.setValueAnimated(msg.value);\n          \n        });\n    })(scope);\n\n    \n\n    speed = new steelseries.Radial('speed', {\n            gaugeType: steelseries.GaugeType.TYPE2,\n            size: 190,\n           \n            titleString: \"SPEED\",\n            unitString: \"KNOTS\",\n            //threshold: 11.9,\n            minValue: 0,\n            maxValue:  10,\n            //thresholdRising: false,\n            //lcdVisible: true,\n           \n        });\n      \n    speed.setValueAnimated(0);                   \n    speed.setFrameDesign(steelseries.FrameDesign.BRASS);\n    speed.setPointerType(steelseries.PointerType.TYPE9);\n    \n\n\n</script>\n\n<canvas id=\"speed\" width=\"190\" height=\"190\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1231.000072479248,
        "y": 700.0000057220459,
        "wires": [
            []
        ]
    },
    {
        "id": "e95d43a2.fb593",
        "type": "function",
        "z": "56bde742.2302f8",
        "name": "",
        "func": "msg.value=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090.0000648498535,
        "y": 700.0000066757202,
        "wires": [
            [
                "b44f469e.d38318"
            ]
        ]
    },
    {
        "id": "41d5d23a.4e1d8c",
        "type": "ui_template",
        "z": "56bde742.2302f8",
        "group": "16e373f4.645dac",
        "name": "Horizon",
        "order": 2,
        "width": 4,
        "height": 4,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar horizon;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n            if (typeof(msg.value) != \"undefined\")horizon.setValueAnimated(msg.value);\n           //if (typeof(msg.hor) != \"undefined\")horizon.setHorAnimated(msg.hor);\n           //if (typeof(msg.value) != \"undefined\")horizon.setValueAnimated(value);\n                                                                        // (msg.value);\n           //if (typeof(msg.roll) != \"undefined\")horizon.setRollAnimated(roll);\n          \n          \n        });\n    })(scope);\n\n    \n\n    horizon = new steelseries.Level('horizon', {\n            gaugeType: steelseries.GaugeType.TYPE4,\n            size: 190,\n           //textOrientationFixed: true,\n           //decimalsVisible:true,\n           //pointerColor:  ORANGE.\n           //foregroundType:\n           //backgroundVisible:false,\n           //foregroundVisible:false,\n           \n        });\n    horizon.setFrameDesign(steelseries.FrameDesign.BRASS);  \n    horizon.setValueAnimated(0);                   \n    \n    //level.setPointerType(steelseries.PointerType.TYPE9);\n    \n\n\n</script>\n\n<canvas id=\"horizon\" width=\"190\" height=\"190\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1236.0002365112305,
        "y": 832.000057220459,
        "wires": [
            []
        ]
    },
    {
        "id": "c5116edb.6e44b",
        "type": "ui_template",
        "z": "56bde742.2302f8",
        "group": "1f5ca70a.9612d9",
        "name": "wind",
        "order": 1,
        "width": 4,
        "height": 4,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar wind;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.value) != \"undefined\")wind.setValueAnimated(msg.value);\n           if (typeof(msg.ave) != 'undefined')wind.setValueAnimatedAverage(msg.ave);\n        });\n    })(scope);\n\n    \n\n    wind = new steelseries.WindDirection('wind', {\n            gaugeType: steelseries.GaugeType.TYPE4,\n            size: 190,\n           lcdVisible: true,\n           titleString: \"Wind Direction\",\n           degreeScaleHalf: true,\n           pointSymbolsVisible: false,\n           lcdTitleStrings: ['DIRECTION', 'Speed'],\n           windspeed: true,\n        });\n      \n                      \n    wind.setFrameDesign(steelseries.FrameDesign.BRASS);\n    wind.setPointerTypeAverage(steelseries.PointerType.TYPE17);\n    wind.setPointerType(steelseries.PointerType.TYPE1);\n\n\n</script>\n\n<canvas id=\"wind\" width=\"190\" height=\"190\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1231.0003967285156,
        "y": 950.0000820159912,
        "wires": [
            []
        ]
    },
    {
        "id": "50302daa.997604",
        "type": "function",
        "z": "56bde742.2302f8",
        "name": "heel",
        "func": "msg.value=msg.payload;\n\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "x": 1066.0000858306885,
        "y": 832.000020980835,
        "wires": [
            [
                "41d5d23a.4e1d8c"
            ]
        ]
    },
    {
        "id": "78c649dc.55ba08",
        "type": "ui_template",
        "z": "56bde742.2302f8",
        "group": "1f5ca70a.9612d9",
        "name": "Tempwater",
        "order": 2,
        "width": 3,
        "height": 6,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar tempwater;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.value) != \"undefined\") tempwater.setValueAnimated(msg.value);\n           //if (typeof(msg.threshold) != \"undefined\") radial4.setThreshold(msg.threshold);\n          // if (typeof(msg.odo) != \"undefined\")radial4.setOdoValue(msg.odo);  \n           //if (typeof(msg.userLed) != \"undefined\") radial4.setUserLedOnOff(msg.userLed);  \n          // if (typeof(msg.trend) != \"undefined\")\n            {\n               // if (msg.trend==1)     radial4.setTrend(steelseries.TrendState.UP);\n                //if (msg.trend==0)     radial4.setTrend(steelseries.TrendState.STEADY);\n               // if (msg.trend==-1)    radial4.setTrend(steelseries.TrendState.DOWN);\n               // if (msg.trend==-2)    radial4.setTrend(steelseries.TrendState.OFF);\n            }\n        });\n    })(scope);\n\n    var sections = [steelseries.Section(0, 25, 'rgba(0, 0, 220, 0.3)'),\n                        steelseries.Section(25, 50, 'rgba(0, 220, 0, 0.3)'),\n                        steelseries.Section(50, 75, 'rgba(220, 220, 0, 0.3)') ],\n\n            // Define one area\n    areas = [steelseries.Section(75, 100, 'rgba(220, 0, 0, 0.3)')],\n\n    tempwater = new steelseries.Linear('tempwater', {\n            gaugeType: steelseries.GaugeType.TYPE2,\n            width: 140,\n            height: 300,\n            //size: 292,\n            section: sections,\n            area: areas,\n            titleString: \"Water\",\n            unitString: \"Degrees F\",\n            threshold: 80,\n            lcdVisible: true,\n           \n            //thresholdRising: false,\n           // userLedVisible: true,\n           // useOdometer: true,\n          //  lcdVisible: true,\n           // trendVisible: true\n        });\n                        \n    tempwater.setFrameDesign(steelseries.FrameDesign.BRASS);\n    tempwater.setValueAnimated(0);\n    tempwater.setPointerType(steelseries.PointerType.TYPE9);\n   // radial4.setThreshold(50);\n    //radial4.blinkUserLed(0);\n   // radial4.setOdoValue(0);\n\n\n</script>\n\n<canvas id=\"tempwater\" width=\"140\" height=\"300\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1248.000316619873,
        "y": 991.0001049041748,
        "wires": [
            []
        ]
    },
    {
        "id": "c1f36fd2.484c1",
        "type": "ui_template",
        "z": "56bde742.2302f8",
        "group": "361cf2a6.c1d6fe",
        "name": "Tempin",
        "order": 2,
        "width": 3,
        "height": 6,
        "format": "<script src=\"/myjs/tween-min.js\"></script>\n<script src=\"/myjs/steelseries-min.js\"></script>\n<script>\nvar tempout;\n    (function(scope){ \n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.value) != \"undefined\") tempout.setValueAnimated(msg.value);\n           //if (typeof(msg.threshold) != \"undefined\") radial4.setThreshold(msg.threshold);\n          // if (typeof(msg.odo) != \"undefined\")radial4.setOdoValue(msg.odo);  \n           //if (typeof(msg.userLed) != \"undefined\") radial4.setUserLedOnOff(msg.userLed);  \n          // if (typeof(msg.trend) != \"undefined\")\n            {\n               // if (msg.trend==1)     radial4.setTrend(steelseries.TrendState.UP);\n                //if (msg.trend==0)     radial4.setTrend(steelseries.TrendState.STEADY);\n               // if (msg.trend==-1)    radial4.setTrend(steelseries.TrendState.DOWN);\n               // if (msg.trend==-2)    radial4.setTrend(steelseries.TrendState.OFF);\n            }\n        });\n    })(scope);\n\n    var sections = [steelseries.Section(0, 25, 'rgba(0, 0, 220, 0.3)'),\n                        steelseries.Section(25, 50, 'rgba(0, 220, 0, 0.3)'),\n                        steelseries.Section(50, 75, 'rgba(220, 220, 0, 0.3)') ],\n\n            // Define one area\n    areas = [steelseries.Section(75, 100, 'rgba(220, 0, 0, 0.3)')],\n\n    tempout = new steelseries.Linear('tempout', {\n            gaugeType: steelseries.GaugeType.TYPE2,\n            width: 140,\n            height: 300,\n            //size: 292,\n            section: sections,\n            area: areas,\n            titleString: \"Inside\",\n            unitString: \"Degrees F\",\n            threshold: 80,\n            lcdVisible: true,\n           \n            //thresholdRising: false,\n           // userLedVisible: true,\n           // useOdometer: true,\n          //  lcdVisible: true,\n           // trendVisible: true\n        });\n                        \n    tempout.setFrameDesign(steelseries.FrameDesign.BRASS);\n    tempout.setValueAnimated(0);\n    tempout.setPointerType(steelseries.PointerType.TYPE9);\n   // radial4.setThreshold(50);\n    //radial4.blinkUserLed(0);\n   // radial4.setOdoValue(0);\n\n\n</script>\n\n<canvas id=\"tempout\" width=\"140\" height=\"300\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 1240.0002326965332,
        "y": 914.0000629425049,
        "wires": [
            []
        ]
    },
    {
        "id": "df5cc7ef.2f5eb8",
        "type": "function",
        "z": "56bde742.2302f8",
        "name": "",
        "func": "msg.value=msg.payload; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1033.0001411437988,
        "y": 914.0000591278076,
        "wires": [
            [
                "c1f36fd2.484c1"
            ]
        ]
    },
    {
        "id": "daa0a11b.551b1",
        "type": "function",
        "z": "56bde742.2302f8",
        "name": "",
        "func": "msg.value=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1080,
        "y": 780,
        "wires": [
            [
                "8c60423c.8d197"
            ]
        ]
    },
    {
        "id": "bc17b5eb.061618",
        "type": "function",
        "z": "56bde742.2302f8",
        "name": "",
        "func": "msg.value=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060.0000858306885,
        "y": 958.000020980835,
        "wires": [
            [
                "c5116edb.6e44b"
            ]
        ]
    },
    {
        "id": "9cf4a5b9.372038",
        "type": "delay",
        "z": "56bde742.2302f8",
        "name": "del",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1095.0000858306885,
        "y": 872.000020980835,
        "wires": [
            [
                "b7460759.95bd48"
            ]
        ]
    },
    {
        "id": "980543c1.9421b",
        "type": "ui_webcam",
        "z": "56bde742.2302f8",
        "name": "",
        "group": "d9fbfecb.148d9",
        "order": 1,
        "width": 20,
        "height": 10,
        "countdown": false,
        "autoStart": false,
        "hideCaptureButton": true,
        "showImage": "2",
        "mirror": true,
        "format": "jpeg",
        "x": 440,
        "y": 800,
        "wires": [
            [
                "428cca01.fd1b04"
            ]
        ]
    },
    {
        "id": "428cca01.fd1b04",
        "type": "debug",
        "z": "56bde742.2302f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 800,
        "wires": []
    },
    {
        "id": "949f090a.835d08",
        "type": "inject",
        "z": "2d4154ab.c87cdc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1460,
        "wires": [
            [
                "3372e45d.328d0c"
            ]
        ]
    },
    {
        "id": "3372e45d.328d0c",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Fields and Tags",
        "func": "msg.payload = [{\n    intValue: '10i',\n    numValue: 12,\n    randomValue: Math.random()*10,\n    strValue: \"message2\"\n},\n{\n    tag1:\"sensor1\",\n    tag2:\"device2\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "bc1b061c.18b8a8",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "Fields and Tags",
        "func": "msg.payload = [{\n    intValue: '10i',\n    numValue: 12,\n    randomValue: Math.random()*10,\n    strValue: \"message2\"\n},\n{\n    tag1:\"sensor1\",\n    tag2:\"device2\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "3627061f.e68eda",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-13",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Latitude\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1260,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "384335e5.cf033a",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_14",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Longitude\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1300,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "145e9a35.60ff46",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB_15",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Altitude\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1340,
        "wires": [
            [
                "d45877c9.cc06d8"
            ]
        ]
    },
    {
        "id": "b356bc43.93a4",
        "type": "debug",
        "z": "2d4154ab.c87cdc",
        "name": "influx test 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7ecc60d1.853ca",
        "type": "function",
        "z": "2d4154ab.c87cdc",
        "name": "DB-08",
        "func": "return { payload: \n    [\n        // Measure\n        {\n            value : parseFloat(msg.payload)\n        },\n        // Tags\n        {\n            Lead: \"Temperature\",\n            checked:\"yes\"\n        }   \n    ]\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1060,
        "wires": [
            [
                "b356bc43.93a4",
                "d45877c9.cc06d8"
            ]
        ]
    }
]